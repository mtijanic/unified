package org.nwnx.nwnx2.jvm.constants;

/**
 * This class contains all unique constants beginning with "FEAT".
 * Non-distinct keys are filtered; only the LAST appearing was
 * kept.
*/
public final class Feat {
  private Feat() {}

  public final static int AIR_DOMAIN_POWER = 311;
  public final static int ALERTNESS = 0;
  public final static int AMBIDEXTERITY = 1;
  public final static int ANIMAL_COMPANION = 199;
  public final static int ANIMAL_DOMAIN_POWER = 312;
  public final static int ANIMATE_DEAD = 889;
  public final static int ARCANE_DEFENSE_ABJURATION = 415;
  public final static int ARCANE_DEFENSE_CONJURATION = 416;
  public final static int ARCANE_DEFENSE_DIVINATION = 417;
  public final static int ARCANE_DEFENSE_ENCHANTMENT = 418;
  public final static int ARCANE_DEFENSE_EVOCATION = 419;
  public final static int ARCANE_DEFENSE_ILLUSION = 420;
  public final static int ARCANE_DEFENSE_NECROMANCY = 421;
  public final static int ARCANE_DEFENSE_TRANSMUTATION = 422;
  public final static int ARMOR_PROFICIENCY_HEAVY = 2;
  public final static int ARMOR_PROFICIENCY_LIGHT = 3;
  public final static int ARMOR_PROFICIENCY_MEDIUM = 4;
  public final static int ARTIST = 378;
  public final static int AURA_OF_COURAGE = 300;
  public final static int BARBARIAN_ENDURANCE = 194;
  public final static int BARBARIAN_RAGE = 293;
  public final static int BARDIC_KNOWLEDGE = 197;
  public final static int BARD_SONGS = 257;
  public final static int BATTLE_TRAINING_VERSUS_GIANTS = 233;
  public final static int BATTLE_TRAINING_VERSUS_GOBLINS = 232;
  public final static int BATTLE_TRAINING_VERSUS_ORCS = 231;
  public final static int BATTLE_TRAINING_VERSUS_REPTILIANS = 242;
  public final static int BLACKGUARD_SNEAK_ATTACK_10D6 = 1013;
  public final static int BLACKGUARD_SNEAK_ATTACK_11D6 = 1014;
  public final static int BLACKGUARD_SNEAK_ATTACK_12D6 = 1015;
  public final static int BLACKGUARD_SNEAK_ATTACK_13D6 = 1016;
  public final static int BLACKGUARD_SNEAK_ATTACK_14D6 = 1017;
  public final static int BLACKGUARD_SNEAK_ATTACK_15D6 = 1018;
  public final static int BLACKGUARD_SNEAK_ATTACK_1D6 = 460;
  public final static int BLACKGUARD_SNEAK_ATTACK_2D6 = 461;
  public final static int BLACKGUARD_SNEAK_ATTACK_3D6 = 462;
  public final static int BLACKGUARD_SNEAK_ATTACK_4D6 = 1007;
  public final static int BLACKGUARD_SNEAK_ATTACK_5D6 = 1008;
  public final static int BLACKGUARD_SNEAK_ATTACK_6D6 = 1009;
  public final static int BLACKGUARD_SNEAK_ATTACK_7D6 = 1010;
  public final static int BLACKGUARD_SNEAK_ATTACK_8D6 = 1011;
  public final static int BLACKGUARD_SNEAK_ATTACK_9D6 = 1012;
  public final static int BLINDSIGHT_10_FEET = 486;
  public final static int BLINDSIGHT_5_FEET = 485;
  public final static int BLINDSIGHT_60_FEET = 488;
  public final static int BLIND_FIGHT = 408;
  public final static int BLOODED = 379;
  public final static int BONE_SKIN_2 = 886;
  public final static int BONE_SKIN_4 = 887;
  public final static int BONE_SKIN_6 = 888;
  public final static int BREW_POTION = 944;
  public final static int BULLHEADED = 380;
  public final static int BULLS_STRENGTH = 478;
  public final static int CALLED_SHOT = 5;
  public final static int CIRCLE_KICK = 409;
  public final static int CLEAVE = 6;
  public final static int COMBAT_CASTING = 7;
  public final static int CONTAGION = 479;
  public final static int COURTLY_MAGOCRACY = 381;
  public final static int CRAFT_HARPER_ITEM = 440;
  public final static int CRAFT_WAND = 946;
  public final static int CRIPPLING_STRIKE = 222;
  public final static int CURSE_SONG = 871;
  public final static int DAMAGE_REDUCTION = 196;
  public final static int DAMAGE_REDUCTION_6 = 948;
  public final static int DARKVISION = 228;
  public final static int DEATHLESS_MASTERY = 896;
  public final static int DEATHLESS_MASTER_TOUCH = 897;
  public final static int DEATHLESS_VIGOR = 891;
  public final static int DEATH_DOMAIN_POWER = 310;
  public final static int DEFENSIVE_ROLL = 223;
  public final static int DEFLECT_ARROWS = 8;
  public final static int DENEIRS_EYE = 437;
  public final static int DESTRUCTION_DOMAIN_POWER = 313;
  public final static int DIAMOND_BODY = 214;
  public final static int DIAMOND_SOUL = 215;
  public final static int DIRTY_FIGHTING = 425;
  public final static int DISARM = 9;
  public final static int DIVINE_GRACE = 217;
  public final static int DIVINE_HEALTH = 219;
  public final static int DIVINE_MIGHT = 413;
  public final static int DIVINE_SHIELD = 414;
  public final static int DIVINE_WRATH = 909;
  public final static int DODGE = 10;
  public final static int DRAGON_ABILITIES = 962;
  public final static int DRAGON_ARMOR = 961;
  public final static int DRAGON_DIS_BREATH = 965;
  public final static int DRAGON_HDINCREASE_D10 = 1044;
  public final static int DRAGON_HDINCREASE_D6 = 1042;
  public final static int DRAGON_HDINCREASE_D8 = 1043;
  public final static int DRAGON_IMMUNE_FIRE = 964;
  public final static int DRAGON_IMMUNE_PARALYSIS = 963;
  public final static int DWARVEN_DEFENDER_DEFENSIVE_STANCE = 947;
  public final static int EARTH_DOMAIN_POWER = 314;
  public final static int ELEMENTAL_SHAPE = 304;
  public final static int EMPOWER_SPELL = 11;
  public final static int EMPTY_BODY = 297;
  public final static int EPIC_ARCANE_ARCHER = 977;
  public final static int EPIC_ARMOR_SKIN = 490;
  public final static int EPIC_ASSASSIN = 978;
  public final static int EPIC_AUTOMATIC_QUICKEN_1 = 857;
  public final static int EPIC_AUTOMATIC_QUICKEN_2 = 858;
  public final static int EPIC_AUTOMATIC_QUICKEN_3 = 859;
  public final static int EPIC_AUTOMATIC_SILENT_SPELL_1 = 860;
  public final static int EPIC_AUTOMATIC_SILENT_SPELL_2 = 861;
  public final static int EPIC_AUTOMATIC_SILENT_SPELL_3 = 862;
  public final static int EPIC_AUTOMATIC_STILL_SPELL_1 = 863;
  public final static int EPIC_AUTOMATIC_STILL_SPELL_2 = 864;
  public final static int EPIC_AUTOMATIC_STILL_SPELL_3 = 865;
  public final static int EPIC_BANE_OF_ENEMIES = 855;
  public final static int EPIC_BARBARIAN = 967;
  public final static int EPIC_BARBARIAN_DAMAGE_REDUCTION = 1067;
  public final static int EPIC_BARD = 968;
  public final static int EPIC_BLACKGUARD = 979;
  public final static int EPIC_BLINDING_SPEED = 491;
  public final static int EPIC_CHARACTER = 1001;
  public final static int EPIC_CLERIC = 969;
  public final static int EPIC_CONSTRUCT_SHAPE = 1061;
  public final static int EPIC_DAMAGE_REDUCTION_3 = 492;
  public final static int EPIC_DAMAGE_REDUCTION_6 = 493;
  public final static int EPIC_DAMAGE_REDUCTION_9 = 494;
  public final static int EPIC_DEVASTATING_CRITICAL_BASTARDSWORD = 528;
  public final static int EPIC_DEVASTATING_CRITICAL_BATTLEAXE = 516;
  public final static int EPIC_DEVASTATING_CRITICAL_CLUB = 495;
  public final static int EPIC_DEVASTATING_CRITICAL_CREATURE = 532;
  public final static int EPIC_DEVASTATING_CRITICAL_DAGGER = 496;
  public final static int EPIC_DEVASTATING_CRITICAL_DART = 497;
  public final static int EPIC_DEVASTATING_CRITICAL_DIREMACE = 529;
  public final static int EPIC_DEVASTATING_CRITICAL_DOUBLEAXE = 530;
  public final static int EPIC_DEVASTATING_CRITICAL_DWAXE = 955;
  public final static int EPIC_DEVASTATING_CRITICAL_GREATAXE = 517;
  public final static int EPIC_DEVASTATING_CRITICAL_GREATSWORD = 513;
  public final static int EPIC_DEVASTATING_CRITICAL_HALBERD = 518;
  public final static int EPIC_DEVASTATING_CRITICAL_HANDAXE = 514;
  public final static int EPIC_DEVASTATING_CRITICAL_HEAVYCROSSBOW = 498;
  public final static int EPIC_DEVASTATING_CRITICAL_HEAVYFLAIL = 522;
  public final static int EPIC_DEVASTATING_CRITICAL_KAMA = 523;
  public final static int EPIC_DEVASTATING_CRITICAL_KATANA = 527;
  public final static int EPIC_DEVASTATING_CRITICAL_KUKRI = 524;
  public final static int EPIC_DEVASTATING_CRITICAL_LIGHTCROSSBOW = 499;
  public final static int EPIC_DEVASTATING_CRITICAL_LIGHTFLAIL = 520;
  public final static int EPIC_DEVASTATING_CRITICAL_LIGHTHAMMER = 519;
  public final static int EPIC_DEVASTATING_CRITICAL_LIGHTMACE = 500;
  public final static int EPIC_DEVASTATING_CRITICAL_LONGBOW = 507;
  public final static int EPIC_DEVASTATING_CRITICAL_LONGSWORD = 512;
  public final static int EPIC_DEVASTATING_CRITICAL_MORNINGSTAR = 501;
  public final static int EPIC_DEVASTATING_CRITICAL_QUARTERSTAFF = 502;
  public final static int EPIC_DEVASTATING_CRITICAL_RAPIER = 510;
  public final static int EPIC_DEVASTATING_CRITICAL_SCIMITAR = 511;
  public final static int EPIC_DEVASTATING_CRITICAL_SCYTHE = 526;
  public final static int EPIC_DEVASTATING_CRITICAL_SHORTBOW = 508;
  public final static int EPIC_DEVASTATING_CRITICAL_SHORTSPEAR = 503;
  public final static int EPIC_DEVASTATING_CRITICAL_SHORTSWORD = 509;
  public final static int EPIC_DEVASTATING_CRITICAL_SHURIKEN = 525;
  public final static int EPIC_DEVASTATING_CRITICAL_SICKLE = 504;
  public final static int EPIC_DEVASTATING_CRITICAL_SLING = 505;
  public final static int EPIC_DEVASTATING_CRITICAL_THROWINGAXE = 515;
  public final static int EPIC_DEVASTATING_CRITICAL_TRIDENT = 1075;
  public final static int EPIC_DEVASTATING_CRITICAL_TWOBLADEDSWORD = 531;
  public final static int EPIC_DEVASTATING_CRITICAL_UNARMED = 506;
  public final static int EPIC_DEVASTATING_CRITICAL_WARHAMMER = 521;
  public final static int EPIC_DEVASTATING_CRITICAL_WHIP = 996;
  public final static int EPIC_DIVINE_CHAMPION = 982;
  public final static int EPIC_DODGE = 856;
  public final static int EPIC_DRUID = 970;
  public final static int EPIC_DRUID_INFINITE_ELEMENTAL_SHAPE = 1069;
  public final static int EPIC_DRUID_INFINITE_WILDSHAPE = 1068;
  public final static int EPIC_DWARVEN_DEFENDER = 985;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_1 = 543;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_10 = 552;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_2 = 544;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_3 = 545;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_4 = 546;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_5 = 547;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_6 = 548;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_7 = 549;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_8 = 550;
  public final static int EPIC_ENERGY_RESISTANCE_ACID_9 = 551;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_1 = 533;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_10 = 542;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_2 = 534;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_3 = 535;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_4 = 536;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_5 = 537;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_6 = 538;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_7 = 539;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_8 = 540;
  public final static int EPIC_ENERGY_RESISTANCE_COLD_9 = 541;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_1 = 563;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_10 = 572;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_2 = 564;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_3 = 565;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_4 = 566;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_5 = 567;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_6 = 568;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_7 = 569;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_8 = 570;
  public final static int EPIC_ENERGY_RESISTANCE_ELECTRICAL_9 = 571;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_1 = 553;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_10 = 562;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_2 = 554;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_3 = 555;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_4 = 556;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_5 = 557;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_6 = 558;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_7 = 559;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_8 = 560;
  public final static int EPIC_ENERGY_RESISTANCE_FIRE_9 = 561;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_1 = 573;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_10 = 582;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_2 = 574;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_3 = 575;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_4 = 576;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_5 = 577;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_6 = 578;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_7 = 579;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_8 = 580;
  public final static int EPIC_ENERGY_RESISTANCE_SONIC_9 = 581;
  public final static int EPIC_EPIC_FIEND = 1003;
  public final static int EPIC_EPIC_SHADOWLORD = 1002;
  public final static int EPIC_FIGHTER = 966;
  public final static int EPIC_FORTITUDE = 583;
  public final static int EPIC_GREAT_CHARISMA_1 = 764;
  public final static int EPIC_GREAT_CHARISMA_10 = 773;
  public final static int EPIC_GREAT_CHARISMA_2 = 765;
  public final static int EPIC_GREAT_CHARISMA_3 = 766;
  public final static int EPIC_GREAT_CHARISMA_4 = 767;
  public final static int EPIC_GREAT_CHARISMA_5 = 768;
  public final static int EPIC_GREAT_CHARISMA_6 = 769;
  public final static int EPIC_GREAT_CHARISMA_7 = 770;
  public final static int EPIC_GREAT_CHARISMA_8 = 771;
  public final static int EPIC_GREAT_CHARISMA_9 = 772;
  public final static int EPIC_GREAT_CONSTITUTION_1 = 774;
  public final static int EPIC_GREAT_CONSTITUTION_10 = 783;
  public final static int EPIC_GREAT_CONSTITUTION_2 = 775;
  public final static int EPIC_GREAT_CONSTITUTION_3 = 776;
  public final static int EPIC_GREAT_CONSTITUTION_4 = 777;
  public final static int EPIC_GREAT_CONSTITUTION_5 = 778;
  public final static int EPIC_GREAT_CONSTITUTION_6 = 779;
  public final static int EPIC_GREAT_CONSTITUTION_7 = 780;
  public final static int EPIC_GREAT_CONSTITUTION_8 = 781;
  public final static int EPIC_GREAT_CONSTITUTION_9 = 782;
  public final static int EPIC_GREAT_DEXTERITY_1 = 784;
  public final static int EPIC_GREAT_DEXTERITY_10 = 793;
  public final static int EPIC_GREAT_DEXTERITY_2 = 785;
  public final static int EPIC_GREAT_DEXTERITY_3 = 786;
  public final static int EPIC_GREAT_DEXTERITY_4 = 787;
  public final static int EPIC_GREAT_DEXTERITY_5 = 788;
  public final static int EPIC_GREAT_DEXTERITY_6 = 789;
  public final static int EPIC_GREAT_DEXTERITY_7 = 790;
  public final static int EPIC_GREAT_DEXTERITY_8 = 791;
  public final static int EPIC_GREAT_DEXTERITY_9 = 792;
  public final static int EPIC_GREAT_INTELLIGENCE_1 = 794;
  public final static int EPIC_GREAT_INTELLIGENCE_10 = 803;
  public final static int EPIC_GREAT_INTELLIGENCE_2 = 795;
  public final static int EPIC_GREAT_INTELLIGENCE_3 = 796;
  public final static int EPIC_GREAT_INTELLIGENCE_4 = 797;
  public final static int EPIC_GREAT_INTELLIGENCE_5 = 798;
  public final static int EPIC_GREAT_INTELLIGENCE_6 = 799;
  public final static int EPIC_GREAT_INTELLIGENCE_7 = 800;
  public final static int EPIC_GREAT_INTELLIGENCE_8 = 801;
  public final static int EPIC_GREAT_INTELLIGENCE_9 = 802;
  public final static int EPIC_GREAT_SMITING_1 = 824;
  public final static int EPIC_GREAT_SMITING_10 = 833;
  public final static int EPIC_GREAT_SMITING_2 = 825;
  public final static int EPIC_GREAT_SMITING_3 = 826;
  public final static int EPIC_GREAT_SMITING_4 = 827;
  public final static int EPIC_GREAT_SMITING_5 = 828;
  public final static int EPIC_GREAT_SMITING_6 = 829;
  public final static int EPIC_GREAT_SMITING_7 = 830;
  public final static int EPIC_GREAT_SMITING_8 = 831;
  public final static int EPIC_GREAT_SMITING_9 = 832;
  public final static int EPIC_GREAT_STRENGTH_1 = 814;
  public final static int EPIC_GREAT_STRENGTH_10 = 823;
  public final static int EPIC_GREAT_STRENGTH_2 = 815;
  public final static int EPIC_GREAT_STRENGTH_3 = 816;
  public final static int EPIC_GREAT_STRENGTH_4 = 817;
  public final static int EPIC_GREAT_STRENGTH_5 = 818;
  public final static int EPIC_GREAT_STRENGTH_6 = 819;
  public final static int EPIC_GREAT_STRENGTH_7 = 820;
  public final static int EPIC_GREAT_STRENGTH_8 = 821;
  public final static int EPIC_GREAT_STRENGTH_9 = 822;
  public final static int EPIC_GREAT_WISDOM_1 = 804;
  public final static int EPIC_GREAT_WISDOM_10 = 813;
  public final static int EPIC_GREAT_WISDOM_2 = 805;
  public final static int EPIC_GREAT_WISDOM_3 = 806;
  public final static int EPIC_GREAT_WISDOM_4 = 807;
  public final static int EPIC_GREAT_WISDOM_5 = 808;
  public final static int EPIC_GREAT_WISDOM_6 = 809;
  public final static int EPIC_GREAT_WISDOM_7 = 810;
  public final static int EPIC_GREAT_WISDOM_8 = 811;
  public final static int EPIC_GREAT_WISDOM_9 = 812;
  public final static int EPIC_HARPER_SCOUT = 981;
  public final static int EPIC_IMPROVED_COMBAT_CASTING = 696;
  public final static int EPIC_IMPROVED_KI_STRIKE_4 = 697;
  public final static int EPIC_IMPROVED_KI_STRIKE_5 = 698;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_1 = 834;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_10 = 843;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_2 = 835;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_3 = 836;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_4 = 837;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_5 = 838;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_6 = 839;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_7 = 840;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_8 = 841;
  public final static int EPIC_IMPROVED_SNEAK_ATTACK_9 = 842;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_1 = 699;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_10 = 708;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_2 = 700;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_3 = 701;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_4 = 702;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_5 = 703;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_6 = 704;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_7 = 705;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_8 = 706;
  public final static int EPIC_IMPROVED_SPELL_RESISTANCE_9 = 707;
  public final static int EPIC_IMPROVED_STUNNING_FIST_1 = 844;
  public final static int EPIC_IMPROVED_STUNNING_FIST_10 = 853;
  public final static int EPIC_IMPROVED_STUNNING_FIST_2 = 845;
  public final static int EPIC_IMPROVED_STUNNING_FIST_3 = 846;
  public final static int EPIC_IMPROVED_STUNNING_FIST_4 = 847;
  public final static int EPIC_IMPROVED_STUNNING_FIST_5 = 848;
  public final static int EPIC_IMPROVED_STUNNING_FIST_6 = 849;
  public final static int EPIC_IMPROVED_STUNNING_FIST_7 = 850;
  public final static int EPIC_IMPROVED_STUNNING_FIST_8 = 851;
  public final static int EPIC_IMPROVED_STUNNING_FIST_9 = 852;
  public final static int EPIC_LASTING_INSPIRATION = 870;
  public final static int EPIC_MONK = 971;
  public final static int EPIC_OUTSIDER_SHAPE = 1060;
  public final static int EPIC_OVERWHELMING_CRITICAL_BASTARDSWORD = 742;
  public final static int EPIC_OVERWHELMING_CRITICAL_BATTLEAXE = 730;
  public final static int EPIC_OVERWHELMING_CRITICAL_CLUB = 709;
  public final static int EPIC_OVERWHELMING_CRITICAL_CREATURE = 746;
  public final static int EPIC_OVERWHELMING_CRITICAL_DAGGER = 710;
  public final static int EPIC_OVERWHELMING_CRITICAL_DART = 711;
  public final static int EPIC_OVERWHELMING_CRITICAL_DIREMACE = 743;
  public final static int EPIC_OVERWHELMING_CRITICAL_DOUBLEAXE = 744;
  public final static int EPIC_OVERWHELMING_CRITICAL_DWAXE = 958;
  public final static int EPIC_OVERWHELMING_CRITICAL_GREATAXE = 731;
  public final static int EPIC_OVERWHELMING_CRITICAL_GREATSWORD = 727;
  public final static int EPIC_OVERWHELMING_CRITICAL_HALBERD = 732;
  public final static int EPIC_OVERWHELMING_CRITICAL_HANDAXE = 728;
  public final static int EPIC_OVERWHELMING_CRITICAL_HEAVYCROSSBOW = 712;
  public final static int EPIC_OVERWHELMING_CRITICAL_HEAVYFLAIL = 736;
  public final static int EPIC_OVERWHELMING_CRITICAL_KAMA = 737;
  public final static int EPIC_OVERWHELMING_CRITICAL_KATANA = 741;
  public final static int EPIC_OVERWHELMING_CRITICAL_KUKRI = 738;
  public final static int EPIC_OVERWHELMING_CRITICAL_LIGHTCROSSBOW = 713;
  public final static int EPIC_OVERWHELMING_CRITICAL_LIGHTFLAIL = 734;
  public final static int EPIC_OVERWHELMING_CRITICAL_LIGHTHAMMER = 733;
  public final static int EPIC_OVERWHELMING_CRITICAL_LIGHTMACE = 714;
  public final static int EPIC_OVERWHELMING_CRITICAL_LONGBOW = 721;
  public final static int EPIC_OVERWHELMING_CRITICAL_LONGSWORD = 726;
  public final static int EPIC_OVERWHELMING_CRITICAL_MORNINGSTAR = 715;
  public final static int EPIC_OVERWHELMING_CRITICAL_QUARTERSTAFF = 716;
  public final static int EPIC_OVERWHELMING_CRITICAL_RAPIER = 724;
  public final static int EPIC_OVERWHELMING_CRITICAL_SCIMITAR = 725;
  public final static int EPIC_OVERWHELMING_CRITICAL_SCYTHE = 740;
  public final static int EPIC_OVERWHELMING_CRITICAL_SHORTBOW = 722;
  public final static int EPIC_OVERWHELMING_CRITICAL_SHORTSPEAR = 717;
  public final static int EPIC_OVERWHELMING_CRITICAL_SHORTSWORD = 723;
  public final static int EPIC_OVERWHELMING_CRITICAL_SHURIKEN = 739;
  public final static int EPIC_OVERWHELMING_CRITICAL_SICKLE = 718;
  public final static int EPIC_OVERWHELMING_CRITICAL_SLING = 719;
  public final static int EPIC_OVERWHELMING_CRITICAL_THROWINGAXE = 729;
  public final static int EPIC_OVERWHELMING_CRITICAL_TRIDENT = 1078;
  public final static int EPIC_OVERWHELMING_CRITICAL_TWOBLADEDSWORD = 745;
  public final static int EPIC_OVERWHELMING_CRITICAL_UNARMED = 720;
  public final static int EPIC_OVERWHELMING_CRITICAL_WARHAMMER = 735;
  public final static int EPIC_OVERWHELMING_CRITICAL_WHIP = 999;
  public final static int EPIC_PALADIN = 972;
  public final static int EPIC_PALE_MASTER = 984;
  public final static int EPIC_PERFECT_HEALTH = 747;
  public final static int EPIC_PROWESS = 584;
  public final static int EPIC_RANGER = 973;
  public final static int EPIC_RED_DRAGON_DISC = 987;
  public final static int EPIC_REFLEXES = 585;
  public final static int EPIC_REPUTATION = 586;
  public final static int EPIC_ROGUE = 974;
  public final static int EPIC_SELF_CONCEALMENT_10 = 748;
  public final static int EPIC_SELF_CONCEALMENT_20 = 749;
  public final static int EPIC_SELF_CONCEALMENT_30 = 750;
  public final static int EPIC_SELF_CONCEALMENT_40 = 751;
  public final static int EPIC_SELF_CONCEALMENT_50 = 752;
  public final static int EPIC_SHADOWDANCER = 980;
  public final static int EPIC_SHIFTER = 986;
  public final static int EPIC_SHIFTER_INFINITE_HUMANOID_SHAPE = 1066;
  public final static int EPIC_SHIFTER_INFINITE_WILDSHAPE_1 = 1062;
  public final static int EPIC_SHIFTER_INFINITE_WILDSHAPE_2 = 1063;
  public final static int EPIC_SHIFTER_INFINITE_WILDSHAPE_3 = 1064;
  public final static int EPIC_SHIFTER_INFINITE_WILDSHAPE_4 = 1065;
  public final static int EPIC_SKILL_FOCUS_ANIMAL_EMPATHY = 587;
  public final static int EPIC_SKILL_FOCUS_APPRAISE = 588;
  public final static int EPIC_SKILL_FOCUS_BLUFF = 917;
  public final static int EPIC_SKILL_FOCUS_CONCENTRATION = 589;
  public final static int EPIC_SKILL_FOCUS_CRAFT_ARMOR = 913;
  public final static int EPIC_SKILL_FOCUS_CRAFT_TRAP = 590;
  public final static int EPIC_SKILL_FOCUS_CRAFT_WEAPON = 914;
  public final static int EPIC_SKILL_FOCUS_DISABLETRAP = 591;
  public final static int EPIC_SKILL_FOCUS_DISCIPLINE = 592;
  public final static int EPIC_SKILL_FOCUS_HEAL = 593;
  public final static int EPIC_SKILL_FOCUS_HIDE = 594;
  public final static int EPIC_SKILL_FOCUS_INTIMIDATE = 918;
  public final static int EPIC_SKILL_FOCUS_LISTEN = 595;
  public final static int EPIC_SKILL_FOCUS_LORE = 596;
  public final static int EPIC_SKILL_FOCUS_MOVESILENTLY = 597;
  public final static int EPIC_SKILL_FOCUS_OPENLOCK = 598;
  public final static int EPIC_SKILL_FOCUS_PARRY = 599;
  public final static int EPIC_SKILL_FOCUS_PERFORM = 600;
  public final static int EPIC_SKILL_FOCUS_PERSUADE = 601;
  public final static int EPIC_SKILL_FOCUS_PICKPOCKET = 602;
  public final static int EPIC_SKILL_FOCUS_SEARCH = 603;
  public final static int EPIC_SKILL_FOCUS_SETTRAP = 604;
  public final static int EPIC_SKILL_FOCUS_SPELLCRAFT = 605;
  public final static int EPIC_SKILL_FOCUS_SPOT = 606;
  public final static int EPIC_SKILL_FOCUS_TAUNT = 607;
  public final static int EPIC_SKILL_FOCUS_TUMBLE = 608;
  public final static int EPIC_SKILL_FOCUS_USEMAGICDEVICE = 609;
  public final static int EPIC_SORCERER = 975;
  public final static int EPIC_SPELL_DRAGON_KNIGHT = 875;
  public final static int EPIC_SPELL_EPIC_WARDING = 990;
  public final static int EPIC_SPELL_FOCUS_ABJURATION = 610;
  public final static int EPIC_SPELL_FOCUS_CONJURATION = 611;
  public final static int EPIC_SPELL_FOCUS_DIVINATION = 612;
  public final static int EPIC_SPELL_FOCUS_ENCHANTMENT = 613;
  public final static int EPIC_SPELL_FOCUS_EVOCATION = 614;
  public final static int EPIC_SPELL_FOCUS_ILLUSION = 615;
  public final static int EPIC_SPELL_FOCUS_NECROMANCY = 616;
  public final static int EPIC_SPELL_FOCUS_TRANSMUTATION = 617;
  public final static int EPIC_SPELL_HELLBALL = 876;
  public final static int EPIC_SPELL_MAGE_ARMOUR = 877;
  public final static int EPIC_SPELL_MUMMY_DUST = 874;
  public final static int EPIC_SPELL_PENETRATION = 618;
  public final static int EPIC_SPELL_RUIN = 878;
  public final static int EPIC_SUPERIOR_INITIATIVE = 753;
  public final static int EPIC_SUPERIOR_WEAPON_FOCUS = 1071;
  public final static int EPIC_TERRIFYING_RAGE = 989;
  public final static int EPIC_THUNDERING_RAGE = 988;
  public final static int EPIC_TOUGHNESS_1 = 754;
  public final static int EPIC_TOUGHNESS_10 = 763;
  public final static int EPIC_TOUGHNESS_2 = 755;
  public final static int EPIC_TOUGHNESS_3 = 756;
  public final static int EPIC_TOUGHNESS_4 = 757;
  public final static int EPIC_TOUGHNESS_5 = 758;
  public final static int EPIC_TOUGHNESS_6 = 759;
  public final static int EPIC_TOUGHNESS_7 = 760;
  public final static int EPIC_TOUGHNESS_8 = 761;
  public final static int EPIC_TOUGHNESS_9 = 762;
  public final static int EPIC_WEAPON_FOCUS_BASTARDSWORD = 652;
  public final static int EPIC_WEAPON_FOCUS_BATTLEAXE = 640;
  public final static int EPIC_WEAPON_FOCUS_CLUB = 619;
  public final static int EPIC_WEAPON_FOCUS_CREATURE = 656;
  public final static int EPIC_WEAPON_FOCUS_DAGGER = 620;
  public final static int EPIC_WEAPON_FOCUS_DART = 621;
  public final static int EPIC_WEAPON_FOCUS_DIREMACE = 653;
  public final static int EPIC_WEAPON_FOCUS_DOUBLEAXE = 654;
  public final static int EPIC_WEAPON_FOCUS_DWAXE = 956;
  public final static int EPIC_WEAPON_FOCUS_GREATAXE = 641;
  public final static int EPIC_WEAPON_FOCUS_GREATSWORD = 637;
  public final static int EPIC_WEAPON_FOCUS_HALBERD = 642;
  public final static int EPIC_WEAPON_FOCUS_HANDAXE = 638;
  public final static int EPIC_WEAPON_FOCUS_HEAVYCROSSBOW = 622;
  public final static int EPIC_WEAPON_FOCUS_HEAVYFLAIL = 646;
  public final static int EPIC_WEAPON_FOCUS_KAMA = 647;
  public final static int EPIC_WEAPON_FOCUS_KATANA = 651;
  public final static int EPIC_WEAPON_FOCUS_KUKRI = 648;
  public final static int EPIC_WEAPON_FOCUS_LIGHTCROSSBOW = 623;
  public final static int EPIC_WEAPON_FOCUS_LIGHTFLAIL = 644;
  public final static int EPIC_WEAPON_FOCUS_LIGHTHAMMER = 643;
  public final static int EPIC_WEAPON_FOCUS_LIGHTMACE = 624;
  public final static int EPIC_WEAPON_FOCUS_LONGBOW = 631;
  public final static int EPIC_WEAPON_FOCUS_LONGSWORD = 636;
  public final static int EPIC_WEAPON_FOCUS_MORNINGSTAR = 625;
  public final static int EPIC_WEAPON_FOCUS_QUARTERSTAFF = 626;
  public final static int EPIC_WEAPON_FOCUS_RAPIER = 634;
  public final static int EPIC_WEAPON_FOCUS_SCIMITAR = 635;
  public final static int EPIC_WEAPON_FOCUS_SCYTHE = 650;
  public final static int EPIC_WEAPON_FOCUS_SHORTBOW = 632;
  public final static int EPIC_WEAPON_FOCUS_SHORTSPEAR = 627;
  public final static int EPIC_WEAPON_FOCUS_SHORTSWORD = 633;
  public final static int EPIC_WEAPON_FOCUS_SHURIKEN = 649;
  public final static int EPIC_WEAPON_FOCUS_SICKLE = 628;
  public final static int EPIC_WEAPON_FOCUS_SLING = 629;
  public final static int EPIC_WEAPON_FOCUS_THROWINGAXE = 639;
  public final static int EPIC_WEAPON_FOCUS_TRIDENT = 1076;
  public final static int EPIC_WEAPON_FOCUS_TWOBLADEDSWORD = 655;
  public final static int EPIC_WEAPON_FOCUS_UNARMED = 630;
  public final static int EPIC_WEAPON_FOCUS_WARHAMMER = 645;
  public final static int EPIC_WEAPON_FOCUS_WHIP = 997;
  public final static int EPIC_WEAPON_MASTER = 983;
  public final static int EPIC_WEAPON_SPECIALIZATION_BASTARDSWORD = 690;
  public final static int EPIC_WEAPON_SPECIALIZATION_BATTLEAXE = 678;
  public final static int EPIC_WEAPON_SPECIALIZATION_CLUB = 657;
  public final static int EPIC_WEAPON_SPECIALIZATION_CREATURE = 694;
  public final static int EPIC_WEAPON_SPECIALIZATION_DAGGER = 658;
  public final static int EPIC_WEAPON_SPECIALIZATION_DART = 659;
  public final static int EPIC_WEAPON_SPECIALIZATION_DIREMACE = 691;
  public final static int EPIC_WEAPON_SPECIALIZATION_DOUBLEAXE = 692;
  public final static int EPIC_WEAPON_SPECIALIZATION_DWAXE = 957;
  public final static int EPIC_WEAPON_SPECIALIZATION_GREATAXE = 679;
  public final static int EPIC_WEAPON_SPECIALIZATION_GREATSWORD = 675;
  public final static int EPIC_WEAPON_SPECIALIZATION_HALBERD = 680;
  public final static int EPIC_WEAPON_SPECIALIZATION_HANDAXE = 676;
  public final static int EPIC_WEAPON_SPECIALIZATION_HEAVYCROSSBOW = 660;
  public final static int EPIC_WEAPON_SPECIALIZATION_HEAVYFLAIL = 684;
  public final static int EPIC_WEAPON_SPECIALIZATION_KAMA = 685;
  public final static int EPIC_WEAPON_SPECIALIZATION_KATANA = 689;
  public final static int EPIC_WEAPON_SPECIALIZATION_KUKRI = 686;
  public final static int EPIC_WEAPON_SPECIALIZATION_LIGHTCROSSBOW = 661;
  public final static int EPIC_WEAPON_SPECIALIZATION_LIGHTFLAIL = 682;
  public final static int EPIC_WEAPON_SPECIALIZATION_LIGHTHAMMER = 681;
  public final static int EPIC_WEAPON_SPECIALIZATION_LIGHTMACE = 662;
  public final static int EPIC_WEAPON_SPECIALIZATION_LONGBOW = 669;
  public final static int EPIC_WEAPON_SPECIALIZATION_LONGSWORD = 674;
  public final static int EPIC_WEAPON_SPECIALIZATION_MORNINGSTAR = 663;
  public final static int EPIC_WEAPON_SPECIALIZATION_QUARTERSTAFF = 664;
  public final static int EPIC_WEAPON_SPECIALIZATION_RAPIER = 672;
  public final static int EPIC_WEAPON_SPECIALIZATION_SCIMITAR = 673;
  public final static int EPIC_WEAPON_SPECIALIZATION_SCYTHE = 688;
  public final static int EPIC_WEAPON_SPECIALIZATION_SHORTBOW = 670;
  public final static int EPIC_WEAPON_SPECIALIZATION_SHORTSPEAR = 665;
  public final static int EPIC_WEAPON_SPECIALIZATION_SHORTSWORD = 671;
  public final static int EPIC_WEAPON_SPECIALIZATION_SHURIKEN = 687;
  public final static int EPIC_WEAPON_SPECIALIZATION_SICKLE = 666;
  public final static int EPIC_WEAPON_SPECIALIZATION_SLING = 667;
  public final static int EPIC_WEAPON_SPECIALIZATION_THROWINGAXE = 677;
  public final static int EPIC_WEAPON_SPECIALIZATION_TRIDENT = 1077;
  public final static int EPIC_WEAPON_SPECIALIZATION_TWOBLADEDSWORD = 693;
  public final static int EPIC_WEAPON_SPECIALIZATION_UNARMED = 668;
  public final static int EPIC_WEAPON_SPECIALIZATION_WARHAMMER = 683;
  public final static int EPIC_WEAPON_SPECIALIZATION_WHIP = 998;
  public final static int EPIC_WILD_SHAPE_DRAGON = 873;
  public final static int EPIC_WILD_SHAPE_UNDEAD = 872;
  public final static int EPIC_WILL = 695;
  public final static int EPIC_WIZARD = 976;
  public final static int EVASION = 206;
  public final static int EVIL_DOMAIN_POWER = 315;
  public final static int EXPERTISE = 389;
  public final static int EXTEND_SPELL = 12;
  public final static int EXTRA_MUSIC = 423;
  public final static int EXTRA_SMITING = 910;
  public final static int EXTRA_STUNNING_ATTACK = 410;
  public final static int EXTRA_TURNING = 13;
  public final static int EYE_OF_GRUUMSH_BLINDING_SPITTLE = 480;
  public final static int EYE_OF_GRUUMSH_BLINDING_SPITTLE_2 = 481;
  public final static int EYE_OF_GRUUMSH_COMMAND_THE_HORDE = 482;
  public final static int EYE_OF_GRUUMSH_RITUAL_SCARRING = 484;
  public final static int EYE_OF_GRUUMSH_SIGHT_OF_GRUUMSH = 487;
  public final static int EYE_OF_GRUUMSH_SWING_BLINDLY = 483;
  public final static int FAVORED_ENEMY_ABERRATION = 268;
  public final static int FAVORED_ENEMY_ANIMAL = 269;
  public final static int FAVORED_ENEMY_BEAST = 270;
  public final static int FAVORED_ENEMY_CONSTRUCT = 271;
  public final static int FAVORED_ENEMY_DRAGON = 272;
  public final static int FAVORED_ENEMY_DWARF = 261;
  public final static int FAVORED_ENEMY_ELEMENTAL = 277;
  public final static int FAVORED_ENEMY_ELF = 262;
  public final static int FAVORED_ENEMY_FEY = 278;
  public final static int FAVORED_ENEMY_GIANT = 279;
  public final static int FAVORED_ENEMY_GNOME = 263;
  public final static int FAVORED_ENEMY_GOBLINOID = 273;
  public final static int FAVORED_ENEMY_HALFELF = 265;
  public final static int FAVORED_ENEMY_HALFLING = 264;
  public final static int FAVORED_ENEMY_HALFORC = 266;
  public final static int FAVORED_ENEMY_HUMAN = 267;
  public final static int FAVORED_ENEMY_MAGICAL_BEAST = 280;
  public final static int FAVORED_ENEMY_MONSTROUS = 274;
  public final static int FAVORED_ENEMY_ORC = 275;
  public final static int FAVORED_ENEMY_OUTSIDER = 281;
  public final static int FAVORED_ENEMY_REPTILIAN = 276;
  public final static int FAVORED_ENEMY_SHAPECHANGER = 284;
  public final static int FAVORED_ENEMY_UNDEAD = 285;
  public final static int FAVORED_ENEMY_VERMIN = 286;
  public final static int FEARLESS = 249;
  public final static int FIRE_DOMAIN_POWER = 316;
  public final static int FLURRY_OF_BLOWS = 204;
  public final static int GOOD_AIM = 250;
  public final static int GOOD_DOMAIN_POWER = 317;
  public final static int GREATER_SPELL_FOCUS_ABJURATION = 393;
  public final static int GREATER_SPELL_FOCUS_CONJURATION = 394;
  public final static int GREATER_SPELL_FOCUS_DIVINATION = 395;
  public final static int GREATER_SPELL_FOCUS_DIVINIATION = 395;
  public final static int GREATER_SPELL_FOCUS_ENCHANTMENT = 396;
  public final static int GREATER_SPELL_FOCUS_EVOCATION = 397;
  public final static int GREATER_SPELL_FOCUS_ILLUSION = 398;
  public final static int GREATER_SPELL_FOCUS_NECROMANCY = 399;
  public final static int GREATER_SPELL_FOCUS_TRANSMUTATION = 400;
  public final static int GREATER_SPELL_PENETRATION = 401;
  public final static int GREATER_WILDSHAPE_1 = 898;
  public final static int GREATER_WILDSHAPE_2 = 900;
  public final static int GREATER_WILDSHAPE_3 = 901;
  public final static int GREATER_WILDSHAPE_4 = 903;
  public final static int GREAT_CLEAVE = 391;
  public final static int GREAT_FORTITUDE = 14;
  public final static int HARDINESS_VERSUS_ENCHANTMENTS = 236;
  public final static int HARDINESS_VERSUS_ILLUSIONS = 241;
  public final static int HARDINESS_VERSUS_POISONS = 229;
  public final static int HARDINESS_VERSUS_SPELLS = 230;
  public final static int HARPER_CATS_GRACE = 442;
  public final static int HARPER_EAGLES_SPLENDOR = 443;
  public final static int HARPER_INVISIBILITY = 444;
  public final static int HARPER_SLEEP = 441;
  public final static int HEALING_DOMAIN_POWER = 318;
  public final static int HIDE_IN_PLAIN_SIGHT = 433;
  public final static int HORSE_ASSIGN_MOUNT = 1094;
  public final static int HORSE_DISMOUNT = 1091;
  public final static int HORSE_MENU = 1089;
  public final static int HORSE_MOUNT = 1090;
  public final static int HORSE_PARTY_DISMOUNT = 1093;
  public final static int HORSE_PARTY_MOUNT = 1092;
  public final static int HUMANOID_SHAPE = 902;
  public final static int IMMUNITY_TO_SLEEP = 235;
  public final static int IMPROVED_CRITICAL_BASTARD_SWORD = 85;
  public final static int IMPROVED_CRITICAL_BATTLE_AXE = 72;
  public final static int IMPROVED_CRITICAL_CLUB = 15;
  public final static int IMPROVED_CRITICAL_CREATURE = 292;
  public final static int IMPROVED_CRITICAL_DAGGER = 52;
  public final static int IMPROVED_CRITICAL_DART = 53;
  public final static int IMPROVED_CRITICAL_DIRE_MACE = 87;
  public final static int IMPROVED_CRITICAL_DOUBLE_AXE = 88;
  public final static int IMPROVED_CRITICAL_DWAXE = 954;
  public final static int IMPROVED_CRITICAL_GREAT_AXE = 73;
  public final static int IMPROVED_CRITICAL_GREAT_SWORD = 69;
  public final static int IMPROVED_CRITICAL_HALBERD = 74;
  public final static int IMPROVED_CRITICAL_HAND_AXE = 70;
  public final static int IMPROVED_CRITICAL_HEAVY_CROSSBOW = 54;
  public final static int IMPROVED_CRITICAL_HEAVY_FLAIL = 78;
  public final static int IMPROVED_CRITICAL_KAMA = 79;
  public final static int IMPROVED_CRITICAL_KATANA = 84;
  public final static int IMPROVED_CRITICAL_KUKRI = 80;
  public final static int IMPROVED_CRITICAL_LIGHT_CROSSBOW = 55;
  public final static int IMPROVED_CRITICAL_LIGHT_FLAIL = 76;
  public final static int IMPROVED_CRITICAL_LIGHT_HAMMER = 75;
  public final static int IMPROVED_CRITICAL_LIGHT_MACE = 56;
  public final static int IMPROVED_CRITICAL_LONGBOW = 63;
  public final static int IMPROVED_CRITICAL_LONG_SWORD = 68;
  public final static int IMPROVED_CRITICAL_MORNING_STAR = 57;
  public final static int IMPROVED_CRITICAL_RAPIER = 66;
  public final static int IMPROVED_CRITICAL_SCIMITAR = 67;
  public final static int IMPROVED_CRITICAL_SCYTHE = 83;
  public final static int IMPROVED_CRITICAL_SHORTBOW = 64;
  public final static int IMPROVED_CRITICAL_SHORT_SWORD = 65;
  public final static int IMPROVED_CRITICAL_SHURIKEN = 82;
  public final static int IMPROVED_CRITICAL_SICKLE = 60;
  public final static int IMPROVED_CRITICAL_SLING = 61;
  public final static int IMPROVED_CRITICAL_SPEAR = 59;
  public final static int IMPROVED_CRITICAL_STAFF = 58;
  public final static int IMPROVED_CRITICAL_THROWING_AXE = 71;
  public final static int IMPROVED_CRITICAL_TRIDENT = 1074;
  public final static int IMPROVED_CRITICAL_TWO_BLADED_SWORD = 89;
  public final static int IMPROVED_CRITICAL_UNARMED_STRIKE = 62;
  public final static int IMPROVED_CRITICAL_WAR_HAMMER = 77;
  public final static int IMPROVED_CRITICAL_WHIP = 995;
  public final static int IMPROVED_DISARM = 16;
  public final static int IMPROVED_EVASION = 212;
  public final static int IMPROVED_EXPERTISE = 390;
  public final static int IMPROVED_INITIATIVE = 377;
  public final static int IMPROVED_KNOCKDOWN = 17;
  public final static int IMPROVED_PARRY = 18;
  public final static int IMPROVED_POWER_ATTACK = 19;
  public final static int IMPROVED_TWO_WEAPON_FIGHTING = 20;
  public final static int IMPROVED_UNARMED_STRIKE = 21;
  public final static int IMPROVED_WHIRLWIND = 868;
  public final static int INCREASE_MULTIPLIER = 883;
  public final static int INFLICT_CRITICAL_WOUNDS = 477;
  public final static int INFLICT_LIGHT_WOUNDS = 474;
  public final static int INFLICT_MODERATE_WOUNDS = 475;
  public final static int INFLICT_SERIOUS_WOUNDS = 476;
  public final static int IRON_WILL = 22;
  public final static int KEEN_SENSE = 240;
  public final static int KI_CRITICAL = 885;
  public final static int KI_DAMAGE = 882;
  public final static int KI_STRIKE = 213;
  public final static int KNOCKDOWN = 23;
  public final static int KNOWLEDGE_DOMAIN_POWER = 319;
  public final static int LAY_ON_HANDS = 299;
  public final static int LIGHTNING_REFLEXES = 24;
  public final static int LINGERING_SONG = 424;
  public final static int LLIIRAS_HEART = 439;
  public final static int LOWLIGHTVISION = 354;
  public final static int LUCKY = 248;
  public final static int LUCK_DOMAIN_POWER = 309;
  public final static int LUCK_OF_HEROES = 382;
  public final static int MAGIC_DOMAIN_POWER = 320;
  public final static int MAXIMIZE_SPELL = 25;
  public final static int MIGHTY_RAGE = 869;
  public final static int MOBILITY = 26;
  public final static int MONK_AC_BONUS = 260;
  public final static int MONK_ENDURANCE = 207;
  public final static int MOUNTED_ARCHERY = 1088;
  public final static int MOUNTED_COMBAT = 1087;
  public final static int NATURE_SENSE = 198;
  public final static int OPPORTUNIST = 224;
  public final static int PALADIN_SUMMON_MOUNT = 1095;
  public final static int PARTIAL_SKILL_AFFINITY_LISTEN = 244;
  public final static int PARTIAL_SKILL_AFFINITY_SEARCH = 245;
  public final static int PARTIAL_SKILL_AFFINITY_SPOT = 246;
  public final static int PDK_FEAR = 1082;
  public final static int PDK_INSPIRE_1 = 1085;
  public final static int PDK_INSPIRE_2 = 1086;
  public final static int PDK_RALLY = 1080;
  public final static int PDK_SHIELD = 1081;
  public final static int PDK_STAND = 1084;
  public final static int PDK_WRATH = 1083;
  public final static int PERFECT_SELF = 216;
  public final static int PLANT_DOMAIN_POWER = 321;
  public final static int PLAYER_TOOL_01 = 1106;
  public final static int PLAYER_TOOL_02 = 1107;
  public final static int PLAYER_TOOL_03 = 1108;
  public final static int PLAYER_TOOL_04 = 1109;
  public final static int PLAYER_TOOL_05 = 1110;
  public final static int PLAYER_TOOL_06 = 1111;
  public final static int PLAYER_TOOL_07 = 1112;
  public final static int PLAYER_TOOL_08 = 1113;
  public final static int PLAYER_TOOL_09 = 1114;
  public final static int PLAYER_TOOL_10 = 1115;
  public final static int POINT_BLANK_SHOT = 27;
  public final static int POWER_ATTACK = 28;
  public final static int PRESTIGE_ARROW_OF_DEATH = 454;
  public final static int PRESTIGE_DARKNESS = 469;
  public final static int PRESTIGE_DARK_BLESSING = 473;
  public final static int PRESTIGE_DEATH_ATTACK_1 = 455;
  public final static int PRESTIGE_DEATH_ATTACK_10 = 1020;
  public final static int PRESTIGE_DEATH_ATTACK_11 = 1021;
  public final static int PRESTIGE_DEATH_ATTACK_12 = 1022;
  public final static int PRESTIGE_DEATH_ATTACK_13 = 1023;
  public final static int PRESTIGE_DEATH_ATTACK_14 = 1024;
  public final static int PRESTIGE_DEATH_ATTACK_15 = 1025;
  public final static int PRESTIGE_DEATH_ATTACK_16 = 1026;
  public final static int PRESTIGE_DEATH_ATTACK_17 = 1027;
  public final static int PRESTIGE_DEATH_ATTACK_18 = 1028;
  public final static int PRESTIGE_DEATH_ATTACK_19 = 1029;
  public final static int PRESTIGE_DEATH_ATTACK_2 = 456;
  public final static int PRESTIGE_DEATH_ATTACK_20 = 1030;
  public final static int PRESTIGE_DEATH_ATTACK_3 = 457;
  public final static int PRESTIGE_DEATH_ATTACK_4 = 458;
  public final static int PRESTIGE_DEATH_ATTACK_5 = 459;
  public final static int PRESTIGE_DEATH_ATTACK_6 = 1004;
  public final static int PRESTIGE_DEATH_ATTACK_7 = 1005;
  public final static int PRESTIGE_DEATH_ATTACK_8 = 1006;
  public final static int PRESTIGE_DEATH_ATTACK_9 = 1019;
  public final static int PRESTIGE_DEFENSIVE_AWARENESS_1 = 949;
  public final static int PRESTIGE_DEFENSIVE_AWARENESS_2 = 950;
  public final static int PRESTIGE_DEFENSIVE_AWARENESS_3 = 951;
  public final static int PRESTIGE_ENCHANT_ARROW_1 = 445;
  public final static int PRESTIGE_ENCHANT_ARROW_10 = 1049;
  public final static int PRESTIGE_ENCHANT_ARROW_11 = 1050;
  public final static int PRESTIGE_ENCHANT_ARROW_12 = 1051;
  public final static int PRESTIGE_ENCHANT_ARROW_13 = 1052;
  public final static int PRESTIGE_ENCHANT_ARROW_14 = 1053;
  public final static int PRESTIGE_ENCHANT_ARROW_15 = 1054;
  public final static int PRESTIGE_ENCHANT_ARROW_16 = 1055;
  public final static int PRESTIGE_ENCHANT_ARROW_17 = 1056;
  public final static int PRESTIGE_ENCHANT_ARROW_18 = 1057;
  public final static int PRESTIGE_ENCHANT_ARROW_19 = 1058;
  public final static int PRESTIGE_ENCHANT_ARROW_2 = 446;
  public final static int PRESTIGE_ENCHANT_ARROW_20 = 1059;
  public final static int PRESTIGE_ENCHANT_ARROW_3 = 447;
  public final static int PRESTIGE_ENCHANT_ARROW_4 = 448;
  public final static int PRESTIGE_ENCHANT_ARROW_5 = 449;
  public final static int PRESTIGE_ENCHANT_ARROW_6 = 1045;
  public final static int PRESTIGE_ENCHANT_ARROW_7 = 1046;
  public final static int PRESTIGE_ENCHANT_ARROW_8 = 1047;
  public final static int PRESTIGE_ENCHANT_ARROW_9 = 1048;
  public final static int PRESTIGE_HAIL_OF_ARROWS = 453;
  public final static int PRESTIGE_IMBUE_ARROW = 450;
  public final static int PRESTIGE_INVISIBILITY_1 = 470;
  public final static int PRESTIGE_INVISIBILITY_2 = 471;
  public final static int PRESTIGE_POISON_SAVE_1 = 463;
  public final static int PRESTIGE_POISON_SAVE_2 = 464;
  public final static int PRESTIGE_POISON_SAVE_3 = 465;
  public final static int PRESTIGE_POISON_SAVE_4 = 466;
  public final static int PRESTIGE_POISON_SAVE_5 = 467;
  public final static int PRESTIGE_POISON_SAVE_EPIC = 1070;
  public final static int PRESTIGE_SEEKER_ARROW_1 = 451;
  public final static int PRESTIGE_SEEKER_ARROW_2 = 452;
  public final static int PRESTIGE_SPELL_GHOSTLY_VISAGE = 468;
  public final static int PROTECTION_DOMAIN_POWER = 308;
  public final static int PURITY_OF_BODY = 209;
  public final static int QUICKEN_SPELL = 29;
  public final static int QUICK_TO_MASTER = 258;
  public final static int QUIVERING_PALM = 296;
  public final static int RAPID_RELOAD = 411;
  public final static int RAPID_SHOT = 30;
  public final static int REMOVE_DISEASE = 302;
  public final static int RESIST_DISEASE = 426;
  public final static int RESIST_ENERGY_ACID = 428;
  public final static int RESIST_ENERGY_COLD = 427;
  public final static int RESIST_ENERGY_ELECTRICAL = 430;
  public final static int RESIST_ENERGY_FIRE = 429;
  public final static int RESIST_ENERGY_SONIC = 431;
  public final static int RESIST_NATURES_LURE = 202;
  public final static int RESIST_POISON = 383;
  public final static int SACRED_DEFENSE_1 = 904;
  public final static int SACRED_DEFENSE_2 = 905;
  public final static int SACRED_DEFENSE_3 = 906;
  public final static int SACRED_DEFENSE_4 = 907;
  public final static int SACRED_DEFENSE_5 = 908;
  public final static int SAP = 31;
  public final static int SCRIBE_SCROLL = 945;
  public final static int SHADOW_DAZE = 434;
  public final static int SHADOW_EVADE = 436;
  public final static int SHIELD_PROFICIENCY = 32;
  public final static int SHOU_DISCIPLE_DODGE_2 = 489;
  public final static int SHOU_DISCIPLE_DODGE_3 = 1031;
  public final static int SHOU_DISCIPLE_MARTIAL_FLURRY_ANY = 899;
  public final static int SHOU_DISCIPLE_MARTIAL_FLURRY_LIGHT = 866;
  public final static int SILENCE_SPELL = 33;
  public final static int SILVER_PALM = 384;
  public final static int SKILLFOCUS_APPRAISE = 404;
  public final static int SKILL_AFFINITY_CONCENTRATION = 243;
  public final static int SKILL_AFFINITY_LISTEN = 237;
  public final static int SKILL_AFFINITY_LORE = 234;
  public final static int SKILL_AFFINITY_MOVE_SILENTLY = 247;
  public final static int SKILL_AFFINITY_SEARCH = 238;
  public final static int SKILL_AFFINITY_SPOT = 239;
  public final static int SKILL_FOCUS_ANIMAL_EMPATHY = 34;
  public final static int SKILL_FOCUS_BLUFF = 915;
  public final static int SKILL_FOCUS_CONCENTRATION = 173;
  public final static int SKILL_FOCUS_CRAFT_ARMOR = 911;
  public final static int SKILL_FOCUS_CRAFT_TRAP = 407;
  public final static int SKILL_FOCUS_CRAFT_WEAPON = 912;
  public final static int SKILL_FOCUS_DISABLE_TRAP = 174;
  public final static int SKILL_FOCUS_DISCIPLINE = 175;
  public final static int SKILL_FOCUS_HEAL = 177;
  public final static int SKILL_FOCUS_HIDE = 178;
  public final static int SKILL_FOCUS_INTIMIDATE = 916;
  public final static int SKILL_FOCUS_LISTEN = 179;
  public final static int SKILL_FOCUS_LORE = 180;
  public final static int SKILL_FOCUS_MOVE_SILENTLY = 181;
  public final static int SKILL_FOCUS_OPEN_LOCK = 182;
  public final static int SKILL_FOCUS_PARRY = 183;
  public final static int SKILL_FOCUS_PERFORM = 184;
  public final static int SKILL_FOCUS_PERSUADE = 185;
  public final static int SKILL_FOCUS_PICK_POCKET = 186;
  public final static int SKILL_FOCUS_SEARCH = 187;
  public final static int SKILL_FOCUS_SET_TRAP = 188;
  public final static int SKILL_FOCUS_SPELLCRAFT = 189;
  public final static int SKILL_FOCUS_SPOT = 190;
  public final static int SKILL_FOCUS_TAUNT = 192;
  public final static int SKILL_FOCUS_TUMBLE = 406;
  public final static int SKILL_FOCUS_USE_MAGIC_DEVICE = 193;
  public final static int SKILL_MASTERY = 225;
  public final static int SLIPPERY_MIND = 259;
  public final static int SMITE_EVIL = 301;
  public final static int SMITE_GOOD = 472;
  public final static int SNAKEBLOOD = 386;
  public final static int SNEAK_ATTACK = 221;
  public final static int SPELL_FOCUS_ABJURATION = 35;
  public final static int SPELL_FOCUS_CONJURATION = 166;
  public final static int SPELL_FOCUS_DIVINATION = 167;
  public final static int SPELL_FOCUS_ENCHANTMENT = 168;
  public final static int SPELL_FOCUS_EVOCATION = 169;
  public final static int SPELL_FOCUS_ILLUSION = 170;
  public final static int SPELL_FOCUS_NECROMANCY = 171;
  public final static int SPELL_FOCUS_TRANSMUTATION = 172;
  public final static int SPELL_PENETRATION = 36;
  public final static int SPRING_ATTACK = 392;
  public final static int STEALTHY = 387;
  public final static int STILL_MIND = 208;
  public final static int STILL_SPELL = 37;
  public final static int STONECUNNING = 227;
  public final static int STRENGTH_DOMAIN_POWER = 307;
  public final static int STRONGSOUL = 388;
  public final static int STUNNING_FIST = 39;
  public final static int SUMMON_FAMILIAR = 303;
  public final static int SUMMON_GREATER_UNDEAD = 895;
  public final static int SUMMON_SHADOW = 435;
  public final static int SUMMON_UNDEAD = 890;
  public final static int SUN_DOMAIN_POWER = 322;
  public final static int SUPERIOR_WEAPON_FOCUS = 884;
  public final static int THUG = 402;
  public final static int TOUGHNESS = 40;
  public final static int TOUGH_AS_BONE = 894;
  public final static int TRACKLESS_STEP = 201;
  public final static int TRAVEL_DOMAIN_POWER = 323;
  public final static int TRICKERY_DOMAIN_POWER = 324;
  public final static int TURN_UNDEAD = 294;
  public final static int TWO_WEAPON_FIGHTING = 41;
  public final static int TYMORAS_SMILE = 438;
  public final static int UNCANNY_DODGE_1 = 195;
  public final static int UNCANNY_DODGE_2 = 251;
  public final static int UNCANNY_DODGE_3 = 252;
  public final static int UNCANNY_DODGE_4 = 253;
  public final static int UNCANNY_DODGE_5 = 254;
  public final static int UNCANNY_DODGE_6 = 255;
  public final static int UNCANNY_REFLEX = 226;
  public final static int UNDEAD_GRAFT_1 = 892;
  public final static int UNDEAD_GRAFT_2 = 893;
  public final static int USE_POISON = 960;
  public final static int VENOM_IMMUNITY = 203;
  public final static int WAR_DOMAIN_POWER = 306;
  public final static int WATER_DOMAIN_POWER = 325;
  public final static int WEAPON_FINESSE = 42;
  public final static int WEAPON_FOCUS_BASTARD_SWORD = 123;
  public final static int WEAPON_FOCUS_BATTLE_AXE = 110;
  public final static int WEAPON_FOCUS_CLUB = 43;
  public final static int WEAPON_FOCUS_CREATURE = 291;
  public final static int WEAPON_FOCUS_DAGGER = 90;
  public final static int WEAPON_FOCUS_DART = 91;
  public final static int WEAPON_FOCUS_DIRE_MACE = 125;
  public final static int WEAPON_FOCUS_DOUBLE_AXE = 126;
  public final static int WEAPON_FOCUS_DWAXE = 952;
  public final static int WEAPON_FOCUS_GREAT_AXE = 111;
  public final static int WEAPON_FOCUS_GREAT_SWORD = 107;
  public final static int WEAPON_FOCUS_HALBERD = 112;
  public final static int WEAPON_FOCUS_HAND_AXE = 108;
  public final static int WEAPON_FOCUS_HEAVY_CROSSBOW = 92;
  public final static int WEAPON_FOCUS_HEAVY_FLAIL = 116;
  public final static int WEAPON_FOCUS_KAMA = 117;
  public final static int WEAPON_FOCUS_KATANA = 122;
  public final static int WEAPON_FOCUS_KUKRI = 118;
  public final static int WEAPON_FOCUS_LIGHT_CROSSBOW = 93;
  public final static int WEAPON_FOCUS_LIGHT_FLAIL = 114;
  public final static int WEAPON_FOCUS_LIGHT_HAMMER = 113;
  public final static int WEAPON_FOCUS_LIGHT_MACE = 94;
  public final static int WEAPON_FOCUS_LONGBOW = 101;
  public final static int WEAPON_FOCUS_LONG_SWORD = 106;
  public final static int WEAPON_FOCUS_MORNING_STAR = 95;
  public final static int WEAPON_FOCUS_RAPIER = 104;
  public final static int WEAPON_FOCUS_SCIMITAR = 105;
  public final static int WEAPON_FOCUS_SCYTHE = 121;
  public final static int WEAPON_FOCUS_SHORTBOW = 102;
  public final static int WEAPON_FOCUS_SHORT_SWORD = 103;
  public final static int WEAPON_FOCUS_SHURIKEN = 120;
  public final static int WEAPON_FOCUS_SICKLE = 98;
  public final static int WEAPON_FOCUS_SLING = 99;
  public final static int WEAPON_FOCUS_SPEAR = 97;
  public final static int WEAPON_FOCUS_STAFF = 96;
  public final static int WEAPON_FOCUS_THROWING_AXE = 109;
  public final static int WEAPON_FOCUS_TRIDENT = 1072;
  public final static int WEAPON_FOCUS_TWO_BLADED_SWORD = 127;
  public final static int WEAPON_FOCUS_UNARMED_STRIKE = 100;
  public final static int WEAPON_FOCUS_WAR_HAMMER = 115;
  public final static int WEAPON_FOCUS_WHIP = 993;
  public final static int WEAPON_OF_CHOICE_BASTARDSWORD = 940;
  public final static int WEAPON_OF_CHOICE_BATTLEAXE = 931;
  public final static int WEAPON_OF_CHOICE_CLUB = 919;
  public final static int WEAPON_OF_CHOICE_DAGGER = 920;
  public final static int WEAPON_OF_CHOICE_DIREMACE = 941;
  public final static int WEAPON_OF_CHOICE_DOUBLEAXE = 942;
  public final static int WEAPON_OF_CHOICE_DWAXE = 959;
  public final static int WEAPON_OF_CHOICE_GREATAXE = 932;
  public final static int WEAPON_OF_CHOICE_GREATSWORD = 929;
  public final static int WEAPON_OF_CHOICE_HALBERD = 933;
  public final static int WEAPON_OF_CHOICE_HANDAXE = 930;
  public final static int WEAPON_OF_CHOICE_HEAVYFLAIL = 937;
  public final static int WEAPON_OF_CHOICE_KAMA = 880;
  public final static int WEAPON_OF_CHOICE_KATANA = 939;
  public final static int WEAPON_OF_CHOICE_KUKRI = 881;
  public final static int WEAPON_OF_CHOICE_LIGHTFLAIL = 935;
  public final static int WEAPON_OF_CHOICE_LIGHTHAMMER = 934;
  public final static int WEAPON_OF_CHOICE_LIGHTMACE = 921;
  public final static int WEAPON_OF_CHOICE_LONGSWORD = 928;
  public final static int WEAPON_OF_CHOICE_MORNINGSTAR = 922;
  public final static int WEAPON_OF_CHOICE_QUARTERSTAFF = 923;
  public final static int WEAPON_OF_CHOICE_RAPIER = 926;
  public final static int WEAPON_OF_CHOICE_SCIMITAR = 927;
  public final static int WEAPON_OF_CHOICE_SCYTHE = 938;
  public final static int WEAPON_OF_CHOICE_SHORTSPEAR = 924;
  public final static int WEAPON_OF_CHOICE_SHORTSWORD = 925;
  public final static int WEAPON_OF_CHOICE_SICKLE = 879;
  public final static int WEAPON_OF_CHOICE_TRIDENT = 1079;
  public final static int WEAPON_OF_CHOICE_TWOBLADEDSWORD = 943;
  public final static int WEAPON_OF_CHOICE_WARHAMMER = 936;
  public final static int WEAPON_OF_CHOICE_WHIP = 1000;
  public final static int WEAPON_PROFICIENCY_CREATURE = 289;
  public final static int WEAPON_PROFICIENCY_DRUID = 48;
  public final static int WEAPON_PROFICIENCY_ELF = 256;
  public final static int WEAPON_PROFICIENCY_EXOTIC = 44;
  public final static int WEAPON_PROFICIENCY_MARTIAL = 45;
  public final static int WEAPON_PROFICIENCY_MONK = 49;
  public final static int WEAPON_PROFICIENCY_ROGUE = 50;
  public final static int WEAPON_PROFICIENCY_SIMPLE = 46;
  public final static int WEAPON_PROFICIENCY_WIZARD = 51;
  public final static int WEAPON_SPECIALIZATION_BASTARD_SWORD = 161;
  public final static int WEAPON_SPECIALIZATION_BATTLE_AXE = 148;
  public final static int WEAPON_SPECIALIZATION_CLUB = 47;
  public final static int WEAPON_SPECIALIZATION_CREATURE = 290;
  public final static int WEAPON_SPECIALIZATION_DAGGER = 128;
  public final static int WEAPON_SPECIALIZATION_DART = 129;
  public final static int WEAPON_SPECIALIZATION_DIRE_MACE = 163;
  public final static int WEAPON_SPECIALIZATION_DOUBLE_AXE = 164;
  public final static int WEAPON_SPECIALIZATION_DWAXE = 953;
  public final static int WEAPON_SPECIALIZATION_GREAT_AXE = 149;
  public final static int WEAPON_SPECIALIZATION_GREAT_SWORD = 145;
  public final static int WEAPON_SPECIALIZATION_HALBERD = 150;
  public final static int WEAPON_SPECIALIZATION_HAND_AXE = 146;
  public final static int WEAPON_SPECIALIZATION_HEAVY_CROSSBOW = 130;
  public final static int WEAPON_SPECIALIZATION_HEAVY_FLAIL = 154;
  public final static int WEAPON_SPECIALIZATION_KAMA = 155;
  public final static int WEAPON_SPECIALIZATION_KATANA = 160;
  public final static int WEAPON_SPECIALIZATION_KUKRI = 156;
  public final static int WEAPON_SPECIALIZATION_LIGHT_CROSSBOW = 131;
  public final static int WEAPON_SPECIALIZATION_LIGHT_FLAIL = 152;
  public final static int WEAPON_SPECIALIZATION_LIGHT_HAMMER = 151;
  public final static int WEAPON_SPECIALIZATION_LIGHT_MACE = 132;
  public final static int WEAPON_SPECIALIZATION_LONGBOW = 139;
  public final static int WEAPON_SPECIALIZATION_LONG_SWORD = 144;
  public final static int WEAPON_SPECIALIZATION_MORNING_STAR = 133;
  public final static int WEAPON_SPECIALIZATION_RAPIER = 142;
  public final static int WEAPON_SPECIALIZATION_SCIMITAR = 143;
  public final static int WEAPON_SPECIALIZATION_SCYTHE = 159;
  public final static int WEAPON_SPECIALIZATION_SHORTBOW = 140;
  public final static int WEAPON_SPECIALIZATION_SHORT_SWORD = 141;
  public final static int WEAPON_SPECIALIZATION_SHURIKEN = 158;
  public final static int WEAPON_SPECIALIZATION_SICKLE = 136;
  public final static int WEAPON_SPECIALIZATION_SLING = 137;
  public final static int WEAPON_SPECIALIZATION_SPEAR = 135;
  public final static int WEAPON_SPECIALIZATION_STAFF = 134;
  public final static int WEAPON_SPECIALIZATION_THROWING_AXE = 147;
  public final static int WEAPON_SPECIALIZATION_TRIDENT = 1073;
  public final static int WEAPON_SPECIALIZATION_TWO_BLADED_SWORD = 165;
  public final static int WEAPON_SPECIALIZATION_UNARMED_STRIKE = 138;
  public final static int WEAPON_SPECIALIZATION_WAR_HAMMER = 153;
  public final static int WEAPON_SPECIALIZATION_WHIP = 994;
  public final static int WHIRLWIND_ATTACK = 867;
  public final static int WHOLENESS_OF_BODY = 211;
  public final static int WILD_SHAPE = 305;
  public final static int WOODLAND_STRIDE = 200;
  public final static int ZEN_ARCHERY = 412;

  public static String nameOf(int value) {
    if (value == 311) return "Feat.AIR_DOMAIN_POWER";
    if (value == 0) return "Feat.ALERTNESS";
    if (value == 1) return "Feat.AMBIDEXTERITY";
    if (value == 199) return "Feat.ANIMAL_COMPANION";
    if (value == 312) return "Feat.ANIMAL_DOMAIN_POWER";
    if (value == 889) return "Feat.ANIMATE_DEAD";
    if (value == 415) return "Feat.ARCANE_DEFENSE_ABJURATION";
    if (value == 416) return "Feat.ARCANE_DEFENSE_CONJURATION";
    if (value == 417) return "Feat.ARCANE_DEFENSE_DIVINATION";
    if (value == 418) return "Feat.ARCANE_DEFENSE_ENCHANTMENT";
    if (value == 419) return "Feat.ARCANE_DEFENSE_EVOCATION";
    if (value == 420) return "Feat.ARCANE_DEFENSE_ILLUSION";
    if (value == 421) return "Feat.ARCANE_DEFENSE_NECROMANCY";
    if (value == 422) return "Feat.ARCANE_DEFENSE_TRANSMUTATION";
    if (value == 2) return "Feat.ARMOR_PROFICIENCY_HEAVY";
    if (value == 3) return "Feat.ARMOR_PROFICIENCY_LIGHT";
    if (value == 4) return "Feat.ARMOR_PROFICIENCY_MEDIUM";
    if (value == 378) return "Feat.ARTIST";
    if (value == 300) return "Feat.AURA_OF_COURAGE";
    if (value == 194) return "Feat.BARBARIAN_ENDURANCE";
    if (value == 293) return "Feat.BARBARIAN_RAGE";
    if (value == 197) return "Feat.BARDIC_KNOWLEDGE";
    if (value == 257) return "Feat.BARD_SONGS";
    if (value == 233) return "Feat.BATTLE_TRAINING_VERSUS_GIANTS";
    if (value == 232) return "Feat.BATTLE_TRAINING_VERSUS_GOBLINS";
    if (value == 231) return "Feat.BATTLE_TRAINING_VERSUS_ORCS";
    if (value == 242) return "Feat.BATTLE_TRAINING_VERSUS_REPTILIANS";
    if (value == 1013) return "Feat.BLACKGUARD_SNEAK_ATTACK_10D6";
    if (value == 1014) return "Feat.BLACKGUARD_SNEAK_ATTACK_11D6";
    if (value == 1015) return "Feat.BLACKGUARD_SNEAK_ATTACK_12D6";
    if (value == 1016) return "Feat.BLACKGUARD_SNEAK_ATTACK_13D6";
    if (value == 1017) return "Feat.BLACKGUARD_SNEAK_ATTACK_14D6";
    if (value == 1018) return "Feat.BLACKGUARD_SNEAK_ATTACK_15D6";
    if (value == 460) return "Feat.BLACKGUARD_SNEAK_ATTACK_1D6";
    if (value == 461) return "Feat.BLACKGUARD_SNEAK_ATTACK_2D6";
    if (value == 462) return "Feat.BLACKGUARD_SNEAK_ATTACK_3D6";
    if (value == 1007) return "Feat.BLACKGUARD_SNEAK_ATTACK_4D6";
    if (value == 1008) return "Feat.BLACKGUARD_SNEAK_ATTACK_5D6";
    if (value == 1009) return "Feat.BLACKGUARD_SNEAK_ATTACK_6D6";
    if (value == 1010) return "Feat.BLACKGUARD_SNEAK_ATTACK_7D6";
    if (value == 1011) return "Feat.BLACKGUARD_SNEAK_ATTACK_8D6";
    if (value == 1012) return "Feat.BLACKGUARD_SNEAK_ATTACK_9D6";
    if (value == 486) return "Feat.BLINDSIGHT_10_FEET";
    if (value == 485) return "Feat.BLINDSIGHT_5_FEET";
    if (value == 488) return "Feat.BLINDSIGHT_60_FEET";
    if (value == 408) return "Feat.BLIND_FIGHT";
    if (value == 379) return "Feat.BLOODED";
    if (value == 886) return "Feat.BONE_SKIN_2";
    if (value == 887) return "Feat.BONE_SKIN_4";
    if (value == 888) return "Feat.BONE_SKIN_6";
    if (value == 944) return "Feat.BREW_POTION";
    if (value == 380) return "Feat.BULLHEADED";
    if (value == 478) return "Feat.BULLS_STRENGTH";
    if (value == 5) return "Feat.CALLED_SHOT";
    if (value == 409) return "Feat.CIRCLE_KICK";
    if (value == 6) return "Feat.CLEAVE";
    if (value == 7) return "Feat.COMBAT_CASTING";
    if (value == 479) return "Feat.CONTAGION";
    if (value == 381) return "Feat.COURTLY_MAGOCRACY";
    if (value == 440) return "Feat.CRAFT_HARPER_ITEM";
    if (value == 946) return "Feat.CRAFT_WAND";
    if (value == 222) return "Feat.CRIPPLING_STRIKE";
    if (value == 871) return "Feat.CURSE_SONG";
    if (value == 196) return "Feat.DAMAGE_REDUCTION";
    if (value == 948) return "Feat.DAMAGE_REDUCTION_6";
    if (value == 228) return "Feat.DARKVISION";
    if (value == 896) return "Feat.DEATHLESS_MASTERY";
    if (value == 897) return "Feat.DEATHLESS_MASTER_TOUCH";
    if (value == 891) return "Feat.DEATHLESS_VIGOR";
    if (value == 310) return "Feat.DEATH_DOMAIN_POWER";
    if (value == 223) return "Feat.DEFENSIVE_ROLL";
    if (value == 8) return "Feat.DEFLECT_ARROWS";
    if (value == 437) return "Feat.DENEIRS_EYE";
    if (value == 313) return "Feat.DESTRUCTION_DOMAIN_POWER";
    if (value == 214) return "Feat.DIAMOND_BODY";
    if (value == 215) return "Feat.DIAMOND_SOUL";
    if (value == 425) return "Feat.DIRTY_FIGHTING";
    if (value == 9) return "Feat.DISARM";
    if (value == 217) return "Feat.DIVINE_GRACE";
    if (value == 219) return "Feat.DIVINE_HEALTH";
    if (value == 413) return "Feat.DIVINE_MIGHT";
    if (value == 414) return "Feat.DIVINE_SHIELD";
    if (value == 909) return "Feat.DIVINE_WRATH";
    if (value == 10) return "Feat.DODGE";
    if (value == 962) return "Feat.DRAGON_ABILITIES";
    if (value == 961) return "Feat.DRAGON_ARMOR";
    if (value == 965) return "Feat.DRAGON_DIS_BREATH";
    if (value == 1044) return "Feat.DRAGON_HDINCREASE_D10";
    if (value == 1042) return "Feat.DRAGON_HDINCREASE_D6";
    if (value == 1043) return "Feat.DRAGON_HDINCREASE_D8";
    if (value == 964) return "Feat.DRAGON_IMMUNE_FIRE";
    if (value == 963) return "Feat.DRAGON_IMMUNE_PARALYSIS";
    if (value == 947) return "Feat.DWARVEN_DEFENDER_DEFENSIVE_STANCE";
    if (value == 314) return "Feat.EARTH_DOMAIN_POWER";
    if (value == 304) return "Feat.ELEMENTAL_SHAPE";
    if (value == 11) return "Feat.EMPOWER_SPELL";
    if (value == 297) return "Feat.EMPTY_BODY";
    if (value == 977) return "Feat.EPIC_ARCANE_ARCHER";
    if (value == 490) return "Feat.EPIC_ARMOR_SKIN";
    if (value == 978) return "Feat.EPIC_ASSASSIN";
    if (value == 857) return "Feat.EPIC_AUTOMATIC_QUICKEN_1";
    if (value == 858) return "Feat.EPIC_AUTOMATIC_QUICKEN_2";
    if (value == 859) return "Feat.EPIC_AUTOMATIC_QUICKEN_3";
    if (value == 860) return "Feat.EPIC_AUTOMATIC_SILENT_SPELL_1";
    if (value == 861) return "Feat.EPIC_AUTOMATIC_SILENT_SPELL_2";
    if (value == 862) return "Feat.EPIC_AUTOMATIC_SILENT_SPELL_3";
    if (value == 863) return "Feat.EPIC_AUTOMATIC_STILL_SPELL_1";
    if (value == 864) return "Feat.EPIC_AUTOMATIC_STILL_SPELL_2";
    if (value == 865) return "Feat.EPIC_AUTOMATIC_STILL_SPELL_3";
    if (value == 855) return "Feat.EPIC_BANE_OF_ENEMIES";
    if (value == 967) return "Feat.EPIC_BARBARIAN";
    if (value == 1067) return "Feat.EPIC_BARBARIAN_DAMAGE_REDUCTION";
    if (value == 968) return "Feat.EPIC_BARD";
    if (value == 979) return "Feat.EPIC_BLACKGUARD";
    if (value == 491) return "Feat.EPIC_BLINDING_SPEED";
    if (value == 1001) return "Feat.EPIC_CHARACTER";
    if (value == 969) return "Feat.EPIC_CLERIC";
    if (value == 1061) return "Feat.EPIC_CONSTRUCT_SHAPE";
    if (value == 492) return "Feat.EPIC_DAMAGE_REDUCTION_3";
    if (value == 493) return "Feat.EPIC_DAMAGE_REDUCTION_6";
    if (value == 494) return "Feat.EPIC_DAMAGE_REDUCTION_9";
    if (value == 528) return "Feat.EPIC_DEVASTATING_CRITICAL_BASTARDSWORD";
    if (value == 516) return "Feat.EPIC_DEVASTATING_CRITICAL_BATTLEAXE";
    if (value == 495) return "Feat.EPIC_DEVASTATING_CRITICAL_CLUB";
    if (value == 532) return "Feat.EPIC_DEVASTATING_CRITICAL_CREATURE";
    if (value == 496) return "Feat.EPIC_DEVASTATING_CRITICAL_DAGGER";
    if (value == 497) return "Feat.EPIC_DEVASTATING_CRITICAL_DART";
    if (value == 529) return "Feat.EPIC_DEVASTATING_CRITICAL_DIREMACE";
    if (value == 530) return "Feat.EPIC_DEVASTATING_CRITICAL_DOUBLEAXE";
    if (value == 955) return "Feat.EPIC_DEVASTATING_CRITICAL_DWAXE";
    if (value == 517) return "Feat.EPIC_DEVASTATING_CRITICAL_GREATAXE";
    if (value == 513) return "Feat.EPIC_DEVASTATING_CRITICAL_GREATSWORD";
    if (value == 518) return "Feat.EPIC_DEVASTATING_CRITICAL_HALBERD";
    if (value == 514) return "Feat.EPIC_DEVASTATING_CRITICAL_HANDAXE";
    if (value == 498) return "Feat.EPIC_DEVASTATING_CRITICAL_HEAVYCROSSBOW";
    if (value == 522) return "Feat.EPIC_DEVASTATING_CRITICAL_HEAVYFLAIL";
    if (value == 523) return "Feat.EPIC_DEVASTATING_CRITICAL_KAMA";
    if (value == 527) return "Feat.EPIC_DEVASTATING_CRITICAL_KATANA";
    if (value == 524) return "Feat.EPIC_DEVASTATING_CRITICAL_KUKRI";
    if (value == 499) return "Feat.EPIC_DEVASTATING_CRITICAL_LIGHTCROSSBOW";
    if (value == 520) return "Feat.EPIC_DEVASTATING_CRITICAL_LIGHTFLAIL";
    if (value == 519) return "Feat.EPIC_DEVASTATING_CRITICAL_LIGHTHAMMER";
    if (value == 500) return "Feat.EPIC_DEVASTATING_CRITICAL_LIGHTMACE";
    if (value == 507) return "Feat.EPIC_DEVASTATING_CRITICAL_LONGBOW";
    if (value == 512) return "Feat.EPIC_DEVASTATING_CRITICAL_LONGSWORD";
    if (value == 501) return "Feat.EPIC_DEVASTATING_CRITICAL_MORNINGSTAR";
    if (value == 502) return "Feat.EPIC_DEVASTATING_CRITICAL_QUARTERSTAFF";
    if (value == 510) return "Feat.EPIC_DEVASTATING_CRITICAL_RAPIER";
    if (value == 511) return "Feat.EPIC_DEVASTATING_CRITICAL_SCIMITAR";
    if (value == 526) return "Feat.EPIC_DEVASTATING_CRITICAL_SCYTHE";
    if (value == 508) return "Feat.EPIC_DEVASTATING_CRITICAL_SHORTBOW";
    if (value == 503) return "Feat.EPIC_DEVASTATING_CRITICAL_SHORTSPEAR";
    if (value == 509) return "Feat.EPIC_DEVASTATING_CRITICAL_SHORTSWORD";
    if (value == 525) return "Feat.EPIC_DEVASTATING_CRITICAL_SHURIKEN";
    if (value == 504) return "Feat.EPIC_DEVASTATING_CRITICAL_SICKLE";
    if (value == 505) return "Feat.EPIC_DEVASTATING_CRITICAL_SLING";
    if (value == 515) return "Feat.EPIC_DEVASTATING_CRITICAL_THROWINGAXE";
    if (value == 1075) return "Feat.EPIC_DEVASTATING_CRITICAL_TRIDENT";
    if (value == 531) return "Feat.EPIC_DEVASTATING_CRITICAL_TWOBLADEDSWORD";
    if (value == 506) return "Feat.EPIC_DEVASTATING_CRITICAL_UNARMED";
    if (value == 521) return "Feat.EPIC_DEVASTATING_CRITICAL_WARHAMMER";
    if (value == 996) return "Feat.EPIC_DEVASTATING_CRITICAL_WHIP";
    if (value == 982) return "Feat.EPIC_DIVINE_CHAMPION";
    if (value == 856) return "Feat.EPIC_DODGE";
    if (value == 970) return "Feat.EPIC_DRUID";
    if (value == 1069) return "Feat.EPIC_DRUID_INFINITE_ELEMENTAL_SHAPE";
    if (value == 1068) return "Feat.EPIC_DRUID_INFINITE_WILDSHAPE";
    if (value == 985) return "Feat.EPIC_DWARVEN_DEFENDER";
    if (value == 543) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_1";
    if (value == 552) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_10";
    if (value == 544) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_2";
    if (value == 545) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_3";
    if (value == 546) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_4";
    if (value == 547) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_5";
    if (value == 548) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_6";
    if (value == 549) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_7";
    if (value == 550) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_8";
    if (value == 551) return "Feat.EPIC_ENERGY_RESISTANCE_ACID_9";
    if (value == 533) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_1";
    if (value == 542) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_10";
    if (value == 534) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_2";
    if (value == 535) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_3";
    if (value == 536) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_4";
    if (value == 537) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_5";
    if (value == 538) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_6";
    if (value == 539) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_7";
    if (value == 540) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_8";
    if (value == 541) return "Feat.EPIC_ENERGY_RESISTANCE_COLD_9";
    if (value == 563) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_1";
    if (value == 572) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_10";
    if (value == 564) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_2";
    if (value == 565) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_3";
    if (value == 566) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_4";
    if (value == 567) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_5";
    if (value == 568) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_6";
    if (value == 569) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_7";
    if (value == 570) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_8";
    if (value == 571) return "Feat.EPIC_ENERGY_RESISTANCE_ELECTRICAL_9";
    if (value == 553) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_1";
    if (value == 562) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_10";
    if (value == 554) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_2";
    if (value == 555) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_3";
    if (value == 556) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_4";
    if (value == 557) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_5";
    if (value == 558) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_6";
    if (value == 559) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_7";
    if (value == 560) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_8";
    if (value == 561) return "Feat.EPIC_ENERGY_RESISTANCE_FIRE_9";
    if (value == 573) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_1";
    if (value == 582) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_10";
    if (value == 574) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_2";
    if (value == 575) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_3";
    if (value == 576) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_4";
    if (value == 577) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_5";
    if (value == 578) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_6";
    if (value == 579) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_7";
    if (value == 580) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_8";
    if (value == 581) return "Feat.EPIC_ENERGY_RESISTANCE_SONIC_9";
    if (value == 1003) return "Feat.EPIC_EPIC_FIEND";
    if (value == 1002) return "Feat.EPIC_EPIC_SHADOWLORD";
    if (value == 966) return "Feat.EPIC_FIGHTER";
    if (value == 583) return "Feat.EPIC_FORTITUDE";
    if (value == 764) return "Feat.EPIC_GREAT_CHARISMA_1";
    if (value == 773) return "Feat.EPIC_GREAT_CHARISMA_10";
    if (value == 765) return "Feat.EPIC_GREAT_CHARISMA_2";
    if (value == 766) return "Feat.EPIC_GREAT_CHARISMA_3";
    if (value == 767) return "Feat.EPIC_GREAT_CHARISMA_4";
    if (value == 768) return "Feat.EPIC_GREAT_CHARISMA_5";
    if (value == 769) return "Feat.EPIC_GREAT_CHARISMA_6";
    if (value == 770) return "Feat.EPIC_GREAT_CHARISMA_7";
    if (value == 771) return "Feat.EPIC_GREAT_CHARISMA_8";
    if (value == 772) return "Feat.EPIC_GREAT_CHARISMA_9";
    if (value == 774) return "Feat.EPIC_GREAT_CONSTITUTION_1";
    if (value == 783) return "Feat.EPIC_GREAT_CONSTITUTION_10";
    if (value == 775) return "Feat.EPIC_GREAT_CONSTITUTION_2";
    if (value == 776) return "Feat.EPIC_GREAT_CONSTITUTION_3";
    if (value == 777) return "Feat.EPIC_GREAT_CONSTITUTION_4";
    if (value == 778) return "Feat.EPIC_GREAT_CONSTITUTION_5";
    if (value == 779) return "Feat.EPIC_GREAT_CONSTITUTION_6";
    if (value == 780) return "Feat.EPIC_GREAT_CONSTITUTION_7";
    if (value == 781) return "Feat.EPIC_GREAT_CONSTITUTION_8";
    if (value == 782) return "Feat.EPIC_GREAT_CONSTITUTION_9";
    if (value == 784) return "Feat.EPIC_GREAT_DEXTERITY_1";
    if (value == 793) return "Feat.EPIC_GREAT_DEXTERITY_10";
    if (value == 785) return "Feat.EPIC_GREAT_DEXTERITY_2";
    if (value == 786) return "Feat.EPIC_GREAT_DEXTERITY_3";
    if (value == 787) return "Feat.EPIC_GREAT_DEXTERITY_4";
    if (value == 788) return "Feat.EPIC_GREAT_DEXTERITY_5";
    if (value == 789) return "Feat.EPIC_GREAT_DEXTERITY_6";
    if (value == 790) return "Feat.EPIC_GREAT_DEXTERITY_7";
    if (value == 791) return "Feat.EPIC_GREAT_DEXTERITY_8";
    if (value == 792) return "Feat.EPIC_GREAT_DEXTERITY_9";
    if (value == 794) return "Feat.EPIC_GREAT_INTELLIGENCE_1";
    if (value == 803) return "Feat.EPIC_GREAT_INTELLIGENCE_10";
    if (value == 795) return "Feat.EPIC_GREAT_INTELLIGENCE_2";
    if (value == 796) return "Feat.EPIC_GREAT_INTELLIGENCE_3";
    if (value == 797) return "Feat.EPIC_GREAT_INTELLIGENCE_4";
    if (value == 798) return "Feat.EPIC_GREAT_INTELLIGENCE_5";
    if (value == 799) return "Feat.EPIC_GREAT_INTELLIGENCE_6";
    if (value == 800) return "Feat.EPIC_GREAT_INTELLIGENCE_7";
    if (value == 801) return "Feat.EPIC_GREAT_INTELLIGENCE_8";
    if (value == 802) return "Feat.EPIC_GREAT_INTELLIGENCE_9";
    if (value == 824) return "Feat.EPIC_GREAT_SMITING_1";
    if (value == 833) return "Feat.EPIC_GREAT_SMITING_10";
    if (value == 825) return "Feat.EPIC_GREAT_SMITING_2";
    if (value == 826) return "Feat.EPIC_GREAT_SMITING_3";
    if (value == 827) return "Feat.EPIC_GREAT_SMITING_4";
    if (value == 828) return "Feat.EPIC_GREAT_SMITING_5";
    if (value == 829) return "Feat.EPIC_GREAT_SMITING_6";
    if (value == 830) return "Feat.EPIC_GREAT_SMITING_7";
    if (value == 831) return "Feat.EPIC_GREAT_SMITING_8";
    if (value == 832) return "Feat.EPIC_GREAT_SMITING_9";
    if (value == 814) return "Feat.EPIC_GREAT_STRENGTH_1";
    if (value == 823) return "Feat.EPIC_GREAT_STRENGTH_10";
    if (value == 815) return "Feat.EPIC_GREAT_STRENGTH_2";
    if (value == 816) return "Feat.EPIC_GREAT_STRENGTH_3";
    if (value == 817) return "Feat.EPIC_GREAT_STRENGTH_4";
    if (value == 818) return "Feat.EPIC_GREAT_STRENGTH_5";
    if (value == 819) return "Feat.EPIC_GREAT_STRENGTH_6";
    if (value == 820) return "Feat.EPIC_GREAT_STRENGTH_7";
    if (value == 821) return "Feat.EPIC_GREAT_STRENGTH_8";
    if (value == 822) return "Feat.EPIC_GREAT_STRENGTH_9";
    if (value == 804) return "Feat.EPIC_GREAT_WISDOM_1";
    if (value == 813) return "Feat.EPIC_GREAT_WISDOM_10";
    if (value == 805) return "Feat.EPIC_GREAT_WISDOM_2";
    if (value == 806) return "Feat.EPIC_GREAT_WISDOM_3";
    if (value == 807) return "Feat.EPIC_GREAT_WISDOM_4";
    if (value == 808) return "Feat.EPIC_GREAT_WISDOM_5";
    if (value == 809) return "Feat.EPIC_GREAT_WISDOM_6";
    if (value == 810) return "Feat.EPIC_GREAT_WISDOM_7";
    if (value == 811) return "Feat.EPIC_GREAT_WISDOM_8";
    if (value == 812) return "Feat.EPIC_GREAT_WISDOM_9";
    if (value == 981) return "Feat.EPIC_HARPER_SCOUT";
    if (value == 696) return "Feat.EPIC_IMPROVED_COMBAT_CASTING";
    if (value == 697) return "Feat.EPIC_IMPROVED_KI_STRIKE_4";
    if (value == 698) return "Feat.EPIC_IMPROVED_KI_STRIKE_5";
    if (value == 834) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_1";
    if (value == 843) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_10";
    if (value == 835) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_2";
    if (value == 836) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_3";
    if (value == 837) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_4";
    if (value == 838) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_5";
    if (value == 839) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_6";
    if (value == 840) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_7";
    if (value == 841) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_8";
    if (value == 842) return "Feat.EPIC_IMPROVED_SNEAK_ATTACK_9";
    if (value == 699) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_1";
    if (value == 708) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_10";
    if (value == 700) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_2";
    if (value == 701) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_3";
    if (value == 702) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_4";
    if (value == 703) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_5";
    if (value == 704) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_6";
    if (value == 705) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_7";
    if (value == 706) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_8";
    if (value == 707) return "Feat.EPIC_IMPROVED_SPELL_RESISTANCE_9";
    if (value == 844) return "Feat.EPIC_IMPROVED_STUNNING_FIST_1";
    if (value == 853) return "Feat.EPIC_IMPROVED_STUNNING_FIST_10";
    if (value == 845) return "Feat.EPIC_IMPROVED_STUNNING_FIST_2";
    if (value == 846) return "Feat.EPIC_IMPROVED_STUNNING_FIST_3";
    if (value == 847) return "Feat.EPIC_IMPROVED_STUNNING_FIST_4";
    if (value == 848) return "Feat.EPIC_IMPROVED_STUNNING_FIST_5";
    if (value == 849) return "Feat.EPIC_IMPROVED_STUNNING_FIST_6";
    if (value == 850) return "Feat.EPIC_IMPROVED_STUNNING_FIST_7";
    if (value == 851) return "Feat.EPIC_IMPROVED_STUNNING_FIST_8";
    if (value == 852) return "Feat.EPIC_IMPROVED_STUNNING_FIST_9";
    if (value == 870) return "Feat.EPIC_LASTING_INSPIRATION";
    if (value == 971) return "Feat.EPIC_MONK";
    if (value == 1060) return "Feat.EPIC_OUTSIDER_SHAPE";
    if (value == 742) return "Feat.EPIC_OVERWHELMING_CRITICAL_BASTARDSWORD";
    if (value == 730) return "Feat.EPIC_OVERWHELMING_CRITICAL_BATTLEAXE";
    if (value == 709) return "Feat.EPIC_OVERWHELMING_CRITICAL_CLUB";
    if (value == 746) return "Feat.EPIC_OVERWHELMING_CRITICAL_CREATURE";
    if (value == 710) return "Feat.EPIC_OVERWHELMING_CRITICAL_DAGGER";
    if (value == 711) return "Feat.EPIC_OVERWHELMING_CRITICAL_DART";
    if (value == 743) return "Feat.EPIC_OVERWHELMING_CRITICAL_DIREMACE";
    if (value == 744) return "Feat.EPIC_OVERWHELMING_CRITICAL_DOUBLEAXE";
    if (value == 958) return "Feat.EPIC_OVERWHELMING_CRITICAL_DWAXE";
    if (value == 731) return "Feat.EPIC_OVERWHELMING_CRITICAL_GREATAXE";
    if (value == 727) return "Feat.EPIC_OVERWHELMING_CRITICAL_GREATSWORD";
    if (value == 732) return "Feat.EPIC_OVERWHELMING_CRITICAL_HALBERD";
    if (value == 728) return "Feat.EPIC_OVERWHELMING_CRITICAL_HANDAXE";
    if (value == 712) return "Feat.EPIC_OVERWHELMING_CRITICAL_HEAVYCROSSBOW";
    if (value == 736) return "Feat.EPIC_OVERWHELMING_CRITICAL_HEAVYFLAIL";
    if (value == 737) return "Feat.EPIC_OVERWHELMING_CRITICAL_KAMA";
    if (value == 741) return "Feat.EPIC_OVERWHELMING_CRITICAL_KATANA";
    if (value == 738) return "Feat.EPIC_OVERWHELMING_CRITICAL_KUKRI";
    if (value == 713) return "Feat.EPIC_OVERWHELMING_CRITICAL_LIGHTCROSSBOW";
    if (value == 734) return "Feat.EPIC_OVERWHELMING_CRITICAL_LIGHTFLAIL";
    if (value == 733) return "Feat.EPIC_OVERWHELMING_CRITICAL_LIGHTHAMMER";
    if (value == 714) return "Feat.EPIC_OVERWHELMING_CRITICAL_LIGHTMACE";
    if (value == 721) return "Feat.EPIC_OVERWHELMING_CRITICAL_LONGBOW";
    if (value == 726) return "Feat.EPIC_OVERWHELMING_CRITICAL_LONGSWORD";
    if (value == 715) return "Feat.EPIC_OVERWHELMING_CRITICAL_MORNINGSTAR";
    if (value == 716) return "Feat.EPIC_OVERWHELMING_CRITICAL_QUARTERSTAFF";
    if (value == 724) return "Feat.EPIC_OVERWHELMING_CRITICAL_RAPIER";
    if (value == 725) return "Feat.EPIC_OVERWHELMING_CRITICAL_SCIMITAR";
    if (value == 740) return "Feat.EPIC_OVERWHELMING_CRITICAL_SCYTHE";
    if (value == 722) return "Feat.EPIC_OVERWHELMING_CRITICAL_SHORTBOW";
    if (value == 717) return "Feat.EPIC_OVERWHELMING_CRITICAL_SHORTSPEAR";
    if (value == 723) return "Feat.EPIC_OVERWHELMING_CRITICAL_SHORTSWORD";
    if (value == 739) return "Feat.EPIC_OVERWHELMING_CRITICAL_SHURIKEN";
    if (value == 718) return "Feat.EPIC_OVERWHELMING_CRITICAL_SICKLE";
    if (value == 719) return "Feat.EPIC_OVERWHELMING_CRITICAL_SLING";
    if (value == 729) return "Feat.EPIC_OVERWHELMING_CRITICAL_THROWINGAXE";
    if (value == 1078) return "Feat.EPIC_OVERWHELMING_CRITICAL_TRIDENT";
    if (value == 745) return "Feat.EPIC_OVERWHELMING_CRITICAL_TWOBLADEDSWORD";
    if (value == 720) return "Feat.EPIC_OVERWHELMING_CRITICAL_UNARMED";
    if (value == 735) return "Feat.EPIC_OVERWHELMING_CRITICAL_WARHAMMER";
    if (value == 999) return "Feat.EPIC_OVERWHELMING_CRITICAL_WHIP";
    if (value == 972) return "Feat.EPIC_PALADIN";
    if (value == 984) return "Feat.EPIC_PALE_MASTER";
    if (value == 747) return "Feat.EPIC_PERFECT_HEALTH";
    if (value == 584) return "Feat.EPIC_PROWESS";
    if (value == 973) return "Feat.EPIC_RANGER";
    if (value == 987) return "Feat.EPIC_RED_DRAGON_DISC";
    if (value == 585) return "Feat.EPIC_REFLEXES";
    if (value == 586) return "Feat.EPIC_REPUTATION";
    if (value == 974) return "Feat.EPIC_ROGUE";
    if (value == 748) return "Feat.EPIC_SELF_CONCEALMENT_10";
    if (value == 749) return "Feat.EPIC_SELF_CONCEALMENT_20";
    if (value == 750) return "Feat.EPIC_SELF_CONCEALMENT_30";
    if (value == 751) return "Feat.EPIC_SELF_CONCEALMENT_40";
    if (value == 752) return "Feat.EPIC_SELF_CONCEALMENT_50";
    if (value == 980) return "Feat.EPIC_SHADOWDANCER";
    if (value == 986) return "Feat.EPIC_SHIFTER";
    if (value == 1066) return "Feat.EPIC_SHIFTER_INFINITE_HUMANOID_SHAPE";
    if (value == 1062) return "Feat.EPIC_SHIFTER_INFINITE_WILDSHAPE_1";
    if (value == 1063) return "Feat.EPIC_SHIFTER_INFINITE_WILDSHAPE_2";
    if (value == 1064) return "Feat.EPIC_SHIFTER_INFINITE_WILDSHAPE_3";
    if (value == 1065) return "Feat.EPIC_SHIFTER_INFINITE_WILDSHAPE_4";
    if (value == 587) return "Feat.EPIC_SKILL_FOCUS_ANIMAL_EMPATHY";
    if (value == 588) return "Feat.EPIC_SKILL_FOCUS_APPRAISE";
    if (value == 917) return "Feat.EPIC_SKILL_FOCUS_BLUFF";
    if (value == 589) return "Feat.EPIC_SKILL_FOCUS_CONCENTRATION";
    if (value == 913) return "Feat.EPIC_SKILL_FOCUS_CRAFT_ARMOR";
    if (value == 590) return "Feat.EPIC_SKILL_FOCUS_CRAFT_TRAP";
    if (value == 914) return "Feat.EPIC_SKILL_FOCUS_CRAFT_WEAPON";
    if (value == 591) return "Feat.EPIC_SKILL_FOCUS_DISABLETRAP";
    if (value == 592) return "Feat.EPIC_SKILL_FOCUS_DISCIPLINE";
    if (value == 593) return "Feat.EPIC_SKILL_FOCUS_HEAL";
    if (value == 594) return "Feat.EPIC_SKILL_FOCUS_HIDE";
    if (value == 918) return "Feat.EPIC_SKILL_FOCUS_INTIMIDATE";
    if (value == 595) return "Feat.EPIC_SKILL_FOCUS_LISTEN";
    if (value == 596) return "Feat.EPIC_SKILL_FOCUS_LORE";
    if (value == 597) return "Feat.EPIC_SKILL_FOCUS_MOVESILENTLY";
    if (value == 598) return "Feat.EPIC_SKILL_FOCUS_OPENLOCK";
    if (value == 599) return "Feat.EPIC_SKILL_FOCUS_PARRY";
    if (value == 600) return "Feat.EPIC_SKILL_FOCUS_PERFORM";
    if (value == 601) return "Feat.EPIC_SKILL_FOCUS_PERSUADE";
    if (value == 602) return "Feat.EPIC_SKILL_FOCUS_PICKPOCKET";
    if (value == 603) return "Feat.EPIC_SKILL_FOCUS_SEARCH";
    if (value == 604) return "Feat.EPIC_SKILL_FOCUS_SETTRAP";
    if (value == 605) return "Feat.EPIC_SKILL_FOCUS_SPELLCRAFT";
    if (value == 606) return "Feat.EPIC_SKILL_FOCUS_SPOT";
    if (value == 607) return "Feat.EPIC_SKILL_FOCUS_TAUNT";
    if (value == 608) return "Feat.EPIC_SKILL_FOCUS_TUMBLE";
    if (value == 609) return "Feat.EPIC_SKILL_FOCUS_USEMAGICDEVICE";
    if (value == 975) return "Feat.EPIC_SORCERER";
    if (value == 875) return "Feat.EPIC_SPELL_DRAGON_KNIGHT";
    if (value == 990) return "Feat.EPIC_SPELL_EPIC_WARDING";
    if (value == 610) return "Feat.EPIC_SPELL_FOCUS_ABJURATION";
    if (value == 611) return "Feat.EPIC_SPELL_FOCUS_CONJURATION";
    if (value == 612) return "Feat.EPIC_SPELL_FOCUS_DIVINATION";
    if (value == 613) return "Feat.EPIC_SPELL_FOCUS_ENCHANTMENT";
    if (value == 614) return "Feat.EPIC_SPELL_FOCUS_EVOCATION";
    if (value == 615) return "Feat.EPIC_SPELL_FOCUS_ILLUSION";
    if (value == 616) return "Feat.EPIC_SPELL_FOCUS_NECROMANCY";
    if (value == 617) return "Feat.EPIC_SPELL_FOCUS_TRANSMUTATION";
    if (value == 876) return "Feat.EPIC_SPELL_HELLBALL";
    if (value == 877) return "Feat.EPIC_SPELL_MAGE_ARMOUR";
    if (value == 874) return "Feat.EPIC_SPELL_MUMMY_DUST";
    if (value == 618) return "Feat.EPIC_SPELL_PENETRATION";
    if (value == 878) return "Feat.EPIC_SPELL_RUIN";
    if (value == 753) return "Feat.EPIC_SUPERIOR_INITIATIVE";
    if (value == 1071) return "Feat.EPIC_SUPERIOR_WEAPON_FOCUS";
    if (value == 989) return "Feat.EPIC_TERRIFYING_RAGE";
    if (value == 988) return "Feat.EPIC_THUNDERING_RAGE";
    if (value == 754) return "Feat.EPIC_TOUGHNESS_1";
    if (value == 763) return "Feat.EPIC_TOUGHNESS_10";
    if (value == 755) return "Feat.EPIC_TOUGHNESS_2";
    if (value == 756) return "Feat.EPIC_TOUGHNESS_3";
    if (value == 757) return "Feat.EPIC_TOUGHNESS_4";
    if (value == 758) return "Feat.EPIC_TOUGHNESS_5";
    if (value == 759) return "Feat.EPIC_TOUGHNESS_6";
    if (value == 760) return "Feat.EPIC_TOUGHNESS_7";
    if (value == 761) return "Feat.EPIC_TOUGHNESS_8";
    if (value == 762) return "Feat.EPIC_TOUGHNESS_9";
    if (value == 652) return "Feat.EPIC_WEAPON_FOCUS_BASTARDSWORD";
    if (value == 640) return "Feat.EPIC_WEAPON_FOCUS_BATTLEAXE";
    if (value == 619) return "Feat.EPIC_WEAPON_FOCUS_CLUB";
    if (value == 656) return "Feat.EPIC_WEAPON_FOCUS_CREATURE";
    if (value == 620) return "Feat.EPIC_WEAPON_FOCUS_DAGGER";
    if (value == 621) return "Feat.EPIC_WEAPON_FOCUS_DART";
    if (value == 653) return "Feat.EPIC_WEAPON_FOCUS_DIREMACE";
    if (value == 654) return "Feat.EPIC_WEAPON_FOCUS_DOUBLEAXE";
    if (value == 956) return "Feat.EPIC_WEAPON_FOCUS_DWAXE";
    if (value == 641) return "Feat.EPIC_WEAPON_FOCUS_GREATAXE";
    if (value == 637) return "Feat.EPIC_WEAPON_FOCUS_GREATSWORD";
    if (value == 642) return "Feat.EPIC_WEAPON_FOCUS_HALBERD";
    if (value == 638) return "Feat.EPIC_WEAPON_FOCUS_HANDAXE";
    if (value == 622) return "Feat.EPIC_WEAPON_FOCUS_HEAVYCROSSBOW";
    if (value == 646) return "Feat.EPIC_WEAPON_FOCUS_HEAVYFLAIL";
    if (value == 647) return "Feat.EPIC_WEAPON_FOCUS_KAMA";
    if (value == 651) return "Feat.EPIC_WEAPON_FOCUS_KATANA";
    if (value == 648) return "Feat.EPIC_WEAPON_FOCUS_KUKRI";
    if (value == 623) return "Feat.EPIC_WEAPON_FOCUS_LIGHTCROSSBOW";
    if (value == 644) return "Feat.EPIC_WEAPON_FOCUS_LIGHTFLAIL";
    if (value == 643) return "Feat.EPIC_WEAPON_FOCUS_LIGHTHAMMER";
    if (value == 624) return "Feat.EPIC_WEAPON_FOCUS_LIGHTMACE";
    if (value == 631) return "Feat.EPIC_WEAPON_FOCUS_LONGBOW";
    if (value == 636) return "Feat.EPIC_WEAPON_FOCUS_LONGSWORD";
    if (value == 625) return "Feat.EPIC_WEAPON_FOCUS_MORNINGSTAR";
    if (value == 626) return "Feat.EPIC_WEAPON_FOCUS_QUARTERSTAFF";
    if (value == 634) return "Feat.EPIC_WEAPON_FOCUS_RAPIER";
    if (value == 635) return "Feat.EPIC_WEAPON_FOCUS_SCIMITAR";
    if (value == 650) return "Feat.EPIC_WEAPON_FOCUS_SCYTHE";
    if (value == 632) return "Feat.EPIC_WEAPON_FOCUS_SHORTBOW";
    if (value == 627) return "Feat.EPIC_WEAPON_FOCUS_SHORTSPEAR";
    if (value == 633) return "Feat.EPIC_WEAPON_FOCUS_SHORTSWORD";
    if (value == 649) return "Feat.EPIC_WEAPON_FOCUS_SHURIKEN";
    if (value == 628) return "Feat.EPIC_WEAPON_FOCUS_SICKLE";
    if (value == 629) return "Feat.EPIC_WEAPON_FOCUS_SLING";
    if (value == 639) return "Feat.EPIC_WEAPON_FOCUS_THROWINGAXE";
    if (value == 1076) return "Feat.EPIC_WEAPON_FOCUS_TRIDENT";
    if (value == 655) return "Feat.EPIC_WEAPON_FOCUS_TWOBLADEDSWORD";
    if (value == 630) return "Feat.EPIC_WEAPON_FOCUS_UNARMED";
    if (value == 645) return "Feat.EPIC_WEAPON_FOCUS_WARHAMMER";
    if (value == 997) return "Feat.EPIC_WEAPON_FOCUS_WHIP";
    if (value == 983) return "Feat.EPIC_WEAPON_MASTER";
    if (value == 690) return "Feat.EPIC_WEAPON_SPECIALIZATION_BASTARDSWORD";
    if (value == 678) return "Feat.EPIC_WEAPON_SPECIALIZATION_BATTLEAXE";
    if (value == 657) return "Feat.EPIC_WEAPON_SPECIALIZATION_CLUB";
    if (value == 694) return "Feat.EPIC_WEAPON_SPECIALIZATION_CREATURE";
    if (value == 658) return "Feat.EPIC_WEAPON_SPECIALIZATION_DAGGER";
    if (value == 659) return "Feat.EPIC_WEAPON_SPECIALIZATION_DART";
    if (value == 691) return "Feat.EPIC_WEAPON_SPECIALIZATION_DIREMACE";
    if (value == 692) return "Feat.EPIC_WEAPON_SPECIALIZATION_DOUBLEAXE";
    if (value == 957) return "Feat.EPIC_WEAPON_SPECIALIZATION_DWAXE";
    if (value == 679) return "Feat.EPIC_WEAPON_SPECIALIZATION_GREATAXE";
    if (value == 675) return "Feat.EPIC_WEAPON_SPECIALIZATION_GREATSWORD";
    if (value == 680) return "Feat.EPIC_WEAPON_SPECIALIZATION_HALBERD";
    if (value == 676) return "Feat.EPIC_WEAPON_SPECIALIZATION_HANDAXE";
    if (value == 660) return "Feat.EPIC_WEAPON_SPECIALIZATION_HEAVYCROSSBOW";
    if (value == 684) return "Feat.EPIC_WEAPON_SPECIALIZATION_HEAVYFLAIL";
    if (value == 685) return "Feat.EPIC_WEAPON_SPECIALIZATION_KAMA";
    if (value == 689) return "Feat.EPIC_WEAPON_SPECIALIZATION_KATANA";
    if (value == 686) return "Feat.EPIC_WEAPON_SPECIALIZATION_KUKRI";
    if (value == 661) return "Feat.EPIC_WEAPON_SPECIALIZATION_LIGHTCROSSBOW";
    if (value == 682) return "Feat.EPIC_WEAPON_SPECIALIZATION_LIGHTFLAIL";
    if (value == 681) return "Feat.EPIC_WEAPON_SPECIALIZATION_LIGHTHAMMER";
    if (value == 662) return "Feat.EPIC_WEAPON_SPECIALIZATION_LIGHTMACE";
    if (value == 669) return "Feat.EPIC_WEAPON_SPECIALIZATION_LONGBOW";
    if (value == 674) return "Feat.EPIC_WEAPON_SPECIALIZATION_LONGSWORD";
    if (value == 663) return "Feat.EPIC_WEAPON_SPECIALIZATION_MORNINGSTAR";
    if (value == 664) return "Feat.EPIC_WEAPON_SPECIALIZATION_QUARTERSTAFF";
    if (value == 672) return "Feat.EPIC_WEAPON_SPECIALIZATION_RAPIER";
    if (value == 673) return "Feat.EPIC_WEAPON_SPECIALIZATION_SCIMITAR";
    if (value == 688) return "Feat.EPIC_WEAPON_SPECIALIZATION_SCYTHE";
    if (value == 670) return "Feat.EPIC_WEAPON_SPECIALIZATION_SHORTBOW";
    if (value == 665) return "Feat.EPIC_WEAPON_SPECIALIZATION_SHORTSPEAR";
    if (value == 671) return "Feat.EPIC_WEAPON_SPECIALIZATION_SHORTSWORD";
    if (value == 687) return "Feat.EPIC_WEAPON_SPECIALIZATION_SHURIKEN";
    if (value == 666) return "Feat.EPIC_WEAPON_SPECIALIZATION_SICKLE";
    if (value == 667) return "Feat.EPIC_WEAPON_SPECIALIZATION_SLING";
    if (value == 677) return "Feat.EPIC_WEAPON_SPECIALIZATION_THROWINGAXE";
    if (value == 1077) return "Feat.EPIC_WEAPON_SPECIALIZATION_TRIDENT";
    if (value == 693) return "Feat.EPIC_WEAPON_SPECIALIZATION_TWOBLADEDSWORD";
    if (value == 668) return "Feat.EPIC_WEAPON_SPECIALIZATION_UNARMED";
    if (value == 683) return "Feat.EPIC_WEAPON_SPECIALIZATION_WARHAMMER";
    if (value == 998) return "Feat.EPIC_WEAPON_SPECIALIZATION_WHIP";
    if (value == 873) return "Feat.EPIC_WILD_SHAPE_DRAGON";
    if (value == 872) return "Feat.EPIC_WILD_SHAPE_UNDEAD";
    if (value == 695) return "Feat.EPIC_WILL";
    if (value == 976) return "Feat.EPIC_WIZARD";
    if (value == 206) return "Feat.EVASION";
    if (value == 315) return "Feat.EVIL_DOMAIN_POWER";
    if (value == 389) return "Feat.EXPERTISE";
    if (value == 12) return "Feat.EXTEND_SPELL";
    if (value == 423) return "Feat.EXTRA_MUSIC";
    if (value == 910) return "Feat.EXTRA_SMITING";
    if (value == 410) return "Feat.EXTRA_STUNNING_ATTACK";
    if (value == 13) return "Feat.EXTRA_TURNING";
    if (value == 480) return "Feat.EYE_OF_GRUUMSH_BLINDING_SPITTLE";
    if (value == 481) return "Feat.EYE_OF_GRUUMSH_BLINDING_SPITTLE_2";
    if (value == 482) return "Feat.EYE_OF_GRUUMSH_COMMAND_THE_HORDE";
    if (value == 484) return "Feat.EYE_OF_GRUUMSH_RITUAL_SCARRING";
    if (value == 487) return "Feat.EYE_OF_GRUUMSH_SIGHT_OF_GRUUMSH";
    if (value == 483) return "Feat.EYE_OF_GRUUMSH_SWING_BLINDLY";
    if (value == 268) return "Feat.FAVORED_ENEMY_ABERRATION";
    if (value == 269) return "Feat.FAVORED_ENEMY_ANIMAL";
    if (value == 270) return "Feat.FAVORED_ENEMY_BEAST";
    if (value == 271) return "Feat.FAVORED_ENEMY_CONSTRUCT";
    if (value == 272) return "Feat.FAVORED_ENEMY_DRAGON";
    if (value == 261) return "Feat.FAVORED_ENEMY_DWARF";
    if (value == 277) return "Feat.FAVORED_ENEMY_ELEMENTAL";
    if (value == 262) return "Feat.FAVORED_ENEMY_ELF";
    if (value == 278) return "Feat.FAVORED_ENEMY_FEY";
    if (value == 279) return "Feat.FAVORED_ENEMY_GIANT";
    if (value == 263) return "Feat.FAVORED_ENEMY_GNOME";
    if (value == 273) return "Feat.FAVORED_ENEMY_GOBLINOID";
    if (value == 265) return "Feat.FAVORED_ENEMY_HALFELF";
    if (value == 264) return "Feat.FAVORED_ENEMY_HALFLING";
    if (value == 266) return "Feat.FAVORED_ENEMY_HALFORC";
    if (value == 267) return "Feat.FAVORED_ENEMY_HUMAN";
    if (value == 280) return "Feat.FAVORED_ENEMY_MAGICAL_BEAST";
    if (value == 274) return "Feat.FAVORED_ENEMY_MONSTROUS";
    if (value == 275) return "Feat.FAVORED_ENEMY_ORC";
    if (value == 281) return "Feat.FAVORED_ENEMY_OUTSIDER";
    if (value == 276) return "Feat.FAVORED_ENEMY_REPTILIAN";
    if (value == 284) return "Feat.FAVORED_ENEMY_SHAPECHANGER";
    if (value == 285) return "Feat.FAVORED_ENEMY_UNDEAD";
    if (value == 286) return "Feat.FAVORED_ENEMY_VERMIN";
    if (value == 249) return "Feat.FEARLESS";
    if (value == 316) return "Feat.FIRE_DOMAIN_POWER";
    if (value == 204) return "Feat.FLURRY_OF_BLOWS";
    if (value == 250) return "Feat.GOOD_AIM";
    if (value == 317) return "Feat.GOOD_DOMAIN_POWER";
    if (value == 393) return "Feat.GREATER_SPELL_FOCUS_ABJURATION";
    if (value == 394) return "Feat.GREATER_SPELL_FOCUS_CONJURATION";
    if (value == 395) return "Feat.GREATER_SPELL_FOCUS_DIVINATION";
    if (value == 395) return "Feat.GREATER_SPELL_FOCUS_DIVINIATION";
    if (value == 396) return "Feat.GREATER_SPELL_FOCUS_ENCHANTMENT";
    if (value == 397) return "Feat.GREATER_SPELL_FOCUS_EVOCATION";
    if (value == 398) return "Feat.GREATER_SPELL_FOCUS_ILLUSION";
    if (value == 399) return "Feat.GREATER_SPELL_FOCUS_NECROMANCY";
    if (value == 400) return "Feat.GREATER_SPELL_FOCUS_TRANSMUTATION";
    if (value == 401) return "Feat.GREATER_SPELL_PENETRATION";
    if (value == 898) return "Feat.GREATER_WILDSHAPE_1";
    if (value == 900) return "Feat.GREATER_WILDSHAPE_2";
    if (value == 901) return "Feat.GREATER_WILDSHAPE_3";
    if (value == 903) return "Feat.GREATER_WILDSHAPE_4";
    if (value == 391) return "Feat.GREAT_CLEAVE";
    if (value == 14) return "Feat.GREAT_FORTITUDE";
    if (value == 236) return "Feat.HARDINESS_VERSUS_ENCHANTMENTS";
    if (value == 241) return "Feat.HARDINESS_VERSUS_ILLUSIONS";
    if (value == 229) return "Feat.HARDINESS_VERSUS_POISONS";
    if (value == 230) return "Feat.HARDINESS_VERSUS_SPELLS";
    if (value == 442) return "Feat.HARPER_CATS_GRACE";
    if (value == 443) return "Feat.HARPER_EAGLES_SPLENDOR";
    if (value == 444) return "Feat.HARPER_INVISIBILITY";
    if (value == 441) return "Feat.HARPER_SLEEP";
    if (value == 318) return "Feat.HEALING_DOMAIN_POWER";
    if (value == 433) return "Feat.HIDE_IN_PLAIN_SIGHT";
    if (value == 1094) return "Feat.HORSE_ASSIGN_MOUNT";
    if (value == 1091) return "Feat.HORSE_DISMOUNT";
    if (value == 1089) return "Feat.HORSE_MENU";
    if (value == 1090) return "Feat.HORSE_MOUNT";
    if (value == 1093) return "Feat.HORSE_PARTY_DISMOUNT";
    if (value == 1092) return "Feat.HORSE_PARTY_MOUNT";
    if (value == 902) return "Feat.HUMANOID_SHAPE";
    if (value == 235) return "Feat.IMMUNITY_TO_SLEEP";
    if (value == 85) return "Feat.IMPROVED_CRITICAL_BASTARD_SWORD";
    if (value == 72) return "Feat.IMPROVED_CRITICAL_BATTLE_AXE";
    if (value == 15) return "Feat.IMPROVED_CRITICAL_CLUB";
    if (value == 292) return "Feat.IMPROVED_CRITICAL_CREATURE";
    if (value == 52) return "Feat.IMPROVED_CRITICAL_DAGGER";
    if (value == 53) return "Feat.IMPROVED_CRITICAL_DART";
    if (value == 87) return "Feat.IMPROVED_CRITICAL_DIRE_MACE";
    if (value == 88) return "Feat.IMPROVED_CRITICAL_DOUBLE_AXE";
    if (value == 954) return "Feat.IMPROVED_CRITICAL_DWAXE";
    if (value == 73) return "Feat.IMPROVED_CRITICAL_GREAT_AXE";
    if (value == 69) return "Feat.IMPROVED_CRITICAL_GREAT_SWORD";
    if (value == 74) return "Feat.IMPROVED_CRITICAL_HALBERD";
    if (value == 70) return "Feat.IMPROVED_CRITICAL_HAND_AXE";
    if (value == 54) return "Feat.IMPROVED_CRITICAL_HEAVY_CROSSBOW";
    if (value == 78) return "Feat.IMPROVED_CRITICAL_HEAVY_FLAIL";
    if (value == 79) return "Feat.IMPROVED_CRITICAL_KAMA";
    if (value == 84) return "Feat.IMPROVED_CRITICAL_KATANA";
    if (value == 80) return "Feat.IMPROVED_CRITICAL_KUKRI";
    if (value == 55) return "Feat.IMPROVED_CRITICAL_LIGHT_CROSSBOW";
    if (value == 76) return "Feat.IMPROVED_CRITICAL_LIGHT_FLAIL";
    if (value == 75) return "Feat.IMPROVED_CRITICAL_LIGHT_HAMMER";
    if (value == 56) return "Feat.IMPROVED_CRITICAL_LIGHT_MACE";
    if (value == 63) return "Feat.IMPROVED_CRITICAL_LONGBOW";
    if (value == 68) return "Feat.IMPROVED_CRITICAL_LONG_SWORD";
    if (value == 57) return "Feat.IMPROVED_CRITICAL_MORNING_STAR";
    if (value == 66) return "Feat.IMPROVED_CRITICAL_RAPIER";
    if (value == 67) return "Feat.IMPROVED_CRITICAL_SCIMITAR";
    if (value == 83) return "Feat.IMPROVED_CRITICAL_SCYTHE";
    if (value == 64) return "Feat.IMPROVED_CRITICAL_SHORTBOW";
    if (value == 65) return "Feat.IMPROVED_CRITICAL_SHORT_SWORD";
    if (value == 82) return "Feat.IMPROVED_CRITICAL_SHURIKEN";
    if (value == 60) return "Feat.IMPROVED_CRITICAL_SICKLE";
    if (value == 61) return "Feat.IMPROVED_CRITICAL_SLING";
    if (value == 59) return "Feat.IMPROVED_CRITICAL_SPEAR";
    if (value == 58) return "Feat.IMPROVED_CRITICAL_STAFF";
    if (value == 71) return "Feat.IMPROVED_CRITICAL_THROWING_AXE";
    if (value == 1074) return "Feat.IMPROVED_CRITICAL_TRIDENT";
    if (value == 89) return "Feat.IMPROVED_CRITICAL_TWO_BLADED_SWORD";
    if (value == 62) return "Feat.IMPROVED_CRITICAL_UNARMED_STRIKE";
    if (value == 77) return "Feat.IMPROVED_CRITICAL_WAR_HAMMER";
    if (value == 995) return "Feat.IMPROVED_CRITICAL_WHIP";
    if (value == 16) return "Feat.IMPROVED_DISARM";
    if (value == 212) return "Feat.IMPROVED_EVASION";
    if (value == 390) return "Feat.IMPROVED_EXPERTISE";
    if (value == 377) return "Feat.IMPROVED_INITIATIVE";
    if (value == 17) return "Feat.IMPROVED_KNOCKDOWN";
    if (value == 18) return "Feat.IMPROVED_PARRY";
    if (value == 19) return "Feat.IMPROVED_POWER_ATTACK";
    if (value == 20) return "Feat.IMPROVED_TWO_WEAPON_FIGHTING";
    if (value == 21) return "Feat.IMPROVED_UNARMED_STRIKE";
    if (value == 868) return "Feat.IMPROVED_WHIRLWIND";
    if (value == 883) return "Feat.INCREASE_MULTIPLIER";
    if (value == 477) return "Feat.INFLICT_CRITICAL_WOUNDS";
    if (value == 474) return "Feat.INFLICT_LIGHT_WOUNDS";
    if (value == 475) return "Feat.INFLICT_MODERATE_WOUNDS";
    if (value == 476) return "Feat.INFLICT_SERIOUS_WOUNDS";
    if (value == 22) return "Feat.IRON_WILL";
    if (value == 240) return "Feat.KEEN_SENSE";
    if (value == 885) return "Feat.KI_CRITICAL";
    if (value == 882) return "Feat.KI_DAMAGE";
    if (value == 213) return "Feat.KI_STRIKE";
    if (value == 23) return "Feat.KNOCKDOWN";
    if (value == 319) return "Feat.KNOWLEDGE_DOMAIN_POWER";
    if (value == 299) return "Feat.LAY_ON_HANDS";
    if (value == 24) return "Feat.LIGHTNING_REFLEXES";
    if (value == 424) return "Feat.LINGERING_SONG";
    if (value == 439) return "Feat.LLIIRAS_HEART";
    if (value == 354) return "Feat.LOWLIGHTVISION";
    if (value == 248) return "Feat.LUCKY";
    if (value == 309) return "Feat.LUCK_DOMAIN_POWER";
    if (value == 382) return "Feat.LUCK_OF_HEROES";
    if (value == 320) return "Feat.MAGIC_DOMAIN_POWER";
    if (value == 25) return "Feat.MAXIMIZE_SPELL";
    if (value == 869) return "Feat.MIGHTY_RAGE";
    if (value == 26) return "Feat.MOBILITY";
    if (value == 260) return "Feat.MONK_AC_BONUS";
    if (value == 207) return "Feat.MONK_ENDURANCE";
    if (value == 1088) return "Feat.MOUNTED_ARCHERY";
    if (value == 1087) return "Feat.MOUNTED_COMBAT";
    if (value == 198) return "Feat.NATURE_SENSE";
    if (value == 224) return "Feat.OPPORTUNIST";
    if (value == 1095) return "Feat.PALADIN_SUMMON_MOUNT";
    if (value == 244) return "Feat.PARTIAL_SKILL_AFFINITY_LISTEN";
    if (value == 245) return "Feat.PARTIAL_SKILL_AFFINITY_SEARCH";
    if (value == 246) return "Feat.PARTIAL_SKILL_AFFINITY_SPOT";
    if (value == 1082) return "Feat.PDK_FEAR";
    if (value == 1085) return "Feat.PDK_INSPIRE_1";
    if (value == 1086) return "Feat.PDK_INSPIRE_2";
    if (value == 1080) return "Feat.PDK_RALLY";
    if (value == 1081) return "Feat.PDK_SHIELD";
    if (value == 1084) return "Feat.PDK_STAND";
    if (value == 1083) return "Feat.PDK_WRATH";
    if (value == 216) return "Feat.PERFECT_SELF";
    if (value == 321) return "Feat.PLANT_DOMAIN_POWER";
    if (value == 1106) return "Feat.PLAYER_TOOL_01";
    if (value == 1107) return "Feat.PLAYER_TOOL_02";
    if (value == 1108) return "Feat.PLAYER_TOOL_03";
    if (value == 1109) return "Feat.PLAYER_TOOL_04";
    if (value == 1110) return "Feat.PLAYER_TOOL_05";
    if (value == 1111) return "Feat.PLAYER_TOOL_06";
    if (value == 1112) return "Feat.PLAYER_TOOL_07";
    if (value == 1113) return "Feat.PLAYER_TOOL_08";
    if (value == 1114) return "Feat.PLAYER_TOOL_09";
    if (value == 1115) return "Feat.PLAYER_TOOL_10";
    if (value == 27) return "Feat.POINT_BLANK_SHOT";
    if (value == 28) return "Feat.POWER_ATTACK";
    if (value == 454) return "Feat.PRESTIGE_ARROW_OF_DEATH";
    if (value == 469) return "Feat.PRESTIGE_DARKNESS";
    if (value == 473) return "Feat.PRESTIGE_DARK_BLESSING";
    if (value == 455) return "Feat.PRESTIGE_DEATH_ATTACK_1";
    if (value == 1020) return "Feat.PRESTIGE_DEATH_ATTACK_10";
    if (value == 1021) return "Feat.PRESTIGE_DEATH_ATTACK_11";
    if (value == 1022) return "Feat.PRESTIGE_DEATH_ATTACK_12";
    if (value == 1023) return "Feat.PRESTIGE_DEATH_ATTACK_13";
    if (value == 1024) return "Feat.PRESTIGE_DEATH_ATTACK_14";
    if (value == 1025) return "Feat.PRESTIGE_DEATH_ATTACK_15";
    if (value == 1026) return "Feat.PRESTIGE_DEATH_ATTACK_16";
    if (value == 1027) return "Feat.PRESTIGE_DEATH_ATTACK_17";
    if (value == 1028) return "Feat.PRESTIGE_DEATH_ATTACK_18";
    if (value == 1029) return "Feat.PRESTIGE_DEATH_ATTACK_19";
    if (value == 456) return "Feat.PRESTIGE_DEATH_ATTACK_2";
    if (value == 1030) return "Feat.PRESTIGE_DEATH_ATTACK_20";
    if (value == 457) return "Feat.PRESTIGE_DEATH_ATTACK_3";
    if (value == 458) return "Feat.PRESTIGE_DEATH_ATTACK_4";
    if (value == 459) return "Feat.PRESTIGE_DEATH_ATTACK_5";
    if (value == 1004) return "Feat.PRESTIGE_DEATH_ATTACK_6";
    if (value == 1005) return "Feat.PRESTIGE_DEATH_ATTACK_7";
    if (value == 1006) return "Feat.PRESTIGE_DEATH_ATTACK_8";
    if (value == 1019) return "Feat.PRESTIGE_DEATH_ATTACK_9";
    if (value == 949) return "Feat.PRESTIGE_DEFENSIVE_AWARENESS_1";
    if (value == 950) return "Feat.PRESTIGE_DEFENSIVE_AWARENESS_2";
    if (value == 951) return "Feat.PRESTIGE_DEFENSIVE_AWARENESS_3";
    if (value == 445) return "Feat.PRESTIGE_ENCHANT_ARROW_1";
    if (value == 1049) return "Feat.PRESTIGE_ENCHANT_ARROW_10";
    if (value == 1050) return "Feat.PRESTIGE_ENCHANT_ARROW_11";
    if (value == 1051) return "Feat.PRESTIGE_ENCHANT_ARROW_12";
    if (value == 1052) return "Feat.PRESTIGE_ENCHANT_ARROW_13";
    if (value == 1053) return "Feat.PRESTIGE_ENCHANT_ARROW_14";
    if (value == 1054) return "Feat.PRESTIGE_ENCHANT_ARROW_15";
    if (value == 1055) return "Feat.PRESTIGE_ENCHANT_ARROW_16";
    if (value == 1056) return "Feat.PRESTIGE_ENCHANT_ARROW_17";
    if (value == 1057) return "Feat.PRESTIGE_ENCHANT_ARROW_18";
    if (value == 1058) return "Feat.PRESTIGE_ENCHANT_ARROW_19";
    if (value == 446) return "Feat.PRESTIGE_ENCHANT_ARROW_2";
    if (value == 1059) return "Feat.PRESTIGE_ENCHANT_ARROW_20";
    if (value == 447) return "Feat.PRESTIGE_ENCHANT_ARROW_3";
    if (value == 448) return "Feat.PRESTIGE_ENCHANT_ARROW_4";
    if (value == 449) return "Feat.PRESTIGE_ENCHANT_ARROW_5";
    if (value == 1045) return "Feat.PRESTIGE_ENCHANT_ARROW_6";
    if (value == 1046) return "Feat.PRESTIGE_ENCHANT_ARROW_7";
    if (value == 1047) return "Feat.PRESTIGE_ENCHANT_ARROW_8";
    if (value == 1048) return "Feat.PRESTIGE_ENCHANT_ARROW_9";
    if (value == 453) return "Feat.PRESTIGE_HAIL_OF_ARROWS";
    if (value == 450) return "Feat.PRESTIGE_IMBUE_ARROW";
    if (value == 470) return "Feat.PRESTIGE_INVISIBILITY_1";
    if (value == 471) return "Feat.PRESTIGE_INVISIBILITY_2";
    if (value == 463) return "Feat.PRESTIGE_POISON_SAVE_1";
    if (value == 464) return "Feat.PRESTIGE_POISON_SAVE_2";
    if (value == 465) return "Feat.PRESTIGE_POISON_SAVE_3";
    if (value == 466) return "Feat.PRESTIGE_POISON_SAVE_4";
    if (value == 467) return "Feat.PRESTIGE_POISON_SAVE_5";
    if (value == 1070) return "Feat.PRESTIGE_POISON_SAVE_EPIC";
    if (value == 451) return "Feat.PRESTIGE_SEEKER_ARROW_1";
    if (value == 452) return "Feat.PRESTIGE_SEEKER_ARROW_2";
    if (value == 468) return "Feat.PRESTIGE_SPELL_GHOSTLY_VISAGE";
    if (value == 308) return "Feat.PROTECTION_DOMAIN_POWER";
    if (value == 209) return "Feat.PURITY_OF_BODY";
    if (value == 29) return "Feat.QUICKEN_SPELL";
    if (value == 258) return "Feat.QUICK_TO_MASTER";
    if (value == 296) return "Feat.QUIVERING_PALM";
    if (value == 411) return "Feat.RAPID_RELOAD";
    if (value == 30) return "Feat.RAPID_SHOT";
    if (value == 302) return "Feat.REMOVE_DISEASE";
    if (value == 426) return "Feat.RESIST_DISEASE";
    if (value == 428) return "Feat.RESIST_ENERGY_ACID";
    if (value == 427) return "Feat.RESIST_ENERGY_COLD";
    if (value == 430) return "Feat.RESIST_ENERGY_ELECTRICAL";
    if (value == 429) return "Feat.RESIST_ENERGY_FIRE";
    if (value == 431) return "Feat.RESIST_ENERGY_SONIC";
    if (value == 202) return "Feat.RESIST_NATURES_LURE";
    if (value == 383) return "Feat.RESIST_POISON";
    if (value == 904) return "Feat.SACRED_DEFENSE_1";
    if (value == 905) return "Feat.SACRED_DEFENSE_2";
    if (value == 906) return "Feat.SACRED_DEFENSE_3";
    if (value == 907) return "Feat.SACRED_DEFENSE_4";
    if (value == 908) return "Feat.SACRED_DEFENSE_5";
    if (value == 31) return "Feat.SAP";
    if (value == 945) return "Feat.SCRIBE_SCROLL";
    if (value == 434) return "Feat.SHADOW_DAZE";
    if (value == 436) return "Feat.SHADOW_EVADE";
    if (value == 32) return "Feat.SHIELD_PROFICIENCY";
    if (value == 489) return "Feat.SHOU_DISCIPLE_DODGE_2";
    if (value == 1031) return "Feat.SHOU_DISCIPLE_DODGE_3";
    if (value == 899) return "Feat.SHOU_DISCIPLE_MARTIAL_FLURRY_ANY";
    if (value == 866) return "Feat.SHOU_DISCIPLE_MARTIAL_FLURRY_LIGHT";
    if (value == 33) return "Feat.SILENCE_SPELL";
    if (value == 384) return "Feat.SILVER_PALM";
    if (value == 404) return "Feat.SKILLFOCUS_APPRAISE";
    if (value == 243) return "Feat.SKILL_AFFINITY_CONCENTRATION";
    if (value == 237) return "Feat.SKILL_AFFINITY_LISTEN";
    if (value == 234) return "Feat.SKILL_AFFINITY_LORE";
    if (value == 247) return "Feat.SKILL_AFFINITY_MOVE_SILENTLY";
    if (value == 238) return "Feat.SKILL_AFFINITY_SEARCH";
    if (value == 239) return "Feat.SKILL_AFFINITY_SPOT";
    if (value == 34) return "Feat.SKILL_FOCUS_ANIMAL_EMPATHY";
    if (value == 915) return "Feat.SKILL_FOCUS_BLUFF";
    if (value == 173) return "Feat.SKILL_FOCUS_CONCENTRATION";
    if (value == 911) return "Feat.SKILL_FOCUS_CRAFT_ARMOR";
    if (value == 407) return "Feat.SKILL_FOCUS_CRAFT_TRAP";
    if (value == 912) return "Feat.SKILL_FOCUS_CRAFT_WEAPON";
    if (value == 174) return "Feat.SKILL_FOCUS_DISABLE_TRAP";
    if (value == 175) return "Feat.SKILL_FOCUS_DISCIPLINE";
    if (value == 177) return "Feat.SKILL_FOCUS_HEAL";
    if (value == 178) return "Feat.SKILL_FOCUS_HIDE";
    if (value == 916) return "Feat.SKILL_FOCUS_INTIMIDATE";
    if (value == 179) return "Feat.SKILL_FOCUS_LISTEN";
    if (value == 180) return "Feat.SKILL_FOCUS_LORE";
    if (value == 181) return "Feat.SKILL_FOCUS_MOVE_SILENTLY";
    if (value == 182) return "Feat.SKILL_FOCUS_OPEN_LOCK";
    if (value == 183) return "Feat.SKILL_FOCUS_PARRY";
    if (value == 184) return "Feat.SKILL_FOCUS_PERFORM";
    if (value == 185) return "Feat.SKILL_FOCUS_PERSUADE";
    if (value == 186) return "Feat.SKILL_FOCUS_PICK_POCKET";
    if (value == 187) return "Feat.SKILL_FOCUS_SEARCH";
    if (value == 188) return "Feat.SKILL_FOCUS_SET_TRAP";
    if (value == 189) return "Feat.SKILL_FOCUS_SPELLCRAFT";
    if (value == 190) return "Feat.SKILL_FOCUS_SPOT";
    if (value == 192) return "Feat.SKILL_FOCUS_TAUNT";
    if (value == 406) return "Feat.SKILL_FOCUS_TUMBLE";
    if (value == 193) return "Feat.SKILL_FOCUS_USE_MAGIC_DEVICE";
    if (value == 225) return "Feat.SKILL_MASTERY";
    if (value == 259) return "Feat.SLIPPERY_MIND";
    if (value == 301) return "Feat.SMITE_EVIL";
    if (value == 472) return "Feat.SMITE_GOOD";
    if (value == 386) return "Feat.SNAKEBLOOD";
    if (value == 221) return "Feat.SNEAK_ATTACK";
    if (value == 35) return "Feat.SPELL_FOCUS_ABJURATION";
    if (value == 166) return "Feat.SPELL_FOCUS_CONJURATION";
    if (value == 167) return "Feat.SPELL_FOCUS_DIVINATION";
    if (value == 168) return "Feat.SPELL_FOCUS_ENCHANTMENT";
    if (value == 169) return "Feat.SPELL_FOCUS_EVOCATION";
    if (value == 170) return "Feat.SPELL_FOCUS_ILLUSION";
    if (value == 171) return "Feat.SPELL_FOCUS_NECROMANCY";
    if (value == 172) return "Feat.SPELL_FOCUS_TRANSMUTATION";
    if (value == 36) return "Feat.SPELL_PENETRATION";
    if (value == 392) return "Feat.SPRING_ATTACK";
    if (value == 387) return "Feat.STEALTHY";
    if (value == 208) return "Feat.STILL_MIND";
    if (value == 37) return "Feat.STILL_SPELL";
    if (value == 227) return "Feat.STONECUNNING";
    if (value == 307) return "Feat.STRENGTH_DOMAIN_POWER";
    if (value == 388) return "Feat.STRONGSOUL";
    if (value == 39) return "Feat.STUNNING_FIST";
    if (value == 303) return "Feat.SUMMON_FAMILIAR";
    if (value == 895) return "Feat.SUMMON_GREATER_UNDEAD";
    if (value == 435) return "Feat.SUMMON_SHADOW";
    if (value == 890) return "Feat.SUMMON_UNDEAD";
    if (value == 322) return "Feat.SUN_DOMAIN_POWER";
    if (value == 884) return "Feat.SUPERIOR_WEAPON_FOCUS";
    if (value == 402) return "Feat.THUG";
    if (value == 40) return "Feat.TOUGHNESS";
    if (value == 894) return "Feat.TOUGH_AS_BONE";
    if (value == 201) return "Feat.TRACKLESS_STEP";
    if (value == 323) return "Feat.TRAVEL_DOMAIN_POWER";
    if (value == 324) return "Feat.TRICKERY_DOMAIN_POWER";
    if (value == 294) return "Feat.TURN_UNDEAD";
    if (value == 41) return "Feat.TWO_WEAPON_FIGHTING";
    if (value == 438) return "Feat.TYMORAS_SMILE";
    if (value == 195) return "Feat.UNCANNY_DODGE_1";
    if (value == 251) return "Feat.UNCANNY_DODGE_2";
    if (value == 252) return "Feat.UNCANNY_DODGE_3";
    if (value == 253) return "Feat.UNCANNY_DODGE_4";
    if (value == 254) return "Feat.UNCANNY_DODGE_5";
    if (value == 255) return "Feat.UNCANNY_DODGE_6";
    if (value == 226) return "Feat.UNCANNY_REFLEX";
    if (value == 892) return "Feat.UNDEAD_GRAFT_1";
    if (value == 893) return "Feat.UNDEAD_GRAFT_2";
    if (value == 960) return "Feat.USE_POISON";
    if (value == 203) return "Feat.VENOM_IMMUNITY";
    if (value == 306) return "Feat.WAR_DOMAIN_POWER";
    if (value == 325) return "Feat.WATER_DOMAIN_POWER";
    if (value == 42) return "Feat.WEAPON_FINESSE";
    if (value == 123) return "Feat.WEAPON_FOCUS_BASTARD_SWORD";
    if (value == 110) return "Feat.WEAPON_FOCUS_BATTLE_AXE";
    if (value == 43) return "Feat.WEAPON_FOCUS_CLUB";
    if (value == 291) return "Feat.WEAPON_FOCUS_CREATURE";
    if (value == 90) return "Feat.WEAPON_FOCUS_DAGGER";
    if (value == 91) return "Feat.WEAPON_FOCUS_DART";
    if (value == 125) return "Feat.WEAPON_FOCUS_DIRE_MACE";
    if (value == 126) return "Feat.WEAPON_FOCUS_DOUBLE_AXE";
    if (value == 952) return "Feat.WEAPON_FOCUS_DWAXE";
    if (value == 111) return "Feat.WEAPON_FOCUS_GREAT_AXE";
    if (value == 107) return "Feat.WEAPON_FOCUS_GREAT_SWORD";
    if (value == 112) return "Feat.WEAPON_FOCUS_HALBERD";
    if (value == 108) return "Feat.WEAPON_FOCUS_HAND_AXE";
    if (value == 92) return "Feat.WEAPON_FOCUS_HEAVY_CROSSBOW";
    if (value == 116) return "Feat.WEAPON_FOCUS_HEAVY_FLAIL";
    if (value == 117) return "Feat.WEAPON_FOCUS_KAMA";
    if (value == 122) return "Feat.WEAPON_FOCUS_KATANA";
    if (value == 118) return "Feat.WEAPON_FOCUS_KUKRI";
    if (value == 93) return "Feat.WEAPON_FOCUS_LIGHT_CROSSBOW";
    if (value == 114) return "Feat.WEAPON_FOCUS_LIGHT_FLAIL";
    if (value == 113) return "Feat.WEAPON_FOCUS_LIGHT_HAMMER";
    if (value == 94) return "Feat.WEAPON_FOCUS_LIGHT_MACE";
    if (value == 101) return "Feat.WEAPON_FOCUS_LONGBOW";
    if (value == 106) return "Feat.WEAPON_FOCUS_LONG_SWORD";
    if (value == 95) return "Feat.WEAPON_FOCUS_MORNING_STAR";
    if (value == 104) return "Feat.WEAPON_FOCUS_RAPIER";
    if (value == 105) return "Feat.WEAPON_FOCUS_SCIMITAR";
    if (value == 121) return "Feat.WEAPON_FOCUS_SCYTHE";
    if (value == 102) return "Feat.WEAPON_FOCUS_SHORTBOW";
    if (value == 103) return "Feat.WEAPON_FOCUS_SHORT_SWORD";
    if (value == 120) return "Feat.WEAPON_FOCUS_SHURIKEN";
    if (value == 98) return "Feat.WEAPON_FOCUS_SICKLE";
    if (value == 99) return "Feat.WEAPON_FOCUS_SLING";
    if (value == 97) return "Feat.WEAPON_FOCUS_SPEAR";
    if (value == 96) return "Feat.WEAPON_FOCUS_STAFF";
    if (value == 109) return "Feat.WEAPON_FOCUS_THROWING_AXE";
    if (value == 1072) return "Feat.WEAPON_FOCUS_TRIDENT";
    if (value == 127) return "Feat.WEAPON_FOCUS_TWO_BLADED_SWORD";
    if (value == 100) return "Feat.WEAPON_FOCUS_UNARMED_STRIKE";
    if (value == 115) return "Feat.WEAPON_FOCUS_WAR_HAMMER";
    if (value == 993) return "Feat.WEAPON_FOCUS_WHIP";
    if (value == 940) return "Feat.WEAPON_OF_CHOICE_BASTARDSWORD";
    if (value == 931) return "Feat.WEAPON_OF_CHOICE_BATTLEAXE";
    if (value == 919) return "Feat.WEAPON_OF_CHOICE_CLUB";
    if (value == 920) return "Feat.WEAPON_OF_CHOICE_DAGGER";
    if (value == 941) return "Feat.WEAPON_OF_CHOICE_DIREMACE";
    if (value == 942) return "Feat.WEAPON_OF_CHOICE_DOUBLEAXE";
    if (value == 959) return "Feat.WEAPON_OF_CHOICE_DWAXE";
    if (value == 932) return "Feat.WEAPON_OF_CHOICE_GREATAXE";
    if (value == 929) return "Feat.WEAPON_OF_CHOICE_GREATSWORD";
    if (value == 933) return "Feat.WEAPON_OF_CHOICE_HALBERD";
    if (value == 930) return "Feat.WEAPON_OF_CHOICE_HANDAXE";
    if (value == 937) return "Feat.WEAPON_OF_CHOICE_HEAVYFLAIL";
    if (value == 880) return "Feat.WEAPON_OF_CHOICE_KAMA";
    if (value == 939) return "Feat.WEAPON_OF_CHOICE_KATANA";
    if (value == 881) return "Feat.WEAPON_OF_CHOICE_KUKRI";
    if (value == 935) return "Feat.WEAPON_OF_CHOICE_LIGHTFLAIL";
    if (value == 934) return "Feat.WEAPON_OF_CHOICE_LIGHTHAMMER";
    if (value == 921) return "Feat.WEAPON_OF_CHOICE_LIGHTMACE";
    if (value == 928) return "Feat.WEAPON_OF_CHOICE_LONGSWORD";
    if (value == 922) return "Feat.WEAPON_OF_CHOICE_MORNINGSTAR";
    if (value == 923) return "Feat.WEAPON_OF_CHOICE_QUARTERSTAFF";
    if (value == 926) return "Feat.WEAPON_OF_CHOICE_RAPIER";
    if (value == 927) return "Feat.WEAPON_OF_CHOICE_SCIMITAR";
    if (value == 938) return "Feat.WEAPON_OF_CHOICE_SCYTHE";
    if (value == 924) return "Feat.WEAPON_OF_CHOICE_SHORTSPEAR";
    if (value == 925) return "Feat.WEAPON_OF_CHOICE_SHORTSWORD";
    if (value == 879) return "Feat.WEAPON_OF_CHOICE_SICKLE";
    if (value == 1079) return "Feat.WEAPON_OF_CHOICE_TRIDENT";
    if (value == 943) return "Feat.WEAPON_OF_CHOICE_TWOBLADEDSWORD";
    if (value == 936) return "Feat.WEAPON_OF_CHOICE_WARHAMMER";
    if (value == 1000) return "Feat.WEAPON_OF_CHOICE_WHIP";
    if (value == 289) return "Feat.WEAPON_PROFICIENCY_CREATURE";
    if (value == 48) return "Feat.WEAPON_PROFICIENCY_DRUID";
    if (value == 256) return "Feat.WEAPON_PROFICIENCY_ELF";
    if (value == 44) return "Feat.WEAPON_PROFICIENCY_EXOTIC";
    if (value == 45) return "Feat.WEAPON_PROFICIENCY_MARTIAL";
    if (value == 49) return "Feat.WEAPON_PROFICIENCY_MONK";
    if (value == 50) return "Feat.WEAPON_PROFICIENCY_ROGUE";
    if (value == 46) return "Feat.WEAPON_PROFICIENCY_SIMPLE";
    if (value == 51) return "Feat.WEAPON_PROFICIENCY_WIZARD";
    if (value == 161) return "Feat.WEAPON_SPECIALIZATION_BASTARD_SWORD";
    if (value == 148) return "Feat.WEAPON_SPECIALIZATION_BATTLE_AXE";
    if (value == 47) return "Feat.WEAPON_SPECIALIZATION_CLUB";
    if (value == 290) return "Feat.WEAPON_SPECIALIZATION_CREATURE";
    if (value == 128) return "Feat.WEAPON_SPECIALIZATION_DAGGER";
    if (value == 129) return "Feat.WEAPON_SPECIALIZATION_DART";
    if (value == 163) return "Feat.WEAPON_SPECIALIZATION_DIRE_MACE";
    if (value == 164) return "Feat.WEAPON_SPECIALIZATION_DOUBLE_AXE";
    if (value == 953) return "Feat.WEAPON_SPECIALIZATION_DWAXE";
    if (value == 149) return "Feat.WEAPON_SPECIALIZATION_GREAT_AXE";
    if (value == 145) return "Feat.WEAPON_SPECIALIZATION_GREAT_SWORD";
    if (value == 150) return "Feat.WEAPON_SPECIALIZATION_HALBERD";
    if (value == 146) return "Feat.WEAPON_SPECIALIZATION_HAND_AXE";
    if (value == 130) return "Feat.WEAPON_SPECIALIZATION_HEAVY_CROSSBOW";
    if (value == 154) return "Feat.WEAPON_SPECIALIZATION_HEAVY_FLAIL";
    if (value == 155) return "Feat.WEAPON_SPECIALIZATION_KAMA";
    if (value == 160) return "Feat.WEAPON_SPECIALIZATION_KATANA";
    if (value == 156) return "Feat.WEAPON_SPECIALIZATION_KUKRI";
    if (value == 131) return "Feat.WEAPON_SPECIALIZATION_LIGHT_CROSSBOW";
    if (value == 152) return "Feat.WEAPON_SPECIALIZATION_LIGHT_FLAIL";
    if (value == 151) return "Feat.WEAPON_SPECIALIZATION_LIGHT_HAMMER";
    if (value == 132) return "Feat.WEAPON_SPECIALIZATION_LIGHT_MACE";
    if (value == 139) return "Feat.WEAPON_SPECIALIZATION_LONGBOW";
    if (value == 144) return "Feat.WEAPON_SPECIALIZATION_LONG_SWORD";
    if (value == 133) return "Feat.WEAPON_SPECIALIZATION_MORNING_STAR";
    if (value == 142) return "Feat.WEAPON_SPECIALIZATION_RAPIER";
    if (value == 143) return "Feat.WEAPON_SPECIALIZATION_SCIMITAR";
    if (value == 159) return "Feat.WEAPON_SPECIALIZATION_SCYTHE";
    if (value == 140) return "Feat.WEAPON_SPECIALIZATION_SHORTBOW";
    if (value == 141) return "Feat.WEAPON_SPECIALIZATION_SHORT_SWORD";
    if (value == 158) return "Feat.WEAPON_SPECIALIZATION_SHURIKEN";
    if (value == 136) return "Feat.WEAPON_SPECIALIZATION_SICKLE";
    if (value == 137) return "Feat.WEAPON_SPECIALIZATION_SLING";
    if (value == 135) return "Feat.WEAPON_SPECIALIZATION_SPEAR";
    if (value == 134) return "Feat.WEAPON_SPECIALIZATION_STAFF";
    if (value == 147) return "Feat.WEAPON_SPECIALIZATION_THROWING_AXE";
    if (value == 1073) return "Feat.WEAPON_SPECIALIZATION_TRIDENT";
    if (value == 165) return "Feat.WEAPON_SPECIALIZATION_TWO_BLADED_SWORD";
    if (value == 138) return "Feat.WEAPON_SPECIALIZATION_UNARMED_STRIKE";
    if (value == 153) return "Feat.WEAPON_SPECIALIZATION_WAR_HAMMER";
    if (value == 994) return "Feat.WEAPON_SPECIALIZATION_WHIP";
    if (value == 867) return "Feat.WHIRLWIND_ATTACK";
    if (value == 211) return "Feat.WHOLENESS_OF_BODY";
    if (value == 305) return "Feat.WILD_SHAPE";
    if (value == 200) return "Feat.WOODLAND_STRIDE";
    if (value == 412) return "Feat.ZEN_ARCHERY";
    return "Feat.(not found: " + value + ")";
  }

  public static String nameOf(float value) {
    return "Feat.(not found: " + value + ")";
  }

  public static String nameOf(String value) {
    return "Feat.(not found: " + value + ")";
  }
}
