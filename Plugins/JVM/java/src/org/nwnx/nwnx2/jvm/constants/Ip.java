package org.nwnx.nwnx2.jvm.constants;

/**
 * This class contains all unique constants beginning with "IP".
 * Non-distinct keys are filtered; only the LAST appearing was
 * kept.
*/
public final class Ip {
  private Ip() {}

  public final static int CONST_ABILITY_CHA = 5;
  public final static int CONST_ABILITY_CON = 2;
  public final static int CONST_ABILITY_DEX = 1;
  public final static int CONST_ABILITY_INT = 3;
  public final static int CONST_ABILITY_STR = 0;
  public final static int CONST_ABILITY_WIS = 4;
  public final static int CONST_ACMODIFIERTYPE_ARMOR = 2;
  public final static int CONST_ACMODIFIERTYPE_DEFLECTION = 4;
  public final static int CONST_ACMODIFIERTYPE_DODGE = 0;
  public final static int CONST_ACMODIFIERTYPE_NATURAL = 1;
  public final static int CONST_ACMODIFIERTYPE_SHIELD = 3;
  public final static int CONST_ADDITIONAL_CURSED = 1;
  public final static int CONST_ADDITIONAL_UNKNOWN = 0;
  public final static int CONST_ALIGNMENTGROUP_ALL = 0;
  public final static int CONST_ALIGNMENTGROUP_CHAOTIC = 3;
  public final static int CONST_ALIGNMENTGROUP_EVIL = 5;
  public final static int CONST_ALIGNMENTGROUP_GOOD = 4;
  public final static int CONST_ALIGNMENTGROUP_LAWFUL = 2;
  public final static int CONST_ALIGNMENTGROUP_NEUTRAL = 1;
  public final static int CONST_ALIGNMENT_CE = 8;
  public final static int CONST_ALIGNMENT_CG = 6;
  public final static int CONST_ALIGNMENT_CN = 7;
  public final static int CONST_ALIGNMENT_LE = 2;
  public final static int CONST_ALIGNMENT_LG = 0;
  public final static int CONST_ALIGNMENT_LN = 1;
  public final static int CONST_ALIGNMENT_NE = 5;
  public final static int CONST_ALIGNMENT_NG = 3;
  public final static int CONST_ALIGNMENT_TN = 4;
  public final static int CONST_AMMOTYPE_ARROW = 0;
  public final static int CONST_AMMOTYPE_BOLT = 1;
  public final static int CONST_AMMOTYPE_BULLET = 2;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_10_PERCENT = 8;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_15_PERCENT = 7;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_20_PERCENT = 6;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_25_PERCENT = 5;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_30_PERCENT = 4;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_35_PERCENT = 3;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_40_PERCENT = 2;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_45_PERCENT = 1;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_50_PERCENT = 0;
  public final static int CONST_ARCANE_SPELL_FAILURE_MINUS_5_PERCENT = 9;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_10_PERCENT = 11;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_15_PERCENT = 12;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_20_PERCENT = 13;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_25_PERCENT = 14;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_30_PERCENT = 15;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_35_PERCENT = 16;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_40_PERCENT = 17;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_45_PERCENT = 18;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_50_PERCENT = 19;
  public final static int CONST_ARCANE_SPELL_FAILURE_PLUS_5_PERCENT = 10;
  public final static int CONST_CASTSPELL_ACID_FOG_11 = 0;
  public final static int CONST_CASTSPELL_ACID_SPLASH_1 = 355;
  public final static int CONST_CASTSPELL_ACTIVATE_ITEM = 359;
  public final static int CONST_CASTSPELL_AID_3 = 1;
  public final static int CONST_CASTSPELL_AMPLIFY_5 = 373;
  public final static int CONST_CASTSPELL_ANIMATE_DEAD_10 = 3;
  public final static int CONST_CASTSPELL_ANIMATE_DEAD_15 = 4;
  public final static int CONST_CASTSPELL_ANIMATE_DEAD_5 = 2;
  public final static int CONST_CASTSPELL_AURAOFGLORY_7 = 360;
  public final static int CONST_CASTSPELL_AURA_OF_VITALITY_13 = 321;
  public final static int CONST_CASTSPELL_AURA_VERSUS_ALIGNMENT_15 = 287;
  public final static int CONST_CASTSPELL_AWAKEN_9 = 303;
  public final static int CONST_CASTSPELL_BALAGARNSIRONHORN_7 = 367;
  public final static int CONST_CASTSPELL_BANE_5 = 380;
  public final static int CONST_CASTSPELL_BANISHMENT_15 = 361;
  public final static int CONST_CASTSPELL_BARKSKIN_12 = 7;
  public final static int CONST_CASTSPELL_BARKSKIN_3 = 5;
  public final static int CONST_CASTSPELL_BARKSKIN_6 = 6;
  public final static int CONST_CASTSPELL_BESTOW_CURSE_5 = 8;
  public final static int CONST_CASTSPELL_BIGBYS_CLENCHED_FIST_20 = 393;
  public final static int CONST_CASTSPELL_BIGBYS_CRUSHING_HAND_20 = 394;
  public final static int CONST_CASTSPELL_BIGBYS_FORCEFUL_HAND_15 = 391;
  public final static int CONST_CASTSPELL_BIGBYS_GRASPING_HAND_17 = 392;
  public final static int CONST_CASTSPELL_BIGBYS_INTERPOSING_HAND_15 = 390;
  public final static int CONST_CASTSPELL_BLADE_BARRIER_11 = 9;
  public final static int CONST_CASTSPELL_BLADE_BARRIER_15 = 10;
  public final static int CONST_CASTSPELL_BLESS_2 = 11;
  public final static int CONST_CASTSPELL_BLINDNESS_DEAFNESS_3 = 14;
  public final static int CONST_CASTSPELL_BLOOD_FRENZY_7 = 353;
  public final static int CONST_CASTSPELL_BOMBARDMENT_20 = 354;
  public final static int CONST_CASTSPELL_BULLS_STRENGTH_10 = 16;
  public final static int CONST_CASTSPELL_BULLS_STRENGTH_15 = 17;
  public final static int CONST_CASTSPELL_BULLS_STRENGTH_3 = 15;
  public final static int CONST_CASTSPELL_BURNING_HANDS_2 = 18;
  public final static int CONST_CASTSPELL_BURNING_HANDS_5 = 19;
  public final static int CONST_CASTSPELL_CALL_LIGHTNING_10 = 21;
  public final static int CONST_CASTSPELL_CALL_LIGHTNING_5 = 20;
  public final static int CONST_CASTSPELL_CAMOFLAGE_5 = 352;
  public final static int CONST_CASTSPELL_CATS_GRACE_10 = 26;
  public final static int CONST_CASTSPELL_CATS_GRACE_15 = 27;
  public final static int CONST_CASTSPELL_CATS_GRACE_3 = 25;
  public final static int CONST_CASTSPELL_CHAIN_LIGHTNING_11 = 28;
  public final static int CONST_CASTSPELL_CHAIN_LIGHTNING_15 = 29;
  public final static int CONST_CASTSPELL_CHAIN_LIGHTNING_20 = 30;
  public final static int CONST_CASTSPELL_CHARM_MONSTER_10 = 32;
  public final static int CONST_CASTSPELL_CHARM_MONSTER_5 = 31;
  public final static int CONST_CASTSPELL_CHARM_PERSON_10 = 34;
  public final static int CONST_CASTSPELL_CHARM_PERSON_2 = 33;
  public final static int CONST_CASTSPELL_CHARM_PERSON_OR_ANIMAL_10 = 36;
  public final static int CONST_CASTSPELL_CHARM_PERSON_OR_ANIMAL_3 = 35;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DEATH_11 = 37;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DEATH_15 = 38;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DEATH_20 = 39;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DOOM_15 = 41;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DOOM_20 = 42;
  public final static int CONST_CASTSPELL_CIRCLE_OF_DOOM_9 = 40;
  public final static int CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_10 = 44;
  public final static int CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_15 = 45;
  public final static int CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_5 = 43;
  public final static int CONST_CASTSPELL_CLARITY_3 = 46;
  public final static int CONST_CASTSPELL_CLOUDKILL_9 = 48;
  public final static int CONST_CASTSPELL_COLOR_SPRAY_2 = 49;
  public final static int CONST_CASTSPELL_CONE_OF_COLD_15 = 51;
  public final static int CONST_CASTSPELL_CONE_OF_COLD_9 = 50;
  public final static int CONST_CASTSPELL_CONFUSION_10 = 53;
  public final static int CONST_CASTSPELL_CONFUSION_5 = 52;
  public final static int CONST_CASTSPELL_CONTAGION_5 = 54;
  public final static int CONST_CASTSPELL_CONTINUAL_FLAME_7 = 350;
  public final static int CONST_CASTSPELL_CONTROL_UNDEAD_13 = 55;
  public final static int CONST_CASTSPELL_CONTROL_UNDEAD_20 = 56;
  public final static int CONST_CASTSPELL_CREATE_GREATER_UNDEAD_15 = 57;
  public final static int CONST_CASTSPELL_CREATE_GREATER_UNDEAD_16 = 58;
  public final static int CONST_CASTSPELL_CREATE_GREATER_UNDEAD_18 = 59;
  public final static int CONST_CASTSPELL_CREATE_UNDEAD_11 = 60;
  public final static int CONST_CASTSPELL_CREATE_UNDEAD_14 = 61;
  public final static int CONST_CASTSPELL_CREATE_UNDEAD_16 = 62;
  public final static int CONST_CASTSPELL_CREEPING_DOOM_13 = 304;
  public final static int CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_12 = 64;
  public final static int CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_15 = 65;
  public final static int CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_7 = 63;
  public final static int CONST_CASTSPELL_CURE_LIGHT_WOUNDS_2 = 66;
  public final static int CONST_CASTSPELL_CURE_LIGHT_WOUNDS_5 = 67;
  public final static int CONST_CASTSPELL_CURE_MINOR_WOUNDS_1 = 68;
  public final static int CONST_CASTSPELL_CURE_MODERATE_WOUNDS_10 = 71;
  public final static int CONST_CASTSPELL_CURE_MODERATE_WOUNDS_3 = 69;
  public final static int CONST_CASTSPELL_CURE_MODERATE_WOUNDS_6 = 70;
  public final static int CONST_CASTSPELL_CURE_SERIOUS_WOUNDS_10 = 73;
  public final static int CONST_CASTSPELL_CURE_SERIOUS_WOUNDS_5 = 72;
  public final static int CONST_CASTSPELL_DARKNESS_3 = 75;
  public final static int CONST_CASTSPELL_DARKVISION_3 = 305;
  public final static int CONST_CASTSPELL_DARKVISION_6 = 306;
  public final static int CONST_CASTSPELL_DAZE_1 = 76;
  public final static int CONST_CASTSPELL_DEATH_WARD_7 = 77;
  public final static int CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_13 = 78;
  public final static int CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_15 = 79;
  public final static int CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_20 = 80;
  public final static int CONST_CASTSPELL_DESTRUCTION_13 = 307;
  public final static int CONST_CASTSPELL_DIRGE_15 = 376;
  public final static int CONST_CASTSPELL_DISMISSAL_12 = 82;
  public final static int CONST_CASTSPELL_DISMISSAL_18 = 83;
  public final static int CONST_CASTSPELL_DISMISSAL_7 = 81;
  public final static int CONST_CASTSPELL_DISPEL_MAGIC_10 = 85;
  public final static int CONST_CASTSPELL_DISPEL_MAGIC_5 = 84;
  public final static int CONST_CASTSPELL_DISPLACEMENT_9 = 389;
  public final static int CONST_CASTSPELL_DIVINE_FAVOR_5 = 345;
  public final static int CONST_CASTSPELL_DIVINE_MIGHT_5 = 395;
  public final static int CONST_CASTSPELL_DIVINE_POWER_7 = 86;
  public final static int CONST_CASTSPELL_DIVINE_SHIELD_5 = 396;
  public final static int CONST_CASTSPELL_DOMINATE_ANIMAL_5 = 87;
  public final static int CONST_CASTSPELL_DOMINATE_MONSTER_17 = 88;
  public final static int CONST_CASTSPELL_DOMINATE_PERSON_7 = 89;
  public final static int CONST_CASTSPELL_DOOM_2 = 90;
  public final static int CONST_CASTSPELL_DOOM_5 = 91;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_ACID_10 = 400;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_COLD_10 = 401;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_FEAR_10 = 402;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_FIRE_10 = 403;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_GAS_10 = 404;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_LIGHTNING_10 = 405;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_PARALYZE_10 = 406;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_SLEEP_10 = 407;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_SLOW_10 = 408;
  public final static int CONST_CASTSPELL_DRAGON_BREATH_WEAKEN_10 = 409;
  public final static int CONST_CASTSPELL_DROWN_15 = 368;
  public final static int CONST_CASTSPELL_EAGLE_SPLEDOR_10 = 289;
  public final static int CONST_CASTSPELL_EAGLE_SPLEDOR_15 = 290;
  public final static int CONST_CASTSPELL_EAGLE_SPLEDOR_3 = 288;
  public final static int CONST_CASTSPELL_EARTHQUAKE_20 = 357;
  public final static int CONST_CASTSPELL_ELECTRIC_JOLT_1 = 370;
  public final static int CONST_CASTSPELL_ELEMENTAL_SHIELD_12 = 93;
  public final static int CONST_CASTSPELL_ELEMENTAL_SHIELD_7 = 92;
  public final static int CONST_CASTSPELL_ELEMENTAL_SWARM_17 = 94;
  public final static int CONST_CASTSPELL_ENDURANCE_10 = 96;
  public final static int CONST_CASTSPELL_ENDURANCE_15 = 97;
  public final static int CONST_CASTSPELL_ENDURANCE_3 = 95;
  public final static int CONST_CASTSPELL_ENDURE_ELEMENTS_2 = 98;
  public final static int CONST_CASTSPELL_ENERGY_BUFFER_11 = 311;
  public final static int CONST_CASTSPELL_ENERGY_BUFFER_15 = 312;
  public final static int CONST_CASTSPELL_ENERGY_BUFFER_20 = 313;
  public final static int CONST_CASTSPELL_ENERGY_DRAIN_17 = 99;
  public final static int CONST_CASTSPELL_ENERVATION_7 = 100;
  public final static int CONST_CASTSPELL_ENTANGLE_2 = 101;
  public final static int CONST_CASTSPELL_ENTANGLE_5 = 102;
  public final static int CONST_CASTSPELL_ENTROPIC_SHIELD_5 = 349;
  public final static int CONST_CASTSPELL_ETHEREALNESS_18 = 374;
  public final static int CONST_CASTSPELL_ETHEREAL_VISAGE_15 = 196;
  public final static int CONST_CASTSPELL_ETHEREAL_VISAGE_9 = 195;
  public final static int CONST_CASTSPELL_EVARDS_BLACK_TENTACLES_15 = 325;
  public final static int CONST_CASTSPELL_EVARDS_BLACK_TENTACLES_7 = 324;
  public final static int CONST_CASTSPELL_EXPEDITIOUS_RETREAT_5 = 387;
  public final static int CONST_CASTSPELL_FEAR_5 = 103;
  public final static int CONST_CASTSPELL_FEEBLEMIND_9 = 104;
  public final static int CONST_CASTSPELL_FIND_TRAPS_3 = 327;
  public final static int CONST_CASTSPELL_FINGER_OF_DEATH_13 = 105;
  public final static int CONST_CASTSPELL_FIREBALL_10 = 109;
  public final static int CONST_CASTSPELL_FIREBALL_5 = 108;
  public final static int CONST_CASTSPELL_FIREBRAND_15 = 371;
  public final static int CONST_CASTSPELL_FIRE_STORM_13 = 106;
  public final static int CONST_CASTSPELL_FIRE_STORM_18 = 107;
  public final static int CONST_CASTSPELL_FLAME_ARROW_12 = 111;
  public final static int CONST_CASTSPELL_FLAME_ARROW_18 = 112;
  public final static int CONST_CASTSPELL_FLAME_ARROW_5 = 110;
  public final static int CONST_CASTSPELL_FLAME_LASH_10 = 114;
  public final static int CONST_CASTSPELL_FLAME_LASH_3 = 113;
  public final static int CONST_CASTSPELL_FLAME_STRIKE_12 = 116;
  public final static int CONST_CASTSPELL_FLAME_STRIKE_18 = 117;
  public final static int CONST_CASTSPELL_FLAME_STRIKE_7 = 115;
  public final static int CONST_CASTSPELL_FLARE_1 = 347;
  public final static int CONST_CASTSPELL_FLESH_TO_STONE_5 = 398;
  public final static int CONST_CASTSPELL_FOXS_CUNNING_10 = 295;
  public final static int CONST_CASTSPELL_FOXS_CUNNING_15 = 296;
  public final static int CONST_CASTSPELL_FOXS_CUNNING_3 = 294;
  public final static int CONST_CASTSPELL_FREEDOM_OF_MOVEMENT_7 = 118;
  public final static int CONST_CASTSPELL_GATE_17 = 119;
  public final static int CONST_CASTSPELL_GHOSTLY_VISAGE_15 = 194;
  public final static int CONST_CASTSPELL_GHOSTLY_VISAGE_3 = 192;
  public final static int CONST_CASTSPELL_GHOSTLY_VISAGE_9 = 193;
  public final static int CONST_CASTSPELL_GHOUL_TOUCH_3 = 120;
  public final static int CONST_CASTSPELL_GLOBE_OF_INVULNERABILITY_11 = 121;
  public final static int CONST_CASTSPELL_GREASE_2 = 122;
  public final static int CONST_CASTSPELL_GREATER_BULLS_STRENGTH_11 = 300;
  public final static int CONST_CASTSPELL_GREATER_CATS_GRACE_11 = 301;
  public final static int CONST_CASTSPELL_GREATER_DISPELLING_15 = 124;
  public final static int CONST_CASTSPELL_GREATER_DISPELLING_7 = 123;
  public final static int CONST_CASTSPELL_GREATER_EAGLES_SPLENDOR_11 = 297;
  public final static int CONST_CASTSPELL_GREATER_ENDURANCE_11 = 302;
  public final static int CONST_CASTSPELL_GREATER_FOXS_CUNNING_11 = 299;
  public final static int CONST_CASTSPELL_GREATER_MAGIC_FANG_9 = 384;
  public final static int CONST_CASTSPELL_GREATER_OWLS_WISDOM_11 = 298;
  public final static int CONST_CASTSPELL_GREATER_PLANAR_BINDING_15 = 126;
  public final static int CONST_CASTSPELL_GREATER_RESTORATION_13 = 127;
  public final static int CONST_CASTSPELL_GREATER_SHADOW_CONJURATION_9 = 128;
  public final static int CONST_CASTSPELL_GREATER_SPELL_BREACH_11 = 129;
  public final static int CONST_CASTSPELL_GREATER_SPELL_MANTLE_17 = 130;
  public final static int CONST_CASTSPELL_GREATER_STONESKIN_11 = 131;
  public final static int CONST_CASTSPELL_GRENADE_ACID_1 = 341;
  public final static int CONST_CASTSPELL_GRENADE_CALTROPS_1 = 343;
  public final static int CONST_CASTSPELL_GRENADE_CHICKEN_1 = 342;
  public final static int CONST_CASTSPELL_GRENADE_CHOKING_1 = 339;
  public final static int CONST_CASTSPELL_GRENADE_FIRE_1 = 336;
  public final static int CONST_CASTSPELL_GRENADE_HOLY_1 = 338;
  public final static int CONST_CASTSPELL_GRENADE_TANGLE_1 = 337;
  public final static int CONST_CASTSPELL_GRENADE_THUNDERSTONE_1 = 340;
  public final static int CONST_CASTSPELL_GUST_OF_WIND_10 = 410;
  public final static int CONST_CASTSPELL_HAMMER_OF_THE_GODS_12 = 134;
  public final static int CONST_CASTSPELL_HAMMER_OF_THE_GODS_7 = 133;
  public final static int CONST_CASTSPELL_HARM_11 = 136;
  public final static int CONST_CASTSPELL_HASTE_10 = 138;
  public final static int CONST_CASTSPELL_HASTE_5 = 137;
  public final static int CONST_CASTSPELL_HEALING_CIRCLE_16 = 141;
  public final static int CONST_CASTSPELL_HEALING_CIRCLE_9 = 140;
  public final static int CONST_CASTSPELL_HEAL_11 = 139;
  public final static int CONST_CASTSPELL_HOLD_ANIMAL_3 = 142;
  public final static int CONST_CASTSPELL_HOLD_MONSTER_7 = 143;
  public final static int CONST_CASTSPELL_HOLD_PERSON_3 = 144;
  public final static int CONST_CASTSPELL_HORRID_WILTING_15 = 308;
  public final static int CONST_CASTSPELL_HORRID_WILTING_20 = 309;
  public final static int CONST_CASTSPELL_ICE_STORM_9 = 310;
  public final static int CONST_CASTSPELL_IDENTIFY_3 = 147;
  public final static int CONST_CASTSPELL_IMPLOSION_17 = 148;
  public final static int CONST_CASTSPELL_IMPROVED_INVISIBILITY_7 = 149;
  public final static int CONST_CASTSPELL_INCENDIARY_CLOUD_15 = 150;
  public final static int CONST_CASTSPELL_INFERNO_15 = 377;
  public final static int CONST_CASTSPELL_INFLICT_CRITICAL_WOUNDS_12 = 366;
  public final static int CONST_CASTSPELL_INFLICT_LIGHT_WOUNDS_5 = 363;
  public final static int CONST_CASTSPELL_INFLICT_MINOR_WOUNDS_1 = 362;
  public final static int CONST_CASTSPELL_INFLICT_MODERATE_WOUNDS_7 = 364;
  public final static int CONST_CASTSPELL_INFLICT_SERIOUS_WOUNDS_9 = 365;
  public final static int CONST_CASTSPELL_INVISIBILITY_3 = 151;
  public final static int CONST_CASTSPELL_INVISIBILITY_PURGE_5 = 152;
  public final static int CONST_CASTSPELL_INVISIBILITY_SPHERE_5 = 153;
  public final static int CONST_CASTSPELL_ISAACS_GREATER_MISSILE_STORM_15 = 379;
  public final static int CONST_CASTSPELL_ISAACS_LESSER_MISSILE_STORM_13 = 378;
  public final static int CONST_CASTSPELL_KNOCK_3 = 154;
  public final static int CONST_CASTSPELL_LEGEND_LORE_5 = 326;
  public final static int CONST_CASTSPELL_LESSER_DISPEL_3 = 155;
  public final static int CONST_CASTSPELL_LESSER_DISPEL_5 = 156;
  public final static int CONST_CASTSPELL_LESSER_MIND_BLANK_9 = 157;
  public final static int CONST_CASTSPELL_LESSER_PLANAR_BINDING_9 = 158;
  public final static int CONST_CASTSPELL_LESSER_RESTORATION_3 = 159;
  public final static int CONST_CASTSPELL_LESSER_SPELL_BREACH_7 = 160;
  public final static int CONST_CASTSPELL_LESSER_SPELL_MANTLE_9 = 161;
  public final static int CONST_CASTSPELL_LIGHTNING_BOLT_10 = 165;
  public final static int CONST_CASTSPELL_LIGHTNING_BOLT_5 = 164;
  public final static int CONST_CASTSPELL_LIGHT_1 = 162;
  public final static int CONST_CASTSPELL_LIGHT_5 = 163;
  public final static int CONST_CASTSPELL_MAGE_ARMOR_2 = 167;
  public final static int CONST_CASTSPELL_MAGIC_CIRCLE_AGAINST_ALIGNMENT_5 = 286;
  public final static int CONST_CASTSPELL_MAGIC_FANG_5 = 383;
  public final static int CONST_CASTSPELL_MAGIC_MISSILE_3 = 172;
  public final static int CONST_CASTSPELL_MAGIC_MISSILE_5 = 173;
  public final static int CONST_CASTSPELL_MAGIC_MISSILE_9 = 174;
  public final static int CONST_CASTSPELL_MANIPULATE_PORTAL_STONE = 344;
  public final static int CONST_CASTSPELL_MASS_BLINDNESS_DEAFNESS_15 = 179;
  public final static int CONST_CASTSPELL_MASS_CAMOFLAGE_13 = 386;
  public final static int CONST_CASTSPELL_MASS_CHARM_15 = 180;
  public final static int CONST_CASTSPELL_MASS_HASTE_11 = 182;
  public final static int CONST_CASTSPELL_MASS_HEAL_15 = 183;
  public final static int CONST_CASTSPELL_MELFS_ACID_ARROW_3 = 184;
  public final static int CONST_CASTSPELL_MELFS_ACID_ARROW_6 = 185;
  public final static int CONST_CASTSPELL_MELFS_ACID_ARROW_9 = 186;
  public final static int CONST_CASTSPELL_METEOR_SWARM_17 = 187;
  public final static int CONST_CASTSPELL_MIND_BLANK_15 = 188;
  public final static int CONST_CASTSPELL_MIND_FOG_9 = 189;
  public final static int CONST_CASTSPELL_MINOR_GLOBE_OF_INVULNERABILITY_15 = 191;
  public final static int CONST_CASTSPELL_MINOR_GLOBE_OF_INVULNERABILITY_7 = 190;
  public final static int CONST_CASTSPELL_MORDENKAINENS_DISJUNCTION_17 = 197;
  public final static int CONST_CASTSPELL_MORDENKAINENS_SWORD_13 = 198;
  public final static int CONST_CASTSPELL_MORDENKAINENS_SWORD_18 = 199;
  public final static int CONST_CASTSPELL_NATURES_BALANCE_15 = 200;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_BURST_10 = 315;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_BURST_5 = 314;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_10 = 202;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_15 = 203;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_5 = 201;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_1 = 316;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_3 = 317;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_5 = 318;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_7 = 319;
  public final static int CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_9 = 320;
  public final static int CONST_CASTSPELL_NEUTRALIZE_POISON_5 = 204;
  public final static int CONST_CASTSPELL_NUMUSES_0_CHARGES_PER_USE = 7;
  public final static int CONST_CASTSPELL_NUMUSES_1_CHARGE_PER_USE = 6;
  public final static int CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY = 8;
  public final static int CONST_CASTSPELL_NUMUSES_2_CHARGES_PER_USE = 5;
  public final static int CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY = 9;
  public final static int CONST_CASTSPELL_NUMUSES_3_CHARGES_PER_USE = 4;
  public final static int CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY = 10;
  public final static int CONST_CASTSPELL_NUMUSES_4_CHARGES_PER_USE = 3;
  public final static int CONST_CASTSPELL_NUMUSES_4_USES_PER_DAY = 11;
  public final static int CONST_CASTSPELL_NUMUSES_5_CHARGES_PER_USE = 2;
  public final static int CONST_CASTSPELL_NUMUSES_5_USES_PER_DAY = 12;
  public final static int CONST_CASTSPELL_NUMUSES_SINGLE_USE = 1;
  public final static int CONST_CASTSPELL_NUMUSES_UNLIMITED_USE = 13;
  public final static int CONST_CASTSPELL_ONE_WITH_THE_LAND_7 = 351;
  public final static int CONST_CASTSPELL_OWLS_INSIGHT_15 = 369;
  public final static int CONST_CASTSPELL_OWLS_WISDOM_10 = 292;
  public final static int CONST_CASTSPELL_OWLS_WISDOM_15 = 293;
  public final static int CONST_CASTSPELL_OWLS_WISDOM_3 = 291;
  public final static int CONST_CASTSPELL_PHANTASMAL_KILLER_7 = 205;
  public final static int CONST_CASTSPELL_PLANAR_ALLY_15 = 382;
  public final static int CONST_CASTSPELL_PLANAR_BINDING_11 = 206;
  public final static int CONST_CASTSPELL_POISON_5 = 207;
  public final static int CONST_CASTSPELL_POLYMORPH_SELF_7 = 208;
  public final static int CONST_CASTSPELL_POWER_WORD_KILL_17 = 209;
  public final static int CONST_CASTSPELL_POWER_WORD_STUN_13 = 210;
  public final static int CONST_CASTSPELL_PRAYER_5 = 211;
  public final static int CONST_CASTSPELL_PREMONITION_15 = 212;
  public final static int CONST_CASTSPELL_PRISMATIC_SPRAY_13 = 213;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_ALIGNMENT_2 = 284;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_ALIGNMENT_5 = 285;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_ELEMENTS_10 = 217;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_ELEMENTS_3 = 216;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_SPELLS_13 = 224;
  public final static int CONST_CASTSPELL_PROTECTION_FROM_SPELLS_20 = 225;
  public final static int CONST_CASTSPELL_QUILLFIRE_8 = 356;
  public final static int CONST_CASTSPELL_RAISE_DEAD_9 = 226;
  public final static int CONST_CASTSPELL_RAY_OF_ENFEEBLEMENT_2 = 227;
  public final static int CONST_CASTSPELL_RAY_OF_FROST_1 = 228;
  public final static int CONST_CASTSPELL_REGENERATE_13 = 323;
  public final static int CONST_CASTSPELL_REMOVE_BLINDNESS_DEAFNESS_5 = 229;
  public final static int CONST_CASTSPELL_REMOVE_CURSE_5 = 230;
  public final static int CONST_CASTSPELL_REMOVE_DISEASE_5 = 231;
  public final static int CONST_CASTSPELL_REMOVE_FEAR_2 = 232;
  public final static int CONST_CASTSPELL_REMOVE_PARALYSIS_3 = 233;
  public final static int CONST_CASTSPELL_RESISTANCE_2 = 236;
  public final static int CONST_CASTSPELL_RESISTANCE_5 = 237;
  public final static int CONST_CASTSPELL_RESIST_ELEMENTS_10 = 235;
  public final static int CONST_CASTSPELL_RESIST_ELEMENTS_3 = 234;
  public final static int CONST_CASTSPELL_RESTORATION_7 = 238;
  public final static int CONST_CASTSPELL_RESURRECTION_13 = 239;
  public final static int CONST_CASTSPELL_ROGUES_CUNNING_3 = 328;
  public final static int CONST_CASTSPELL_SANCTUARY_2 = 240;
  public final static int CONST_CASTSPELL_SCARE_2 = 241;
  public final static int CONST_CASTSPELL_SEARING_LIGHT_5 = 242;
  public final static int CONST_CASTSPELL_SEE_INVISIBILITY_3 = 243;
  public final static int CONST_CASTSPELL_SHADES_11 = 244;
  public final static int CONST_CASTSPELL_SHADOW_CONJURATION_7 = 245;
  public final static int CONST_CASTSPELL_SHADOW_SHIELD_13 = 246;
  public final static int CONST_CASTSPELL_SHAPECHANGE_17 = 247;
  public final static int CONST_CASTSPELL_SHIELD_5 = 348;
  public final static int CONST_CASTSPELL_SHIELD_OF_FAITH_5 = 381;
  public final static int CONST_CASTSPELL_SILENCE_3 = 249;
  public final static int CONST_CASTSPELL_SLAY_LIVING_9 = 250;
  public final static int CONST_CASTSPELL_SLEEP_2 = 251;
  public final static int CONST_CASTSPELL_SLEEP_5 = 252;
  public final static int CONST_CASTSPELL_SLOW_5 = 253;
  public final static int CONST_CASTSPELL_SOUND_BURST_3 = 254;
  public final static int CONST_CASTSPELL_SPECIAL_ALCOHOL_BEER = 330;
  public final static int CONST_CASTSPELL_SPECIAL_ALCOHOL_SPIRITS = 332;
  public final static int CONST_CASTSPELL_SPECIAL_ALCOHOL_WINE = 331;
  public final static int CONST_CASTSPELL_SPECIAL_HERB_BELLADONNA = 333;
  public final static int CONST_CASTSPELL_SPECIAL_HERB_GARLIC = 334;
  public final static int CONST_CASTSPELL_SPELL_MANTLE_13 = 257;
  public final static int CONST_CASTSPELL_SPELL_RESISTANCE_15 = 256;
  public final static int CONST_CASTSPELL_SPELL_RESISTANCE_9 = 255;
  public final static int CONST_CASTSPELL_SPIKE_GROWTH_9 = 385;
  public final static int CONST_CASTSPELL_STINKING_CLOUD_5 = 259;
  public final static int CONST_CASTSPELL_STONESKIN_7 = 260;
  public final static int CONST_CASTSPELL_STONE_TO_FLESH_5 = 399;
  public final static int CONST_CASTSPELL_STORM_OF_VENGEANCE_17 = 261;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_III_5 = 265;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_II_3 = 264;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_IV_7 = 266;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_IX_17 = 267;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_I_2 = 262;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_I_5 = 263;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_VIII_15 = 271;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_VII_13 = 270;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_VI_11 = 269;
  public final static int CONST_CASTSPELL_SUMMON_CREATURE_V_9 = 268;
  public final static int CONST_CASTSPELL_SUNBEAM_13 = 272;
  public final static int CONST_CASTSPELL_SUNBURST_20 = 358;
  public final static int CONST_CASTSPELL_TASHAS_HIDEOUS_LAUGHTER_7 = 388;
  public final static int CONST_CASTSPELL_TENSERS_TRANSFORMATION_11 = 273;
  public final static int CONST_CASTSPELL_TIME_STOP_17 = 274;
  public final static int CONST_CASTSPELL_TRUE_SEEING_9 = 275;
  public final static int CONST_CASTSPELL_TRUE_STRIKE_5 = 346;
  public final static int CONST_CASTSPELL_UNDEATHS_ETERNAL_FOE_20 = 375;
  public final static int CONST_CASTSPELL_UNIQUE_POWER = 329;
  public final static int CONST_CASTSPELL_UNIQUE_POWER_SELF_ONLY = 335;
  public final static int CONST_CASTSPELL_VAMPIRIC_TOUCH_5 = 277;
  public final static int CONST_CASTSPELL_VIRTUE_1 = 278;
  public final static int CONST_CASTSPELL_WAIL_OF_THE_BANSHEE_17 = 279;
  public final static int CONST_CASTSPELL_WALL_OF_FIRE_9 = 280;
  public final static int CONST_CASTSPELL_WAR_CRY_7 = 322;
  public final static int CONST_CASTSPELL_WEB_3 = 281;
  public final static int CONST_CASTSPELL_WEIRD_17 = 282;
  public final static int CONST_CASTSPELL_WORD_OF_FAITH_13 = 283;
  public final static int CONST_CASTSPELL_WOUNDING_WHISPERS_9 = 372;
  public final static int CONST_CLASS_BARBARIAN = 0;
  public final static int CONST_CLASS_BARD = 1;
  public final static int CONST_CLASS_CLERIC = 2;
  public final static int CONST_CLASS_DRUID = 3;
  public final static int CONST_CLASS_FIGHTER = 4;
  public final static int CONST_CLASS_MONK = 5;
  public final static int CONST_CLASS_PALADIN = 6;
  public final static int CONST_CLASS_RANGER = 7;
  public final static int CONST_CLASS_ROGUE = 8;
  public final static int CONST_CLASS_SORCERER = 9;
  public final static int CONST_CLASS_WIZARD = 10;
  public final static int CONST_CONTAINERWEIGHTRED_100_PERCENT = 5;
  public final static int CONST_CONTAINERWEIGHTRED_20_PERCENT = 1;
  public final static int CONST_CONTAINERWEIGHTRED_40_PERCENT = 2;
  public final static int CONST_CONTAINERWEIGHTRED_60_PERCENT = 3;
  public final static int CONST_CONTAINERWEIGHTRED_80_PERCENT = 4;
  public final static int CONST_DAMAGEBONUS_1 = 1;
  public final static int CONST_DAMAGEBONUS_10 = 20;
  public final static int CONST_DAMAGEBONUS_2 = 2;
  public final static int CONST_DAMAGEBONUS_3 = 3;
  public final static int CONST_DAMAGEBONUS_4 = 4;
  public final static int CONST_DAMAGEBONUS_5 = 5;
  public final static int CONST_DAMAGEBONUS_6 = 16;
  public final static int CONST_DAMAGEBONUS_7 = 17;
  public final static int CONST_DAMAGEBONUS_8 = 18;
  public final static int CONST_DAMAGEBONUS_9 = 19;
  public final static int CONST_DAMAGEIMMUNITY_100_PERCENT = 7;
  public final static int CONST_DAMAGEIMMUNITY_10_PERCENT = 2;
  public final static int CONST_DAMAGEIMMUNITY_25_PERCENT = 3;
  public final static int CONST_DAMAGEIMMUNITY_50_PERCENT = 4;
  public final static int CONST_DAMAGEIMMUNITY_5_PERCENT = 1;
  public final static int CONST_DAMAGEIMMUNITY_75_PERCENT = 5;
  public final static int CONST_DAMAGEIMMUNITY_90_PERCENT = 6;
  public final static int CONST_DAMAGEREDUCTION_1 = 0;
  public final static int CONST_DAMAGEREDUCTION_10 = 9;
  public final static int CONST_DAMAGEREDUCTION_11 = 10;
  public final static int CONST_DAMAGEREDUCTION_12 = 11;
  public final static int CONST_DAMAGEREDUCTION_13 = 12;
  public final static int CONST_DAMAGEREDUCTION_14 = 13;
  public final static int CONST_DAMAGEREDUCTION_15 = 14;
  public final static int CONST_DAMAGEREDUCTION_16 = 15;
  public final static int CONST_DAMAGEREDUCTION_17 = 16;
  public final static int CONST_DAMAGEREDUCTION_18 = 17;
  public final static int CONST_DAMAGEREDUCTION_19 = 18;
  public final static int CONST_DAMAGEREDUCTION_2 = 1;
  public final static int CONST_DAMAGEREDUCTION_20 = 19;
  public final static int CONST_DAMAGEREDUCTION_3 = 2;
  public final static int CONST_DAMAGEREDUCTION_4 = 3;
  public final static int CONST_DAMAGEREDUCTION_5 = 4;
  public final static int CONST_DAMAGEREDUCTION_6 = 5;
  public final static int CONST_DAMAGEREDUCTION_7 = 6;
  public final static int CONST_DAMAGEREDUCTION_8 = 7;
  public final static int CONST_DAMAGEREDUCTION_9 = 8;
  public final static int CONST_DAMAGERESIST_10 = 2;
  public final static int CONST_DAMAGERESIST_15 = 3;
  public final static int CONST_DAMAGERESIST_20 = 4;
  public final static int CONST_DAMAGERESIST_25 = 5;
  public final static int CONST_DAMAGERESIST_30 = 6;
  public final static int CONST_DAMAGERESIST_35 = 7;
  public final static int CONST_DAMAGERESIST_40 = 8;
  public final static int CONST_DAMAGERESIST_45 = 9;
  public final static int CONST_DAMAGERESIST_5 = 1;
  public final static int CONST_DAMAGERESIST_50 = 10;
  public final static int CONST_DAMAGESOAK_10_HP = 2;
  public final static int CONST_DAMAGESOAK_15_HP = 3;
  public final static int CONST_DAMAGESOAK_20_HP = 4;
  public final static int CONST_DAMAGESOAK_25_HP = 5;
  public final static int CONST_DAMAGESOAK_30_HP = 6;
  public final static int CONST_DAMAGESOAK_35_HP = 7;
  public final static int CONST_DAMAGESOAK_40_HP = 8;
  public final static int CONST_DAMAGESOAK_45_HP = 9;
  public final static int CONST_DAMAGESOAK_50_HP = 10;
  public final static int CONST_DAMAGESOAK_5_HP = 1;
  public final static int CONST_DAMAGETYPE_ACID = 6;
  public final static int CONST_DAMAGETYPE_BLUDGEONING = 0;
  public final static int CONST_DAMAGETYPE_COLD = 7;
  public final static int CONST_DAMAGETYPE_DIVINE = 8;
  public final static int CONST_DAMAGETYPE_ELECTRICAL = 9;
  public final static int CONST_DAMAGETYPE_FIRE = 10;
  public final static int CONST_DAMAGETYPE_MAGICAL = 5;
  public final static int CONST_DAMAGETYPE_NEGATIVE = 11;
  public final static int CONST_DAMAGETYPE_PHYSICAL = 4;
  public final static int CONST_DAMAGETYPE_PIERCING = 1;
  public final static int CONST_DAMAGETYPE_POSITIVE = 12;
  public final static int CONST_DAMAGETYPE_SLASHING = 2;
  public final static int CONST_DAMAGETYPE_SONIC = 13;
  public final static int CONST_DAMAGETYPE_SUBDUAL = 3;
  public final static int CONST_DAMAGEVULNERABILITY_100_PERCENT = 7;
  public final static int CONST_DAMAGEVULNERABILITY_10_PERCENT = 2;
  public final static int CONST_DAMAGEVULNERABILITY_25_PERCENT = 3;
  public final static int CONST_DAMAGEVULNERABILITY_50_PERCENT = 4;
  public final static int CONST_DAMAGEVULNERABILITY_5_PERCENT = 1;
  public final static int CONST_DAMAGEVULNERABILITY_75_PERCENT = 5;
  public final static int CONST_DAMAGEVULNERABILITY_90_PERCENT = 6;
  public final static int CONST_FEAT_ALERTNESS = 0;
  public final static int CONST_FEAT_AMBIDEXTROUS = 1;
  public final static int CONST_FEAT_ARMOR_PROF_HEAVY = 24;
  public final static int CONST_FEAT_ARMOR_PROF_LIGHT = 25;
  public final static int CONST_FEAT_ARMOR_PROF_MEDIUM = 26;
  public final static int CONST_FEAT_CLEAVE = 2;
  public final static int CONST_FEAT_COMBAT_CASTING = 3;
  public final static int CONST_FEAT_DISARM = 28;
  public final static int CONST_FEAT_DISARM_WHIP = 37;
  public final static int CONST_FEAT_DODGE = 4;
  public final static int CONST_FEAT_EXTRA_TURNING = 5;
  public final static int CONST_FEAT_HIDE_IN_PLAIN_SIGHT = 31;
  public final static int CONST_FEAT_IMPCRITUNARM = 20;
  public final static int CONST_FEAT_KNOCKDOWN = 6;
  public final static int CONST_FEAT_MOBILITY = 27;
  public final static int CONST_FEAT_PLAYER_TOOL_01 = 53;
  public final static int CONST_FEAT_PLAYER_TOOL_02 = 54;
  public final static int CONST_FEAT_PLAYER_TOOL_03 = 55;
  public final static int CONST_FEAT_PLAYER_TOOL_04 = 56;
  public final static int CONST_FEAT_PLAYER_TOOL_05 = 57;
  public final static int CONST_FEAT_PLAYER_TOOL_06 = 58;
  public final static int CONST_FEAT_PLAYER_TOOL_07 = 59;
  public final static int CONST_FEAT_PLAYER_TOOL_08 = 60;
  public final static int CONST_FEAT_PLAYER_TOOL_09 = 61;
  public final static int CONST_FEAT_PLAYER_TOOL_10 = 62;
  public final static int CONST_FEAT_POINTBLANK = 7;
  public final static int CONST_FEAT_POWERATTACK = 16;
  public final static int CONST_FEAT_RAPID_SHOT = 30;
  public final static int CONST_FEAT_SHIELD_PROFICIENCY = 35;
  public final static int CONST_FEAT_SNEAK_ATTACK_1D6 = 32;
  public final static int CONST_FEAT_SNEAK_ATTACK_2D6 = 33;
  public final static int CONST_FEAT_SNEAK_ATTACK_3D6 = 34;
  public final static int CONST_FEAT_SNEAK_ATTACK_5D6 = 39;
  public final static int CONST_FEAT_SPELLFOCUSABJ = 8;
  public final static int CONST_FEAT_SPELLFOCUSCON = 9;
  public final static int CONST_FEAT_SPELLFOCUSDIV = 10;
  public final static int CONST_FEAT_SPELLFOCUSENC = 11;
  public final static int CONST_FEAT_SPELLFOCUSEVO = 12;
  public final static int CONST_FEAT_SPELLFOCUSILL = 13;
  public final static int CONST_FEAT_SPELLFOCUSNEC = 14;
  public final static int CONST_FEAT_SPELLPENETRATION = 15;
  public final static int CONST_FEAT_TWO_WEAPON_FIGHTING = 17;
  public final static int CONST_FEAT_USE_POISON = 36;
  public final static int CONST_FEAT_WEAPFINESSE = 19;
  public final static int CONST_FEAT_WEAPON_PROF_CREATURE = 38;
  public final static int CONST_FEAT_WEAPON_PROF_EXOTIC = 21;
  public final static int CONST_FEAT_WEAPON_PROF_MARTIAL = 22;
  public final static int CONST_FEAT_WEAPON_PROF_SIMPLE = 23;
  public final static int CONST_FEAT_WEAPSPEUNARM = 18;
  public final static int CONST_FEAT_WHIRLWIND = 29;
  public final static int CONST_IMMUNITYMISC_BACKSTAB = 0;
  public final static int CONST_IMMUNITYMISC_CRITICAL_HITS = 8;
  public final static int CONST_IMMUNITYMISC_DEATH_MAGIC = 9;
  public final static int CONST_IMMUNITYMISC_DISEASE = 4;
  public final static int CONST_IMMUNITYMISC_FEAR = 5;
  public final static int CONST_IMMUNITYMISC_KNOCKDOWN = 6;
  public final static int CONST_IMMUNITYMISC_LEVEL_ABIL_DRAIN = 1;
  public final static int CONST_IMMUNITYMISC_MINDSPELLS = 2;
  public final static int CONST_IMMUNITYMISC_PARALYSIS = 7;
  public final static int CONST_IMMUNITYMISC_POISON = 3;
  public final static int CONST_IMMUNITYSPELL_ACID_FOG = 0;
  public final static int CONST_IMMUNITYSPELL_AID = 1;
  public final static int CONST_IMMUNITYSPELL_AURA_OF_VITALITY = 182;
  public final static int CONST_IMMUNITYSPELL_BARKSKIN = 2;
  public final static int CONST_IMMUNITYSPELL_BESTOW_CURSE = 3;
  public final static int CONST_IMMUNITYSPELL_BLINDNESS_AND_DEAFNESS = 6;
  public final static int CONST_IMMUNITYSPELL_BURNING_HANDS = 8;
  public final static int CONST_IMMUNITYSPELL_CALL_LIGHTNING = 9;
  public final static int CONST_IMMUNITYSPELL_CHAIN_LIGHTNING = 12;
  public final static int CONST_IMMUNITYSPELL_CHARM_MONSTER = 13;
  public final static int CONST_IMMUNITYSPELL_CHARM_PERSON = 14;
  public final static int CONST_IMMUNITYSPELL_CHARM_PERSON_OR_ANIMAL = 15;
  public final static int CONST_IMMUNITYSPELL_CIRCLE_OF_DEATH = 16;
  public final static int CONST_IMMUNITYSPELL_CIRCLE_OF_DOOM = 17;
  public final static int CONST_IMMUNITYSPELL_CLOUDKILL = 21;
  public final static int CONST_IMMUNITYSPELL_COLOR_SPRAY = 22;
  public final static int CONST_IMMUNITYSPELL_CONE_OF_COLD = 23;
  public final static int CONST_IMMUNITYSPELL_CONFUSION = 24;
  public final static int CONST_IMMUNITYSPELL_CONTAGION = 25;
  public final static int CONST_IMMUNITYSPELL_CONTROL_UNDEAD = 26;
  public final static int CONST_IMMUNITYSPELL_CURE_CRITICAL_WOUNDS = 27;
  public final static int CONST_IMMUNITYSPELL_CURE_LIGHT_WOUNDS = 28;
  public final static int CONST_IMMUNITYSPELL_CURE_MINOR_WOUNDS = 29;
  public final static int CONST_IMMUNITYSPELL_CURE_MODERATE_WOUNDS = 30;
  public final static int CONST_IMMUNITYSPELL_CURE_SERIOUS_WOUNDS = 31;
  public final static int CONST_IMMUNITYSPELL_DARKNESS = 32;
  public final static int CONST_IMMUNITYSPELL_DAZE = 33;
  public final static int CONST_IMMUNITYSPELL_DEATH_WARD = 34;
  public final static int CONST_IMMUNITYSPELL_DELAYED_BLAST_FIREBALL = 35;
  public final static int CONST_IMMUNITYSPELL_DISMISSAL = 36;
  public final static int CONST_IMMUNITYSPELL_DISPEL_MAGIC = 37;
  public final static int CONST_IMMUNITYSPELL_DOMINATE_ANIMAL = 39;
  public final static int CONST_IMMUNITYSPELL_DOMINATE_MONSTER = 40;
  public final static int CONST_IMMUNITYSPELL_DOMINATE_PERSON = 41;
  public final static int CONST_IMMUNITYSPELL_DOOM = 42;
  public final static int CONST_IMMUNITYSPELL_EAGLE_SPLEDOR = 173;
  public final static int CONST_IMMUNITYSPELL_ENERGY_DRAIN = 46;
  public final static int CONST_IMMUNITYSPELL_ENERVATION = 47;
  public final static int CONST_IMMUNITYSPELL_ENTANGLE = 48;
  public final static int CONST_IMMUNITYSPELL_EVARDS_BLACK_TENTACLES = 185;
  public final static int CONST_IMMUNITYSPELL_FEAR = 49;
  public final static int CONST_IMMUNITYSPELL_FEEBLEMIND = 50;
  public final static int CONST_IMMUNITYSPELL_FIND_TRAPS = 187;
  public final static int CONST_IMMUNITYSPELL_FINGER_OF_DEATH = 51;
  public final static int CONST_IMMUNITYSPELL_FIREBALL = 53;
  public final static int CONST_IMMUNITYSPELL_FIRE_STORM = 52;
  public final static int CONST_IMMUNITYSPELL_FLAME_ARROW = 54;
  public final static int CONST_IMMUNITYSPELL_FLAME_LASH = 55;
  public final static int CONST_IMMUNITYSPELL_FLAME_STRIKE = 56;
  public final static int CONST_IMMUNITYSPELL_FOXS_CUNNING = 175;
  public final static int CONST_IMMUNITYSPELL_FREEDOM_OF_MOVEMENT = 57;
  public final static int CONST_IMMUNITYSPELL_GREASE = 59;
  public final static int CONST_IMMUNITYSPELL_GREATER_BULLS_STRENGTH = 179;
  public final static int CONST_IMMUNITYSPELL_GREATER_CATS_GRACE = 180;
  public final static int CONST_IMMUNITYSPELL_GREATER_DISPELLING = 60;
  public final static int CONST_IMMUNITYSPELL_GREATER_EAGLES_SPLENDOR = 176;
  public final static int CONST_IMMUNITYSPELL_GREATER_ENDURANCE = 181;
  public final static int CONST_IMMUNITYSPELL_GREATER_FOXS_CUNNING = 178;
  public final static int CONST_IMMUNITYSPELL_GREATER_OWLS_WISDOM = 177;
  public final static int CONST_IMMUNITYSPELL_GREATER_PLANAR_BINDING = 62;
  public final static int CONST_IMMUNITYSPELL_GREATER_SHADOW_CONJURATION = 64;
  public final static int CONST_IMMUNITYSPELL_GREATER_SPELL_BREACH = 65;
  public final static int CONST_IMMUNITYSPELL_HAMMER_OF_THE_GODS = 68;
  public final static int CONST_IMMUNITYSPELL_HARM = 69;
  public final static int CONST_IMMUNITYSPELL_HEAL = 71;
  public final static int CONST_IMMUNITYSPELL_HEALING_CIRCLE = 72;
  public final static int CONST_IMMUNITYSPELL_HOLD_ANIMAL = 73;
  public final static int CONST_IMMUNITYSPELL_HOLD_MONSTER = 74;
  public final static int CONST_IMMUNITYSPELL_HOLD_PERSON = 75;
  public final static int CONST_IMMUNITYSPELL_IMPLOSION = 78;
  public final static int CONST_IMMUNITYSPELL_IMPROVED_INVISIBILITY = 79;
  public final static int CONST_IMMUNITYSPELL_INCENDIARY_CLOUD = 80;
  public final static int CONST_IMMUNITYSPELL_INVISIBILITY_PURGE = 82;
  public final static int CONST_IMMUNITYSPELL_LEGEND_LORE = 186;
  public final static int CONST_IMMUNITYSPELL_LESSER_DISPEL = 84;
  public final static int CONST_IMMUNITYSPELL_LESSER_PLANAR_BINDING = 86;
  public final static int CONST_IMMUNITYSPELL_LESSER_SPELL_BREACH = 88;
  public final static int CONST_IMMUNITYSPELL_LIGHTNING_BOLT = 91;
  public final static int CONST_IMMUNITYSPELL_MAGIC_CIRCLE_AGAINST_ALIGNMENT = 171;
  public final static int CONST_IMMUNITYSPELL_MAGIC_MISSILE = 97;
  public final static int CONST_IMMUNITYSPELL_MASS_BLINDNESS_AND_DEAFNESS = 100;
  public final static int CONST_IMMUNITYSPELL_MASS_CHARM = 101;
  public final static int CONST_IMMUNITYSPELL_MASS_HEAL = 104;
  public final static int CONST_IMMUNITYSPELL_MELFS_ACID_ARROW = 105;
  public final static int CONST_IMMUNITYSPELL_METEOR_SWARM = 106;
  public final static int CONST_IMMUNITYSPELL_MIND_FOG = 108;
  public final static int CONST_IMMUNITYSPELL_MORDENKAINENS_DISJUNCTION = 112;
  public final static int CONST_IMMUNITYSPELL_OWLS_WISDOM = 174;
  public final static int CONST_IMMUNITYSPELL_PHANTASMAL_KILLER = 116;
  public final static int CONST_IMMUNITYSPELL_PLANAR_BINDING = 117;
  public final static int CONST_IMMUNITYSPELL_POISON = 118;
  public final static int CONST_IMMUNITYSPELL_POWER_WORD_KILL = 120;
  public final static int CONST_IMMUNITYSPELL_POWER_WORD_STUN = 121;
  public final static int CONST_IMMUNITYSPELL_PRISMATIC_SPRAY = 124;
  public final static int CONST_IMMUNITYSPELL_RAY_OF_ENFEEBLEMENT = 131;
  public final static int CONST_IMMUNITYSPELL_RAY_OF_FROST = 132;
  public final static int CONST_IMMUNITYSPELL_REGENERATE = 184;
  public final static int CONST_IMMUNITYSPELL_SCARE = 142;
  public final static int CONST_IMMUNITYSPELL_SEARING_LIGHT = 143;
  public final static int CONST_IMMUNITYSPELL_SHADES = 145;
  public final static int CONST_IMMUNITYSPELL_SHADOW_CONJURATION = 146;
  public final static int CONST_IMMUNITYSPELL_SILENCE = 150;
  public final static int CONST_IMMUNITYSPELL_SLAY_LIVING = 151;
  public final static int CONST_IMMUNITYSPELL_SLEEP = 152;
  public final static int CONST_IMMUNITYSPELL_SLOW = 153;
  public final static int CONST_IMMUNITYSPELL_SOUND_BURST = 154;
  public final static int CONST_IMMUNITYSPELL_STINKING_CLOUD = 158;
  public final static int CONST_IMMUNITYSPELL_STONESKIN = 159;
  public final static int CONST_IMMUNITYSPELL_STORM_OF_VENGEANCE = 160;
  public final static int CONST_IMMUNITYSPELL_SUNBEAM = 161;
  public final static int CONST_IMMUNITYSPELL_VIRTUE = 165;
  public final static int CONST_IMMUNITYSPELL_WAIL_OF_THE_BANSHEE = 166;
  public final static int CONST_IMMUNITYSPELL_WAR_CRY = 183;
  public final static int CONST_IMMUNITYSPELL_WEB = 167;
  public final static int CONST_IMMUNITYSPELL_WEIRD = 168;
  public final static int CONST_IMMUNITYSPELL_WORD_OF_FAITH = 169;
  public final static int CONST_LIGHTBRIGHTNESS_BRIGHT = 4;
  public final static int CONST_LIGHTBRIGHTNESS_DIM = 1;
  public final static int CONST_LIGHTBRIGHTNESS_LOW = 2;
  public final static int CONST_LIGHTBRIGHTNESS_NORMAL = 3;
  public final static int CONST_LIGHTCOLOR_BLUE = 0;
  public final static int CONST_LIGHTCOLOR_GREEN = 4;
  public final static int CONST_LIGHTCOLOR_ORANGE = 5;
  public final static int CONST_LIGHTCOLOR_PURPLE = 2;
  public final static int CONST_LIGHTCOLOR_RED = 3;
  public final static int CONST_LIGHTCOLOR_WHITE = 6;
  public final static int CONST_LIGHTCOLOR_YELLOW = 1;
  public final static int CONST_ONHIT_ABILITYDRAIN = 18;
  public final static int CONST_ONHIT_BLINDNESS = 16;
  public final static int CONST_ONHIT_CASTSPELL_ACID_FOG = 0;
  public final static int CONST_ONHIT_CASTSPELL_ACID_SPLASH = 81;
  public final static int CONST_ONHIT_CASTSPELL_ACTIVATE_ITEM = 78;
  public final static int CONST_ONHIT_CASTSPELL_BALAGARNSIRONHORN = 91;
  public final static int CONST_ONHIT_CASTSPELL_BALL_LIGHTNING = 113;
  public final static int CONST_ONHIT_CASTSPELL_BANE = 100;
  public final static int CONST_ONHIT_CASTSPELL_BANISHMENT = 85;
  public final static int CONST_ONHIT_CASTSPELL_BESTOW_CURSE = 1;
  public final static int CONST_ONHIT_CASTSPELL_BIGBYS_CLENCHED_FIST = 106;
  public final static int CONST_ONHIT_CASTSPELL_BIGBYS_CRUSHING_HAND = 107;
  public final static int CONST_ONHIT_CASTSPELL_BIGBYS_FORCEFUL_HAND = 104;
  public final static int CONST_ONHIT_CASTSPELL_BIGBYS_GRASPING_HAND = 105;
  public final static int CONST_ONHIT_CASTSPELL_BIGBYS_INTERPOSING_HAND = 103;
  public final static int CONST_ONHIT_CASTSPELL_BLADE_BARRIER = 2;
  public final static int CONST_ONHIT_CASTSPELL_BLINDNESS_AND_DEAFNESS = 3;
  public final static int CONST_ONHIT_CASTSPELL_BOMBARDMENT = 80;
  public final static int CONST_ONHIT_CASTSPELL_CALL_LIGHTNING = 4;
  public final static int CONST_ONHIT_CASTSPELL_CHAIN_LIGHTNING = 5;
  public final static int CONST_ONHIT_CASTSPELL_CLOUDKILL = 6;
  public final static int CONST_ONHIT_CASTSPELL_COMBUST = 140;
  public final static int CONST_ONHIT_CASTSPELL_CONFUSION = 7;
  public final static int CONST_ONHIT_CASTSPELL_CONTAGION = 8;
  public final static int CONST_ONHIT_CASTSPELL_CREEPING_DOOM = 72;
  public final static int CONST_ONHIT_CASTSPELL_CRUMBLE = 110;
  public final static int CONST_ONHIT_CASTSPELL_DARKNESS = 9;
  public final static int CONST_ONHIT_CASTSPELL_DAZE = 10;
  public final static int CONST_ONHIT_CASTSPELL_DEAFENING_CLNG = 137;
  public final static int CONST_ONHIT_CASTSPELL_DELAYED_BLAST_FIREBALL = 11;
  public final static int CONST_ONHIT_CASTSPELL_DESTRUCTION = 73;
  public final static int CONST_ONHIT_CASTSPELL_DISMISSAL = 12;
  public final static int CONST_ONHIT_CASTSPELL_DISPEL_MAGIC = 13;
  public final static int CONST_ONHIT_CASTSPELL_DOOM = 14;
  public final static int CONST_ONHIT_CASTSPELL_DROWN = 92;
  public final static int CONST_ONHIT_CASTSPELL_EARTHQUAKE = 83;
  public final static int CONST_ONHIT_CASTSPELL_ELECTRIC_JOLT = 93;
  public final static int CONST_ONHIT_CASTSPELL_ENERGY_DRAIN = 15;
  public final static int CONST_ONHIT_CASTSPELL_ENERVATION = 16;
  public final static int CONST_ONHIT_CASTSPELL_ENTANGLE = 17;
  public final static int CONST_ONHIT_CASTSPELL_EVARDS_BLACK_TENTACLES = 77;
  public final static int CONST_ONHIT_CASTSPELL_EVIL_BLIGHT = 121;
  public final static int CONST_ONHIT_CASTSPELL_FEAR = 18;
  public final static int CONST_ONHIT_CASTSPELL_FEEBLEMIND = 19;
  public final static int CONST_ONHIT_CASTSPELL_FIREBALL = 21;
  public final static int CONST_ONHIT_CASTSPELL_FIREBRAND = 94;
  public final static int CONST_ONHIT_CASTSPELL_FIRE_STORM = 20;
  public final static int CONST_ONHIT_CASTSPELL_FLAME_LASH = 22;
  public final static int CONST_ONHIT_CASTSPELL_FLAME_STRIKE = 23;
  public final static int CONST_ONHIT_CASTSPELL_FLARE = 79;
  public final static int CONST_ONHIT_CASTSPELL_FLESH_TO_STONE = 108;
  public final static int CONST_ONHIT_CASTSPELL_FREEZE = 139;
  public final static int CONST_ONHIT_CASTSPELL_GEDLEES_ELECTRIC_LOOP = 114;
  public final static int CONST_ONHIT_CASTSPELL_GHOUL_TOUCH = 24;
  public final static int CONST_ONHIT_CASTSPELL_GREASE = 25;
  public final static int CONST_ONHIT_CASTSPELL_GREATER_DISPELLING = 26;
  public final static int CONST_ONHIT_CASTSPELL_GREATER_SPELL_BREACH = 27;
  public final static int CONST_ONHIT_CASTSPELL_GREAT_THUNDERCLAP = 112;
  public final static int CONST_ONHIT_CASTSPELL_GUST_OF_WIND = 28;
  public final static int CONST_ONHIT_CASTSPELL_HAMMER_OF_THE_GODS = 29;
  public final static int CONST_ONHIT_CASTSPELL_HARM = 30;
  public final static int CONST_ONHIT_CASTSPELL_HOLD_ANIMAL = 31;
  public final static int CONST_ONHIT_CASTSPELL_HOLD_MONSTER = 32;
  public final static int CONST_ONHIT_CASTSPELL_HOLD_PERSON = 33;
  public final static int CONST_ONHIT_CASTSPELL_HORIZIKAULS_BOOM = 115;
  public final static int CONST_ONHIT_CASTSPELL_HORRID_WILTING = 74;
  public final static int CONST_ONHIT_CASTSPELL_ICE_STORM = 75;
  public final static int CONST_ONHIT_CASTSPELL_IMPLOSION = 34;
  public final static int CONST_ONHIT_CASTSPELL_INCENDIARY_CLOUD = 35;
  public final static int CONST_ONHIT_CASTSPELL_INFERNO = 97;
  public final static int CONST_ONHIT_CASTSPELL_INFESTATION_OF_MAGGOTS = 111;
  public final static int CONST_ONHIT_CASTSPELL_INFLICT_CRITICAL_WOUNDS = 90;
  public final static int CONST_ONHIT_CASTSPELL_INFLICT_LIGHT_WOUNDS = 87;
  public final static int CONST_ONHIT_CASTSPELL_INFLICT_MINOR_WOUNDS = 86;
  public final static int CONST_ONHIT_CASTSPELL_INFLICT_MODERATE_WOUNDS = 88;
  public final static int CONST_ONHIT_CASTSPELL_INFLICT_SERIOUS_WOUNDS = 89;
  public final static int CONST_ONHIT_CASTSPELL_INTELLIGENT_WEAPON_ONHIT = 135;
  public final static int CONST_ONHIT_CASTSPELL_ISAACS_GREATER_MISSILE_STORM = 99;
  public final static int CONST_ONHIT_CASTSPELL_ISAACS_LESSER_MISSILE_STORM = 98;
  public final static int CONST_ONHIT_CASTSPELL_KNOCKDOWN = 138;
  public final static int CONST_ONHIT_CASTSPELL_LESSER_DISPEL = 36;
  public final static int CONST_ONHIT_CASTSPELL_LESSER_SPELL_BREACH = 38;
  public final static int CONST_ONHIT_CASTSPELL_LIGHT = 40;
  public final static int CONST_ONHIT_CASTSPELL_LIGHTNING_BOLT = 41;
  public final static int CONST_ONHIT_CASTSPELL_MAGIC_MISSILE = 42;
  public final static int CONST_ONHIT_CASTSPELL_MASS_BLINDNESS_AND_DEAFNESS = 43;
  public final static int CONST_ONHIT_CASTSPELL_MASS_CHARM = 44;
  public final static int CONST_ONHIT_CASTSPELL_MELFS_ACID_ARROW = 45;
  public final static int CONST_ONHIT_CASTSPELL_MESTILS_ACID_BREATH = 116;
  public final static int CONST_ONHIT_CASTSPELL_METEOR_SWARM = 46;
  public final static int CONST_ONHIT_CASTSPELL_MIND_FOG = 47;
  public final static int CONST_ONHIT_CASTSPELL_NEGATIVE_ENERGY_BURST = 76;
  public final static int CONST_ONHIT_CASTSPELL_ONHITDEMILICHTOUCH = 133;
  public final static int CONST_ONHIT_CASTSPELL_ONHITDRACOLICHTOUCH = 134;
  public final static int CONST_ONHIT_CASTSPELL_ONHITFLAMINGSKIN = 129;
  public final static int CONST_ONHIT_CASTSPELL_ONHITRUINARMORBEBILITH = 132;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_CHAOSSHIELD = 130;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_CONSTRICTWEAPON = 131;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_DARKFIRE = 127;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_EXTRACTBRAIN = 128;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_FIREDAMAGE = 124;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_PLANARRIFT = 126;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_SLAYRAKSHASA = 123;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_TELEPORT = 122;
  public final static int CONST_ONHIT_CASTSPELL_ONHIT_UNIQUEPOWER = 125;
  public final static int CONST_ONHIT_CASTSPELL_PARALYZE_2 = 136;
  public final static int CONST_ONHIT_CASTSPELL_PHANTASMAL_KILLER = 49;
  public final static int CONST_ONHIT_CASTSPELL_POISON = 50;
  public final static int CONST_ONHIT_CASTSPELL_POWER_WORD_KILL = 51;
  public final static int CONST_ONHIT_CASTSPELL_POWER_WORD_STUN = 52;
  public final static int CONST_ONHIT_CASTSPELL_QUILLFIRE = 82;
  public final static int CONST_ONHIT_CASTSPELL_SCARE = 54;
  public final static int CONST_ONHIT_CASTSPELL_SCINTILLATING_SPHERE = 117;
  public final static int CONST_ONHIT_CASTSPELL_SEARING_LIGHT = 55;
  public final static int CONST_ONHIT_CASTSPELL_SILENCE = 56;
  public final static int CONST_ONHIT_CASTSPELL_SLAY_LIVING = 57;
  public final static int CONST_ONHIT_CASTSPELL_SLEEP = 58;
  public final static int CONST_ONHIT_CASTSPELL_SLOW = 59;
  public final static int CONST_ONHIT_CASTSPELL_SOUND_BURST = 60;
  public final static int CONST_ONHIT_CASTSPELL_SPIKE_GROWTH = 101;
  public final static int CONST_ONHIT_CASTSPELL_STINKING_CLOUD = 61;
  public final static int CONST_ONHIT_CASTSPELL_STONEHOLD = 119;
  public final static int CONST_ONHIT_CASTSPELL_STONE_TO_FLESH = 109;
  public final static int CONST_ONHIT_CASTSPELL_STORM_OF_VENGEANCE = 63;
  public final static int CONST_ONHIT_CASTSPELL_SUNBEAM = 64;
  public final static int CONST_ONHIT_CASTSPELL_SUNBURST = 84;
  public final static int CONST_ONHIT_CASTSPELL_TASHAS_HIDEOUS_LAUGHTER = 102;
  public final static int CONST_ONHIT_CASTSPELL_UNDEATHS_ETERNAL_FOE = 96;
  public final static int CONST_ONHIT_CASTSPELL_UNDEATH_TO_DEATH = 118;
  public final static int CONST_ONHIT_CASTSPELL_VAMPIRIC_TOUCH = 65;
  public final static int CONST_ONHIT_CASTSPELL_WAIL_OF_THE_BANSHEE = 66;
  public final static int CONST_ONHIT_CASTSPELL_WALL_OF_FIRE = 67;
  public final static int CONST_ONHIT_CASTSPELL_WEB = 68;
  public final static int CONST_ONHIT_CASTSPELL_WEIRD = 69;
  public final static int CONST_ONHIT_CASTSPELL_WORD_OF_FAITH = 70;
  public final static int CONST_ONHIT_CASTSPELL_WOUNDING_WHISPERS = 95;
  public final static int CONST_ONHIT_CONFUSION = 3;
  public final static int CONST_ONHIT_DAZE = 5;
  public final static int CONST_ONHIT_DEAFNESS = 15;
  public final static int CONST_ONHIT_DISEASE = 20;
  public final static int CONST_ONHIT_DISPELMAGIC = 11;
  public final static int CONST_ONHIT_DOOM = 6;
  public final static int CONST_ONHIT_DURATION_10_PERCENT_4_ROUNDS = 1;
  public final static int CONST_ONHIT_DURATION_25_PERCENT_3_ROUNDS = 2;
  public final static int CONST_ONHIT_DURATION_50_PERCENT_2_ROUNDS = 3;
  public final static int CONST_ONHIT_DURATION_5_PERCENT_5_ROUNDS = 0;
  public final static int CONST_ONHIT_DURATION_75_PERCENT_1_ROUND = 4;
  public final static int CONST_ONHIT_FEAR = 7;
  public final static int CONST_ONHIT_GREATERDISPEL = 12;
  public final static int CONST_ONHIT_HOLD = 2;
  public final static int CONST_ONHIT_ITEMPOISON = 19;
  public final static int CONST_ONHIT_KNOCK = 8;
  public final static int CONST_ONHIT_LESSERDISPEL = 10;
  public final static int CONST_ONHIT_LEVELDRAIN = 17;
  public final static int CONST_ONHIT_MORDSDISJUNCTION = 13;
  public final static int CONST_ONHIT_SAVEDC_14 = 0;
  public final static int CONST_ONHIT_SAVEDC_16 = 1;
  public final static int CONST_ONHIT_SAVEDC_18 = 2;
  public final static int CONST_ONHIT_SAVEDC_20 = 3;
  public final static int CONST_ONHIT_SAVEDC_22 = 4;
  public final static int CONST_ONHIT_SAVEDC_24 = 5;
  public final static int CONST_ONHIT_SAVEDC_26 = 6;
  public final static int CONST_ONHIT_SILENCE = 14;
  public final static int CONST_ONHIT_SLAYALIGNMENT = 23;
  public final static int CONST_ONHIT_SLAYALIGNMENTGROUP = 22;
  public final static int CONST_ONHIT_SLAYRACE = 21;
  public final static int CONST_ONHIT_SLEEP = 0;
  public final static int CONST_ONHIT_SLOW = 9;
  public final static int CONST_ONHIT_STUN = 1;
  public final static int CONST_ONHIT_VORPAL = 24;
  public final static int CONST_ONHIT_WOUNDING = 25;
  public final static int CONST_ONMONSTERHIT_ABILITYDRAIN = 0;
  public final static int CONST_ONMONSTERHIT_CONFUSION = 1;
  public final static int CONST_ONMONSTERHIT_DISEASE = 2;
  public final static int CONST_ONMONSTERHIT_DOOM = 3;
  public final static int CONST_ONMONSTERHIT_FEAR = 4;
  public final static int CONST_ONMONSTERHIT_LEVELDRAIN = 5;
  public final static int CONST_ONMONSTERHIT_POISON = 6;
  public final static int CONST_ONMONSTERHIT_SLOW = 7;
  public final static int CONST_ONMONSTERHIT_STUN = 8;
  public final static int CONST_ONMONSTERHIT_WOUNDING = 9;
  public final static int CONST_POISON_1D2_CHADAMAGE = 5;
  public final static int CONST_POISON_1D2_CONDAMAGE = 2;
  public final static int CONST_POISON_1D2_DEXDAMAGE = 1;
  public final static int CONST_POISON_1D2_INTDAMAGE = 3;
  public final static int CONST_POISON_1D2_STRDAMAGE = 0;
  public final static int CONST_POISON_1D2_WISDAMAGE = 4;
  public final static int CONST_QUALITY_ABOVE_AVERAGE = 7;
  public final static int CONST_QUALITY_AVERAGE = 6;
  public final static int CONST_QUALITY_BELOW_AVERAGE = 5;
  public final static int CONST_QUALITY_CUT = 14;
  public final static int CONST_QUALITY_DESTROYED = 1;
  public final static int CONST_QUALITY_EXCELLENT = 10;
  public final static int CONST_QUALITY_GOD_LIKE = 12;
  public final static int CONST_QUALITY_GOOD = 8;
  public final static int CONST_QUALITY_MASTERWORK = 11;
  public final static int CONST_QUALITY_POLISHED = 15;
  public final static int CONST_QUALITY_POOR = 4;
  public final static int CONST_QUALITY_RAW = 13;
  public final static int CONST_QUALITY_RUINED = 2;
  public final static int CONST_QUALITY_UNKOWN = 0;
  public final static int CONST_QUALITY_VERY_GOOD = 9;
  public final static int CONST_QUALITY_VERY_POOR = 3;
  public final static int CONST_RACIALTYPE_ABERRATION = 7;
  public final static int CONST_RACIALTYPE_ANIMAL = 8;
  public final static int CONST_RACIALTYPE_BEAST = 9;
  public final static int CONST_RACIALTYPE_CONSTRUCT = 10;
  public final static int CONST_RACIALTYPE_DRAGON = 11;
  public final static int CONST_RACIALTYPE_DWARF = 0;
  public final static int CONST_RACIALTYPE_ELEMENTAL = 16;
  public final static int CONST_RACIALTYPE_ELF = 1;
  public final static int CONST_RACIALTYPE_FEY = 17;
  public final static int CONST_RACIALTYPE_GIANT = 18;
  public final static int CONST_RACIALTYPE_GNOME = 2;
  public final static int CONST_RACIALTYPE_HALFELF = 4;
  public final static int CONST_RACIALTYPE_HALFLING = 3;
  public final static int CONST_RACIALTYPE_HALFORC = 5;
  public final static int CONST_RACIALTYPE_HUMAN = 6;
  public final static int CONST_RACIALTYPE_HUMANOID_GOBLINOID = 12;
  public final static int CONST_RACIALTYPE_HUMANOID_MONSTROUS = 13;
  public final static int CONST_RACIALTYPE_HUMANOID_ORC = 14;
  public final static int CONST_RACIALTYPE_HUMANOID_REPTILIAN = 15;
  public final static int CONST_RACIALTYPE_MAGICAL_BEAST = 19;
  public final static int CONST_RACIALTYPE_OUTSIDER = 20;
  public final static int CONST_RACIALTYPE_SHAPECHANGER = 23;
  public final static int CONST_RACIALTYPE_UNDEAD = 24;
  public final static int CONST_RACIALTYPE_VERMIN = 25;
  public final static int CONST_REDUCEDWEIGHT_10_PERCENT = 5;
  public final static int CONST_REDUCEDWEIGHT_20_PERCENT = 4;
  public final static int CONST_REDUCEDWEIGHT_40_PERCENT = 3;
  public final static int CONST_REDUCEDWEIGHT_60_PERCENT = 2;
  public final static int CONST_REDUCEDWEIGHT_80_PERCENT = 1;
  public final static int CONST_SAVEBASETYPE_FORTITUDE = 1;
  public final static int CONST_SAVEBASETYPE_REFLEX = 3;
  public final static int CONST_SAVEBASETYPE_WILL = 2;
  public final static int CONST_SAVEVS_ACID = 1;
  public final static int CONST_SAVEVS_COLD = 3;
  public final static int CONST_SAVEVS_DEATH = 4;
  public final static int CONST_SAVEVS_DISEASE = 5;
  public final static int CONST_SAVEVS_DIVINE = 6;
  public final static int CONST_SAVEVS_ELECTRICAL = 7;
  public final static int CONST_SAVEVS_FEAR = 8;
  public final static int CONST_SAVEVS_FIRE = 9;
  public final static int CONST_SAVEVS_MINDAFFECTING = 11;
  public final static int CONST_SAVEVS_NEGATIVE = 12;
  public final static int CONST_SAVEVS_POISON = 13;
  public final static int CONST_SAVEVS_POSITIVE = 14;
  public final static int CONST_SAVEVS_SONIC = 15;
  public final static int CONST_SAVEVS_UNIVERSAL = 0;
  public final static int CONST_SPELLLEVEL_0 = 0;
  public final static int CONST_SPELLLEVEL_1 = 1;
  public final static int CONST_SPELLLEVEL_2 = 2;
  public final static int CONST_SPELLLEVEL_3 = 3;
  public final static int CONST_SPELLLEVEL_4 = 4;
  public final static int CONST_SPELLLEVEL_5 = 5;
  public final static int CONST_SPELLLEVEL_6 = 6;
  public final static int CONST_SPELLLEVEL_7 = 7;
  public final static int CONST_SPELLLEVEL_8 = 8;
  public final static int CONST_SPELLLEVEL_9 = 9;
  public final static int CONST_SPELLRESISTANCEBONUS_10 = 0;
  public final static int CONST_SPELLRESISTANCEBONUS_12 = 1;
  public final static int CONST_SPELLRESISTANCEBONUS_14 = 2;
  public final static int CONST_SPELLRESISTANCEBONUS_16 = 3;
  public final static int CONST_SPELLRESISTANCEBONUS_18 = 4;
  public final static int CONST_SPELLRESISTANCEBONUS_20 = 5;
  public final static int CONST_SPELLRESISTANCEBONUS_22 = 6;
  public final static int CONST_SPELLRESISTANCEBONUS_24 = 7;
  public final static int CONST_SPELLRESISTANCEBONUS_26 = 8;
  public final static int CONST_SPELLRESISTANCEBONUS_28 = 9;
  public final static int CONST_SPELLRESISTANCEBONUS_30 = 10;
  public final static int CONST_SPELLRESISTANCEBONUS_32 = 11;
  public final static int CONST_SPELLSCHOOL_ABJURATION = 0;
  public final static int CONST_SPELLSCHOOL_CONJURATION = 1;
  public final static int CONST_SPELLSCHOOL_DIVINATION = 2;
  public final static int CONST_SPELLSCHOOL_ENCHANTMENT = 3;
  public final static int CONST_SPELLSCHOOL_EVOCATION = 4;
  public final static int CONST_SPELLSCHOOL_ILLUSION = 5;
  public final static int CONST_SPELLSCHOOL_NECROMANCY = 6;
  public final static int CONST_SPELLSCHOOL_TRANSMUTATION = 7;
  public final static int CONST_TRAPSTRENGTH_AVERAGE = 1;
  public final static int CONST_TRAPSTRENGTH_DEADLY = 3;
  public final static int CONST_TRAPSTRENGTH_MINOR = 0;
  public final static int CONST_TRAPSTRENGTH_STRONG = 2;
  public final static int CONST_TRAPTYPE_ACID_SPLASH = 9;
  public final static int CONST_TRAPTYPE_BLOBOFACID = 4;
  public final static int CONST_TRAPTYPE_ELECTRICAL = 6;
  public final static int CONST_TRAPTYPE_FIRE = 5;
  public final static int CONST_TRAPTYPE_FROST = 8;
  public final static int CONST_TRAPTYPE_GAS = 7;
  public final static int CONST_TRAPTYPE_HOLY = 2;
  public final static int CONST_TRAPTYPE_NEGATIVE = 11;
  public final static int CONST_TRAPTYPE_SONIC = 10;
  public final static int CONST_TRAPTYPE_SPIKE = 1;
  public final static int CONST_TRAPTYPE_TANGLE = 3;
  public final static int CONST_UNLIMITEDAMMO_1D6COLD = 3;
  public final static int CONST_UNLIMITEDAMMO_1D6FIRE = 2;
  public final static int CONST_UNLIMITEDAMMO_1D6LIGHT = 4;
  public final static int CONST_UNLIMITEDAMMO_BASIC = 1;
  public final static int CONST_UNLIMITEDAMMO_PLUS1 = 11;
  public final static int CONST_UNLIMITEDAMMO_PLUS2 = 12;
  public final static int CONST_UNLIMITEDAMMO_PLUS3 = 13;
  public final static int CONST_UNLIMITEDAMMO_PLUS4 = 14;
  public final static int CONST_UNLIMITEDAMMO_PLUS5 = 15;
  public final static int CONST_WEIGHTINCREASE_100_LBS = 5;
  public final static int CONST_WEIGHTINCREASE_10_LBS = 1;
  public final static int CONST_WEIGHTINCREASE_15_LBS = 2;
  public final static int CONST_WEIGHTINCREASE_30_LBS = 3;
  public final static int CONST_WEIGHTINCREASE_50_LBS = 4;
  public final static int CONST_WEIGHTINCREASE_5_LBS = 0;

  public static String nameOf(int value) {
    if (value == 5) return "Ip.CONST_ABILITY_CHA";
    if (value == 2) return "Ip.CONST_ABILITY_CON";
    if (value == 1) return "Ip.CONST_ABILITY_DEX";
    if (value == 3) return "Ip.CONST_ABILITY_INT";
    if (value == 0) return "Ip.CONST_ABILITY_STR";
    if (value == 4) return "Ip.CONST_ABILITY_WIS";
    if (value == 2) return "Ip.CONST_ACMODIFIERTYPE_ARMOR";
    if (value == 4) return "Ip.CONST_ACMODIFIERTYPE_DEFLECTION";
    if (value == 0) return "Ip.CONST_ACMODIFIERTYPE_DODGE";
    if (value == 1) return "Ip.CONST_ACMODIFIERTYPE_NATURAL";
    if (value == 3) return "Ip.CONST_ACMODIFIERTYPE_SHIELD";
    if (value == 1) return "Ip.CONST_ADDITIONAL_CURSED";
    if (value == 0) return "Ip.CONST_ADDITIONAL_UNKNOWN";
    if (value == 0) return "Ip.CONST_ALIGNMENTGROUP_ALL";
    if (value == 3) return "Ip.CONST_ALIGNMENTGROUP_CHAOTIC";
    if (value == 5) return "Ip.CONST_ALIGNMENTGROUP_EVIL";
    if (value == 4) return "Ip.CONST_ALIGNMENTGROUP_GOOD";
    if (value == 2) return "Ip.CONST_ALIGNMENTGROUP_LAWFUL";
    if (value == 1) return "Ip.CONST_ALIGNMENTGROUP_NEUTRAL";
    if (value == 8) return "Ip.CONST_ALIGNMENT_CE";
    if (value == 6) return "Ip.CONST_ALIGNMENT_CG";
    if (value == 7) return "Ip.CONST_ALIGNMENT_CN";
    if (value == 2) return "Ip.CONST_ALIGNMENT_LE";
    if (value == 0) return "Ip.CONST_ALIGNMENT_LG";
    if (value == 1) return "Ip.CONST_ALIGNMENT_LN";
    if (value == 5) return "Ip.CONST_ALIGNMENT_NE";
    if (value == 3) return "Ip.CONST_ALIGNMENT_NG";
    if (value == 4) return "Ip.CONST_ALIGNMENT_TN";
    if (value == 0) return "Ip.CONST_AMMOTYPE_ARROW";
    if (value == 1) return "Ip.CONST_AMMOTYPE_BOLT";
    if (value == 2) return "Ip.CONST_AMMOTYPE_BULLET";
    if (value == 8) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_10_PERCENT";
    if (value == 7) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_15_PERCENT";
    if (value == 6) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_20_PERCENT";
    if (value == 5) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_25_PERCENT";
    if (value == 4) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_30_PERCENT";
    if (value == 3) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_35_PERCENT";
    if (value == 2) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_40_PERCENT";
    if (value == 1) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_45_PERCENT";
    if (value == 0) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_50_PERCENT";
    if (value == 9) return "Ip.CONST_ARCANE_SPELL_FAILURE_MINUS_5_PERCENT";
    if (value == 11) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_10_PERCENT";
    if (value == 12) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_15_PERCENT";
    if (value == 13) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_20_PERCENT";
    if (value == 14) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_25_PERCENT";
    if (value == 15) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_30_PERCENT";
    if (value == 16) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_35_PERCENT";
    if (value == 17) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_40_PERCENT";
    if (value == 18) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_45_PERCENT";
    if (value == 19) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_50_PERCENT";
    if (value == 10) return "Ip.CONST_ARCANE_SPELL_FAILURE_PLUS_5_PERCENT";
    if (value == 0) return "Ip.CONST_CASTSPELL_ACID_FOG_11";
    if (value == 355) return "Ip.CONST_CASTSPELL_ACID_SPLASH_1";
    if (value == 359) return "Ip.CONST_CASTSPELL_ACTIVATE_ITEM";
    if (value == 1) return "Ip.CONST_CASTSPELL_AID_3";
    if (value == 373) return "Ip.CONST_CASTSPELL_AMPLIFY_5";
    if (value == 3) return "Ip.CONST_CASTSPELL_ANIMATE_DEAD_10";
    if (value == 4) return "Ip.CONST_CASTSPELL_ANIMATE_DEAD_15";
    if (value == 2) return "Ip.CONST_CASTSPELL_ANIMATE_DEAD_5";
    if (value == 360) return "Ip.CONST_CASTSPELL_AURAOFGLORY_7";
    if (value == 321) return "Ip.CONST_CASTSPELL_AURA_OF_VITALITY_13";
    if (value == 287) return "Ip.CONST_CASTSPELL_AURA_VERSUS_ALIGNMENT_15";
    if (value == 303) return "Ip.CONST_CASTSPELL_AWAKEN_9";
    if (value == 367) return "Ip.CONST_CASTSPELL_BALAGARNSIRONHORN_7";
    if (value == 380) return "Ip.CONST_CASTSPELL_BANE_5";
    if (value == 361) return "Ip.CONST_CASTSPELL_BANISHMENT_15";
    if (value == 7) return "Ip.CONST_CASTSPELL_BARKSKIN_12";
    if (value == 5) return "Ip.CONST_CASTSPELL_BARKSKIN_3";
    if (value == 6) return "Ip.CONST_CASTSPELL_BARKSKIN_6";
    if (value == 8) return "Ip.CONST_CASTSPELL_BESTOW_CURSE_5";
    if (value == 393) return "Ip.CONST_CASTSPELL_BIGBYS_CLENCHED_FIST_20";
    if (value == 394) return "Ip.CONST_CASTSPELL_BIGBYS_CRUSHING_HAND_20";
    if (value == 391) return "Ip.CONST_CASTSPELL_BIGBYS_FORCEFUL_HAND_15";
    if (value == 392) return "Ip.CONST_CASTSPELL_BIGBYS_GRASPING_HAND_17";
    if (value == 390) return "Ip.CONST_CASTSPELL_BIGBYS_INTERPOSING_HAND_15";
    if (value == 9) return "Ip.CONST_CASTSPELL_BLADE_BARRIER_11";
    if (value == 10) return "Ip.CONST_CASTSPELL_BLADE_BARRIER_15";
    if (value == 11) return "Ip.CONST_CASTSPELL_BLESS_2";
    if (value == 14) return "Ip.CONST_CASTSPELL_BLINDNESS_DEAFNESS_3";
    if (value == 353) return "Ip.CONST_CASTSPELL_BLOOD_FRENZY_7";
    if (value == 354) return "Ip.CONST_CASTSPELL_BOMBARDMENT_20";
    if (value == 16) return "Ip.CONST_CASTSPELL_BULLS_STRENGTH_10";
    if (value == 17) return "Ip.CONST_CASTSPELL_BULLS_STRENGTH_15";
    if (value == 15) return "Ip.CONST_CASTSPELL_BULLS_STRENGTH_3";
    if (value == 18) return "Ip.CONST_CASTSPELL_BURNING_HANDS_2";
    if (value == 19) return "Ip.CONST_CASTSPELL_BURNING_HANDS_5";
    if (value == 21) return "Ip.CONST_CASTSPELL_CALL_LIGHTNING_10";
    if (value == 20) return "Ip.CONST_CASTSPELL_CALL_LIGHTNING_5";
    if (value == 352) return "Ip.CONST_CASTSPELL_CAMOFLAGE_5";
    if (value == 26) return "Ip.CONST_CASTSPELL_CATS_GRACE_10";
    if (value == 27) return "Ip.CONST_CASTSPELL_CATS_GRACE_15";
    if (value == 25) return "Ip.CONST_CASTSPELL_CATS_GRACE_3";
    if (value == 28) return "Ip.CONST_CASTSPELL_CHAIN_LIGHTNING_11";
    if (value == 29) return "Ip.CONST_CASTSPELL_CHAIN_LIGHTNING_15";
    if (value == 30) return "Ip.CONST_CASTSPELL_CHAIN_LIGHTNING_20";
    if (value == 32) return "Ip.CONST_CASTSPELL_CHARM_MONSTER_10";
    if (value == 31) return "Ip.CONST_CASTSPELL_CHARM_MONSTER_5";
    if (value == 34) return "Ip.CONST_CASTSPELL_CHARM_PERSON_10";
    if (value == 33) return "Ip.CONST_CASTSPELL_CHARM_PERSON_2";
    if (value == 36) return "Ip.CONST_CASTSPELL_CHARM_PERSON_OR_ANIMAL_10";
    if (value == 35) return "Ip.CONST_CASTSPELL_CHARM_PERSON_OR_ANIMAL_3";
    if (value == 37) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DEATH_11";
    if (value == 38) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DEATH_15";
    if (value == 39) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DEATH_20";
    if (value == 41) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DOOM_15";
    if (value == 42) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DOOM_20";
    if (value == 40) return "Ip.CONST_CASTSPELL_CIRCLE_OF_DOOM_9";
    if (value == 44) return "Ip.CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_10";
    if (value == 45) return "Ip.CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_15";
    if (value == 43) return "Ip.CONST_CASTSPELL_CLAIRAUDIENCE_CLAIRVOYANCE_5";
    if (value == 46) return "Ip.CONST_CASTSPELL_CLARITY_3";
    if (value == 48) return "Ip.CONST_CASTSPELL_CLOUDKILL_9";
    if (value == 49) return "Ip.CONST_CASTSPELL_COLOR_SPRAY_2";
    if (value == 51) return "Ip.CONST_CASTSPELL_CONE_OF_COLD_15";
    if (value == 50) return "Ip.CONST_CASTSPELL_CONE_OF_COLD_9";
    if (value == 53) return "Ip.CONST_CASTSPELL_CONFUSION_10";
    if (value == 52) return "Ip.CONST_CASTSPELL_CONFUSION_5";
    if (value == 54) return "Ip.CONST_CASTSPELL_CONTAGION_5";
    if (value == 350) return "Ip.CONST_CASTSPELL_CONTINUAL_FLAME_7";
    if (value == 55) return "Ip.CONST_CASTSPELL_CONTROL_UNDEAD_13";
    if (value == 56) return "Ip.CONST_CASTSPELL_CONTROL_UNDEAD_20";
    if (value == 57) return "Ip.CONST_CASTSPELL_CREATE_GREATER_UNDEAD_15";
    if (value == 58) return "Ip.CONST_CASTSPELL_CREATE_GREATER_UNDEAD_16";
    if (value == 59) return "Ip.CONST_CASTSPELL_CREATE_GREATER_UNDEAD_18";
    if (value == 60) return "Ip.CONST_CASTSPELL_CREATE_UNDEAD_11";
    if (value == 61) return "Ip.CONST_CASTSPELL_CREATE_UNDEAD_14";
    if (value == 62) return "Ip.CONST_CASTSPELL_CREATE_UNDEAD_16";
    if (value == 304) return "Ip.CONST_CASTSPELL_CREEPING_DOOM_13";
    if (value == 64) return "Ip.CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_12";
    if (value == 65) return "Ip.CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_15";
    if (value == 63) return "Ip.CONST_CASTSPELL_CURE_CRITICAL_WOUNDS_7";
    if (value == 66) return "Ip.CONST_CASTSPELL_CURE_LIGHT_WOUNDS_2";
    if (value == 67) return "Ip.CONST_CASTSPELL_CURE_LIGHT_WOUNDS_5";
    if (value == 68) return "Ip.CONST_CASTSPELL_CURE_MINOR_WOUNDS_1";
    if (value == 71) return "Ip.CONST_CASTSPELL_CURE_MODERATE_WOUNDS_10";
    if (value == 69) return "Ip.CONST_CASTSPELL_CURE_MODERATE_WOUNDS_3";
    if (value == 70) return "Ip.CONST_CASTSPELL_CURE_MODERATE_WOUNDS_6";
    if (value == 73) return "Ip.CONST_CASTSPELL_CURE_SERIOUS_WOUNDS_10";
    if (value == 72) return "Ip.CONST_CASTSPELL_CURE_SERIOUS_WOUNDS_5";
    if (value == 75) return "Ip.CONST_CASTSPELL_DARKNESS_3";
    if (value == 305) return "Ip.CONST_CASTSPELL_DARKVISION_3";
    if (value == 306) return "Ip.CONST_CASTSPELL_DARKVISION_6";
    if (value == 76) return "Ip.CONST_CASTSPELL_DAZE_1";
    if (value == 77) return "Ip.CONST_CASTSPELL_DEATH_WARD_7";
    if (value == 78) return "Ip.CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_13";
    if (value == 79) return "Ip.CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_15";
    if (value == 80) return "Ip.CONST_CASTSPELL_DELAYED_BLAST_FIREBALL_20";
    if (value == 307) return "Ip.CONST_CASTSPELL_DESTRUCTION_13";
    if (value == 376) return "Ip.CONST_CASTSPELL_DIRGE_15";
    if (value == 82) return "Ip.CONST_CASTSPELL_DISMISSAL_12";
    if (value == 83) return "Ip.CONST_CASTSPELL_DISMISSAL_18";
    if (value == 81) return "Ip.CONST_CASTSPELL_DISMISSAL_7";
    if (value == 85) return "Ip.CONST_CASTSPELL_DISPEL_MAGIC_10";
    if (value == 84) return "Ip.CONST_CASTSPELL_DISPEL_MAGIC_5";
    if (value == 389) return "Ip.CONST_CASTSPELL_DISPLACEMENT_9";
    if (value == 345) return "Ip.CONST_CASTSPELL_DIVINE_FAVOR_5";
    if (value == 395) return "Ip.CONST_CASTSPELL_DIVINE_MIGHT_5";
    if (value == 86) return "Ip.CONST_CASTSPELL_DIVINE_POWER_7";
    if (value == 396) return "Ip.CONST_CASTSPELL_DIVINE_SHIELD_5";
    if (value == 87) return "Ip.CONST_CASTSPELL_DOMINATE_ANIMAL_5";
    if (value == 88) return "Ip.CONST_CASTSPELL_DOMINATE_MONSTER_17";
    if (value == 89) return "Ip.CONST_CASTSPELL_DOMINATE_PERSON_7";
    if (value == 90) return "Ip.CONST_CASTSPELL_DOOM_2";
    if (value == 91) return "Ip.CONST_CASTSPELL_DOOM_5";
    if (value == 400) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_ACID_10";
    if (value == 401) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_COLD_10";
    if (value == 402) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_FEAR_10";
    if (value == 403) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_FIRE_10";
    if (value == 404) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_GAS_10";
    if (value == 405) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_LIGHTNING_10";
    if (value == 406) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_PARALYZE_10";
    if (value == 407) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_SLEEP_10";
    if (value == 408) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_SLOW_10";
    if (value == 409) return "Ip.CONST_CASTSPELL_DRAGON_BREATH_WEAKEN_10";
    if (value == 368) return "Ip.CONST_CASTSPELL_DROWN_15";
    if (value == 289) return "Ip.CONST_CASTSPELL_EAGLE_SPLEDOR_10";
    if (value == 290) return "Ip.CONST_CASTSPELL_EAGLE_SPLEDOR_15";
    if (value == 288) return "Ip.CONST_CASTSPELL_EAGLE_SPLEDOR_3";
    if (value == 357) return "Ip.CONST_CASTSPELL_EARTHQUAKE_20";
    if (value == 370) return "Ip.CONST_CASTSPELL_ELECTRIC_JOLT_1";
    if (value == 93) return "Ip.CONST_CASTSPELL_ELEMENTAL_SHIELD_12";
    if (value == 92) return "Ip.CONST_CASTSPELL_ELEMENTAL_SHIELD_7";
    if (value == 94) return "Ip.CONST_CASTSPELL_ELEMENTAL_SWARM_17";
    if (value == 96) return "Ip.CONST_CASTSPELL_ENDURANCE_10";
    if (value == 97) return "Ip.CONST_CASTSPELL_ENDURANCE_15";
    if (value == 95) return "Ip.CONST_CASTSPELL_ENDURANCE_3";
    if (value == 98) return "Ip.CONST_CASTSPELL_ENDURE_ELEMENTS_2";
    if (value == 311) return "Ip.CONST_CASTSPELL_ENERGY_BUFFER_11";
    if (value == 312) return "Ip.CONST_CASTSPELL_ENERGY_BUFFER_15";
    if (value == 313) return "Ip.CONST_CASTSPELL_ENERGY_BUFFER_20";
    if (value == 99) return "Ip.CONST_CASTSPELL_ENERGY_DRAIN_17";
    if (value == 100) return "Ip.CONST_CASTSPELL_ENERVATION_7";
    if (value == 101) return "Ip.CONST_CASTSPELL_ENTANGLE_2";
    if (value == 102) return "Ip.CONST_CASTSPELL_ENTANGLE_5";
    if (value == 349) return "Ip.CONST_CASTSPELL_ENTROPIC_SHIELD_5";
    if (value == 374) return "Ip.CONST_CASTSPELL_ETHEREALNESS_18";
    if (value == 196) return "Ip.CONST_CASTSPELL_ETHEREAL_VISAGE_15";
    if (value == 195) return "Ip.CONST_CASTSPELL_ETHEREAL_VISAGE_9";
    if (value == 325) return "Ip.CONST_CASTSPELL_EVARDS_BLACK_TENTACLES_15";
    if (value == 324) return "Ip.CONST_CASTSPELL_EVARDS_BLACK_TENTACLES_7";
    if (value == 387) return "Ip.CONST_CASTSPELL_EXPEDITIOUS_RETREAT_5";
    if (value == 103) return "Ip.CONST_CASTSPELL_FEAR_5";
    if (value == 104) return "Ip.CONST_CASTSPELL_FEEBLEMIND_9";
    if (value == 327) return "Ip.CONST_CASTSPELL_FIND_TRAPS_3";
    if (value == 105) return "Ip.CONST_CASTSPELL_FINGER_OF_DEATH_13";
    if (value == 109) return "Ip.CONST_CASTSPELL_FIREBALL_10";
    if (value == 108) return "Ip.CONST_CASTSPELL_FIREBALL_5";
    if (value == 371) return "Ip.CONST_CASTSPELL_FIREBRAND_15";
    if (value == 106) return "Ip.CONST_CASTSPELL_FIRE_STORM_13";
    if (value == 107) return "Ip.CONST_CASTSPELL_FIRE_STORM_18";
    if (value == 111) return "Ip.CONST_CASTSPELL_FLAME_ARROW_12";
    if (value == 112) return "Ip.CONST_CASTSPELL_FLAME_ARROW_18";
    if (value == 110) return "Ip.CONST_CASTSPELL_FLAME_ARROW_5";
    if (value == 114) return "Ip.CONST_CASTSPELL_FLAME_LASH_10";
    if (value == 113) return "Ip.CONST_CASTSPELL_FLAME_LASH_3";
    if (value == 116) return "Ip.CONST_CASTSPELL_FLAME_STRIKE_12";
    if (value == 117) return "Ip.CONST_CASTSPELL_FLAME_STRIKE_18";
    if (value == 115) return "Ip.CONST_CASTSPELL_FLAME_STRIKE_7";
    if (value == 347) return "Ip.CONST_CASTSPELL_FLARE_1";
    if (value == 398) return "Ip.CONST_CASTSPELL_FLESH_TO_STONE_5";
    if (value == 295) return "Ip.CONST_CASTSPELL_FOXS_CUNNING_10";
    if (value == 296) return "Ip.CONST_CASTSPELL_FOXS_CUNNING_15";
    if (value == 294) return "Ip.CONST_CASTSPELL_FOXS_CUNNING_3";
    if (value == 118) return "Ip.CONST_CASTSPELL_FREEDOM_OF_MOVEMENT_7";
    if (value == 119) return "Ip.CONST_CASTSPELL_GATE_17";
    if (value == 194) return "Ip.CONST_CASTSPELL_GHOSTLY_VISAGE_15";
    if (value == 192) return "Ip.CONST_CASTSPELL_GHOSTLY_VISAGE_3";
    if (value == 193) return "Ip.CONST_CASTSPELL_GHOSTLY_VISAGE_9";
    if (value == 120) return "Ip.CONST_CASTSPELL_GHOUL_TOUCH_3";
    if (value == 121) return "Ip.CONST_CASTSPELL_GLOBE_OF_INVULNERABILITY_11";
    if (value == 122) return "Ip.CONST_CASTSPELL_GREASE_2";
    if (value == 300) return "Ip.CONST_CASTSPELL_GREATER_BULLS_STRENGTH_11";
    if (value == 301) return "Ip.CONST_CASTSPELL_GREATER_CATS_GRACE_11";
    if (value == 124) return "Ip.CONST_CASTSPELL_GREATER_DISPELLING_15";
    if (value == 123) return "Ip.CONST_CASTSPELL_GREATER_DISPELLING_7";
    if (value == 297) return "Ip.CONST_CASTSPELL_GREATER_EAGLES_SPLENDOR_11";
    if (value == 302) return "Ip.CONST_CASTSPELL_GREATER_ENDURANCE_11";
    if (value == 299) return "Ip.CONST_CASTSPELL_GREATER_FOXS_CUNNING_11";
    if (value == 384) return "Ip.CONST_CASTSPELL_GREATER_MAGIC_FANG_9";
    if (value == 298) return "Ip.CONST_CASTSPELL_GREATER_OWLS_WISDOM_11";
    if (value == 126) return "Ip.CONST_CASTSPELL_GREATER_PLANAR_BINDING_15";
    if (value == 127) return "Ip.CONST_CASTSPELL_GREATER_RESTORATION_13";
    if (value == 128) return "Ip.CONST_CASTSPELL_GREATER_SHADOW_CONJURATION_9";
    if (value == 129) return "Ip.CONST_CASTSPELL_GREATER_SPELL_BREACH_11";
    if (value == 130) return "Ip.CONST_CASTSPELL_GREATER_SPELL_MANTLE_17";
    if (value == 131) return "Ip.CONST_CASTSPELL_GREATER_STONESKIN_11";
    if (value == 341) return "Ip.CONST_CASTSPELL_GRENADE_ACID_1";
    if (value == 343) return "Ip.CONST_CASTSPELL_GRENADE_CALTROPS_1";
    if (value == 342) return "Ip.CONST_CASTSPELL_GRENADE_CHICKEN_1";
    if (value == 339) return "Ip.CONST_CASTSPELL_GRENADE_CHOKING_1";
    if (value == 336) return "Ip.CONST_CASTSPELL_GRENADE_FIRE_1";
    if (value == 338) return "Ip.CONST_CASTSPELL_GRENADE_HOLY_1";
    if (value == 337) return "Ip.CONST_CASTSPELL_GRENADE_TANGLE_1";
    if (value == 340) return "Ip.CONST_CASTSPELL_GRENADE_THUNDERSTONE_1";
    if (value == 410) return "Ip.CONST_CASTSPELL_GUST_OF_WIND_10";
    if (value == 134) return "Ip.CONST_CASTSPELL_HAMMER_OF_THE_GODS_12";
    if (value == 133) return "Ip.CONST_CASTSPELL_HAMMER_OF_THE_GODS_7";
    if (value == 136) return "Ip.CONST_CASTSPELL_HARM_11";
    if (value == 138) return "Ip.CONST_CASTSPELL_HASTE_10";
    if (value == 137) return "Ip.CONST_CASTSPELL_HASTE_5";
    if (value == 141) return "Ip.CONST_CASTSPELL_HEALING_CIRCLE_16";
    if (value == 140) return "Ip.CONST_CASTSPELL_HEALING_CIRCLE_9";
    if (value == 139) return "Ip.CONST_CASTSPELL_HEAL_11";
    if (value == 142) return "Ip.CONST_CASTSPELL_HOLD_ANIMAL_3";
    if (value == 143) return "Ip.CONST_CASTSPELL_HOLD_MONSTER_7";
    if (value == 144) return "Ip.CONST_CASTSPELL_HOLD_PERSON_3";
    if (value == 308) return "Ip.CONST_CASTSPELL_HORRID_WILTING_15";
    if (value == 309) return "Ip.CONST_CASTSPELL_HORRID_WILTING_20";
    if (value == 310) return "Ip.CONST_CASTSPELL_ICE_STORM_9";
    if (value == 147) return "Ip.CONST_CASTSPELL_IDENTIFY_3";
    if (value == 148) return "Ip.CONST_CASTSPELL_IMPLOSION_17";
    if (value == 149) return "Ip.CONST_CASTSPELL_IMPROVED_INVISIBILITY_7";
    if (value == 150) return "Ip.CONST_CASTSPELL_INCENDIARY_CLOUD_15";
    if (value == 377) return "Ip.CONST_CASTSPELL_INFERNO_15";
    if (value == 366) return "Ip.CONST_CASTSPELL_INFLICT_CRITICAL_WOUNDS_12";
    if (value == 363) return "Ip.CONST_CASTSPELL_INFLICT_LIGHT_WOUNDS_5";
    if (value == 362) return "Ip.CONST_CASTSPELL_INFLICT_MINOR_WOUNDS_1";
    if (value == 364) return "Ip.CONST_CASTSPELL_INFLICT_MODERATE_WOUNDS_7";
    if (value == 365) return "Ip.CONST_CASTSPELL_INFLICT_SERIOUS_WOUNDS_9";
    if (value == 151) return "Ip.CONST_CASTSPELL_INVISIBILITY_3";
    if (value == 152) return "Ip.CONST_CASTSPELL_INVISIBILITY_PURGE_5";
    if (value == 153) return "Ip.CONST_CASTSPELL_INVISIBILITY_SPHERE_5";
    if (value == 379) return "Ip.CONST_CASTSPELL_ISAACS_GREATER_MISSILE_STORM_15";
    if (value == 378) return "Ip.CONST_CASTSPELL_ISAACS_LESSER_MISSILE_STORM_13";
    if (value == 154) return "Ip.CONST_CASTSPELL_KNOCK_3";
    if (value == 326) return "Ip.CONST_CASTSPELL_LEGEND_LORE_5";
    if (value == 155) return "Ip.CONST_CASTSPELL_LESSER_DISPEL_3";
    if (value == 156) return "Ip.CONST_CASTSPELL_LESSER_DISPEL_5";
    if (value == 157) return "Ip.CONST_CASTSPELL_LESSER_MIND_BLANK_9";
    if (value == 158) return "Ip.CONST_CASTSPELL_LESSER_PLANAR_BINDING_9";
    if (value == 159) return "Ip.CONST_CASTSPELL_LESSER_RESTORATION_3";
    if (value == 160) return "Ip.CONST_CASTSPELL_LESSER_SPELL_BREACH_7";
    if (value == 161) return "Ip.CONST_CASTSPELL_LESSER_SPELL_MANTLE_9";
    if (value == 165) return "Ip.CONST_CASTSPELL_LIGHTNING_BOLT_10";
    if (value == 164) return "Ip.CONST_CASTSPELL_LIGHTNING_BOLT_5";
    if (value == 162) return "Ip.CONST_CASTSPELL_LIGHT_1";
    if (value == 163) return "Ip.CONST_CASTSPELL_LIGHT_5";
    if (value == 167) return "Ip.CONST_CASTSPELL_MAGE_ARMOR_2";
    if (value == 286) return "Ip.CONST_CASTSPELL_MAGIC_CIRCLE_AGAINST_ALIGNMENT_5";
    if (value == 383) return "Ip.CONST_CASTSPELL_MAGIC_FANG_5";
    if (value == 172) return "Ip.CONST_CASTSPELL_MAGIC_MISSILE_3";
    if (value == 173) return "Ip.CONST_CASTSPELL_MAGIC_MISSILE_5";
    if (value == 174) return "Ip.CONST_CASTSPELL_MAGIC_MISSILE_9";
    if (value == 344) return "Ip.CONST_CASTSPELL_MANIPULATE_PORTAL_STONE";
    if (value == 179) return "Ip.CONST_CASTSPELL_MASS_BLINDNESS_DEAFNESS_15";
    if (value == 386) return "Ip.CONST_CASTSPELL_MASS_CAMOFLAGE_13";
    if (value == 180) return "Ip.CONST_CASTSPELL_MASS_CHARM_15";
    if (value == 182) return "Ip.CONST_CASTSPELL_MASS_HASTE_11";
    if (value == 183) return "Ip.CONST_CASTSPELL_MASS_HEAL_15";
    if (value == 184) return "Ip.CONST_CASTSPELL_MELFS_ACID_ARROW_3";
    if (value == 185) return "Ip.CONST_CASTSPELL_MELFS_ACID_ARROW_6";
    if (value == 186) return "Ip.CONST_CASTSPELL_MELFS_ACID_ARROW_9";
    if (value == 187) return "Ip.CONST_CASTSPELL_METEOR_SWARM_17";
    if (value == 188) return "Ip.CONST_CASTSPELL_MIND_BLANK_15";
    if (value == 189) return "Ip.CONST_CASTSPELL_MIND_FOG_9";
    if (value == 191) return "Ip.CONST_CASTSPELL_MINOR_GLOBE_OF_INVULNERABILITY_15";
    if (value == 190) return "Ip.CONST_CASTSPELL_MINOR_GLOBE_OF_INVULNERABILITY_7";
    if (value == 197) return "Ip.CONST_CASTSPELL_MORDENKAINENS_DISJUNCTION_17";
    if (value == 198) return "Ip.CONST_CASTSPELL_MORDENKAINENS_SWORD_13";
    if (value == 199) return "Ip.CONST_CASTSPELL_MORDENKAINENS_SWORD_18";
    if (value == 200) return "Ip.CONST_CASTSPELL_NATURES_BALANCE_15";
    if (value == 315) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_BURST_10";
    if (value == 314) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_BURST_5";
    if (value == 202) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_10";
    if (value == 203) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_15";
    if (value == 201) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_PROTECTION_5";
    if (value == 316) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_1";
    if (value == 317) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_3";
    if (value == 318) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_5";
    if (value == 319) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_7";
    if (value == 320) return "Ip.CONST_CASTSPELL_NEGATIVE_ENERGY_RAY_9";
    if (value == 204) return "Ip.CONST_CASTSPELL_NEUTRALIZE_POISON_5";
    if (value == 7) return "Ip.CONST_CASTSPELL_NUMUSES_0_CHARGES_PER_USE";
    if (value == 6) return "Ip.CONST_CASTSPELL_NUMUSES_1_CHARGE_PER_USE";
    if (value == 8) return "Ip.CONST_CASTSPELL_NUMUSES_1_USE_PER_DAY";
    if (value == 5) return "Ip.CONST_CASTSPELL_NUMUSES_2_CHARGES_PER_USE";
    if (value == 9) return "Ip.CONST_CASTSPELL_NUMUSES_2_USES_PER_DAY";
    if (value == 4) return "Ip.CONST_CASTSPELL_NUMUSES_3_CHARGES_PER_USE";
    if (value == 10) return "Ip.CONST_CASTSPELL_NUMUSES_3_USES_PER_DAY";
    if (value == 3) return "Ip.CONST_CASTSPELL_NUMUSES_4_CHARGES_PER_USE";
    if (value == 11) return "Ip.CONST_CASTSPELL_NUMUSES_4_USES_PER_DAY";
    if (value == 2) return "Ip.CONST_CASTSPELL_NUMUSES_5_CHARGES_PER_USE";
    if (value == 12) return "Ip.CONST_CASTSPELL_NUMUSES_5_USES_PER_DAY";
    if (value == 1) return "Ip.CONST_CASTSPELL_NUMUSES_SINGLE_USE";
    if (value == 13) return "Ip.CONST_CASTSPELL_NUMUSES_UNLIMITED_USE";
    if (value == 351) return "Ip.CONST_CASTSPELL_ONE_WITH_THE_LAND_7";
    if (value == 369) return "Ip.CONST_CASTSPELL_OWLS_INSIGHT_15";
    if (value == 292) return "Ip.CONST_CASTSPELL_OWLS_WISDOM_10";
    if (value == 293) return "Ip.CONST_CASTSPELL_OWLS_WISDOM_15";
    if (value == 291) return "Ip.CONST_CASTSPELL_OWLS_WISDOM_3";
    if (value == 205) return "Ip.CONST_CASTSPELL_PHANTASMAL_KILLER_7";
    if (value == 382) return "Ip.CONST_CASTSPELL_PLANAR_ALLY_15";
    if (value == 206) return "Ip.CONST_CASTSPELL_PLANAR_BINDING_11";
    if (value == 207) return "Ip.CONST_CASTSPELL_POISON_5";
    if (value == 208) return "Ip.CONST_CASTSPELL_POLYMORPH_SELF_7";
    if (value == 209) return "Ip.CONST_CASTSPELL_POWER_WORD_KILL_17";
    if (value == 210) return "Ip.CONST_CASTSPELL_POWER_WORD_STUN_13";
    if (value == 211) return "Ip.CONST_CASTSPELL_PRAYER_5";
    if (value == 212) return "Ip.CONST_CASTSPELL_PREMONITION_15";
    if (value == 213) return "Ip.CONST_CASTSPELL_PRISMATIC_SPRAY_13";
    if (value == 284) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_ALIGNMENT_2";
    if (value == 285) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_ALIGNMENT_5";
    if (value == 217) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_ELEMENTS_10";
    if (value == 216) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_ELEMENTS_3";
    if (value == 224) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_SPELLS_13";
    if (value == 225) return "Ip.CONST_CASTSPELL_PROTECTION_FROM_SPELLS_20";
    if (value == 356) return "Ip.CONST_CASTSPELL_QUILLFIRE_8";
    if (value == 226) return "Ip.CONST_CASTSPELL_RAISE_DEAD_9";
    if (value == 227) return "Ip.CONST_CASTSPELL_RAY_OF_ENFEEBLEMENT_2";
    if (value == 228) return "Ip.CONST_CASTSPELL_RAY_OF_FROST_1";
    if (value == 323) return "Ip.CONST_CASTSPELL_REGENERATE_13";
    if (value == 229) return "Ip.CONST_CASTSPELL_REMOVE_BLINDNESS_DEAFNESS_5";
    if (value == 230) return "Ip.CONST_CASTSPELL_REMOVE_CURSE_5";
    if (value == 231) return "Ip.CONST_CASTSPELL_REMOVE_DISEASE_5";
    if (value == 232) return "Ip.CONST_CASTSPELL_REMOVE_FEAR_2";
    if (value == 233) return "Ip.CONST_CASTSPELL_REMOVE_PARALYSIS_3";
    if (value == 236) return "Ip.CONST_CASTSPELL_RESISTANCE_2";
    if (value == 237) return "Ip.CONST_CASTSPELL_RESISTANCE_5";
    if (value == 235) return "Ip.CONST_CASTSPELL_RESIST_ELEMENTS_10";
    if (value == 234) return "Ip.CONST_CASTSPELL_RESIST_ELEMENTS_3";
    if (value == 238) return "Ip.CONST_CASTSPELL_RESTORATION_7";
    if (value == 239) return "Ip.CONST_CASTSPELL_RESURRECTION_13";
    if (value == 328) return "Ip.CONST_CASTSPELL_ROGUES_CUNNING_3";
    if (value == 240) return "Ip.CONST_CASTSPELL_SANCTUARY_2";
    if (value == 241) return "Ip.CONST_CASTSPELL_SCARE_2";
    if (value == 242) return "Ip.CONST_CASTSPELL_SEARING_LIGHT_5";
    if (value == 243) return "Ip.CONST_CASTSPELL_SEE_INVISIBILITY_3";
    if (value == 244) return "Ip.CONST_CASTSPELL_SHADES_11";
    if (value == 245) return "Ip.CONST_CASTSPELL_SHADOW_CONJURATION_7";
    if (value == 246) return "Ip.CONST_CASTSPELL_SHADOW_SHIELD_13";
    if (value == 247) return "Ip.CONST_CASTSPELL_SHAPECHANGE_17";
    if (value == 348) return "Ip.CONST_CASTSPELL_SHIELD_5";
    if (value == 381) return "Ip.CONST_CASTSPELL_SHIELD_OF_FAITH_5";
    if (value == 249) return "Ip.CONST_CASTSPELL_SILENCE_3";
    if (value == 250) return "Ip.CONST_CASTSPELL_SLAY_LIVING_9";
    if (value == 251) return "Ip.CONST_CASTSPELL_SLEEP_2";
    if (value == 252) return "Ip.CONST_CASTSPELL_SLEEP_5";
    if (value == 253) return "Ip.CONST_CASTSPELL_SLOW_5";
    if (value == 254) return "Ip.CONST_CASTSPELL_SOUND_BURST_3";
    if (value == 330) return "Ip.CONST_CASTSPELL_SPECIAL_ALCOHOL_BEER";
    if (value == 332) return "Ip.CONST_CASTSPELL_SPECIAL_ALCOHOL_SPIRITS";
    if (value == 331) return "Ip.CONST_CASTSPELL_SPECIAL_ALCOHOL_WINE";
    if (value == 333) return "Ip.CONST_CASTSPELL_SPECIAL_HERB_BELLADONNA";
    if (value == 334) return "Ip.CONST_CASTSPELL_SPECIAL_HERB_GARLIC";
    if (value == 257) return "Ip.CONST_CASTSPELL_SPELL_MANTLE_13";
    if (value == 256) return "Ip.CONST_CASTSPELL_SPELL_RESISTANCE_15";
    if (value == 255) return "Ip.CONST_CASTSPELL_SPELL_RESISTANCE_9";
    if (value == 385) return "Ip.CONST_CASTSPELL_SPIKE_GROWTH_9";
    if (value == 259) return "Ip.CONST_CASTSPELL_STINKING_CLOUD_5";
    if (value == 260) return "Ip.CONST_CASTSPELL_STONESKIN_7";
    if (value == 399) return "Ip.CONST_CASTSPELL_STONE_TO_FLESH_5";
    if (value == 261) return "Ip.CONST_CASTSPELL_STORM_OF_VENGEANCE_17";
    if (value == 265) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_III_5";
    if (value == 264) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_II_3";
    if (value == 266) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_IV_7";
    if (value == 267) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_IX_17";
    if (value == 262) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_I_2";
    if (value == 263) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_I_5";
    if (value == 271) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_VIII_15";
    if (value == 270) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_VII_13";
    if (value == 269) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_VI_11";
    if (value == 268) return "Ip.CONST_CASTSPELL_SUMMON_CREATURE_V_9";
    if (value == 272) return "Ip.CONST_CASTSPELL_SUNBEAM_13";
    if (value == 358) return "Ip.CONST_CASTSPELL_SUNBURST_20";
    if (value == 388) return "Ip.CONST_CASTSPELL_TASHAS_HIDEOUS_LAUGHTER_7";
    if (value == 273) return "Ip.CONST_CASTSPELL_TENSERS_TRANSFORMATION_11";
    if (value == 274) return "Ip.CONST_CASTSPELL_TIME_STOP_17";
    if (value == 275) return "Ip.CONST_CASTSPELL_TRUE_SEEING_9";
    if (value == 346) return "Ip.CONST_CASTSPELL_TRUE_STRIKE_5";
    if (value == 375) return "Ip.CONST_CASTSPELL_UNDEATHS_ETERNAL_FOE_20";
    if (value == 329) return "Ip.CONST_CASTSPELL_UNIQUE_POWER";
    if (value == 335) return "Ip.CONST_CASTSPELL_UNIQUE_POWER_SELF_ONLY";
    if (value == 277) return "Ip.CONST_CASTSPELL_VAMPIRIC_TOUCH_5";
    if (value == 278) return "Ip.CONST_CASTSPELL_VIRTUE_1";
    if (value == 279) return "Ip.CONST_CASTSPELL_WAIL_OF_THE_BANSHEE_17";
    if (value == 280) return "Ip.CONST_CASTSPELL_WALL_OF_FIRE_9";
    if (value == 322) return "Ip.CONST_CASTSPELL_WAR_CRY_7";
    if (value == 281) return "Ip.CONST_CASTSPELL_WEB_3";
    if (value == 282) return "Ip.CONST_CASTSPELL_WEIRD_17";
    if (value == 283) return "Ip.CONST_CASTSPELL_WORD_OF_FAITH_13";
    if (value == 372) return "Ip.CONST_CASTSPELL_WOUNDING_WHISPERS_9";
    if (value == 0) return "Ip.CONST_CLASS_BARBARIAN";
    if (value == 1) return "Ip.CONST_CLASS_BARD";
    if (value == 2) return "Ip.CONST_CLASS_CLERIC";
    if (value == 3) return "Ip.CONST_CLASS_DRUID";
    if (value == 4) return "Ip.CONST_CLASS_FIGHTER";
    if (value == 5) return "Ip.CONST_CLASS_MONK";
    if (value == 6) return "Ip.CONST_CLASS_PALADIN";
    if (value == 7) return "Ip.CONST_CLASS_RANGER";
    if (value == 8) return "Ip.CONST_CLASS_ROGUE";
    if (value == 9) return "Ip.CONST_CLASS_SORCERER";
    if (value == 10) return "Ip.CONST_CLASS_WIZARD";
    if (value == 5) return "Ip.CONST_CONTAINERWEIGHTRED_100_PERCENT";
    if (value == 1) return "Ip.CONST_CONTAINERWEIGHTRED_20_PERCENT";
    if (value == 2) return "Ip.CONST_CONTAINERWEIGHTRED_40_PERCENT";
    if (value == 3) return "Ip.CONST_CONTAINERWEIGHTRED_60_PERCENT";
    if (value == 4) return "Ip.CONST_CONTAINERWEIGHTRED_80_PERCENT";
    if (value == 1) return "Ip.CONST_DAMAGEBONUS_1";
    if (value == 20) return "Ip.CONST_DAMAGEBONUS_10";
    if (value == 2) return "Ip.CONST_DAMAGEBONUS_2";
    if (value == 3) return "Ip.CONST_DAMAGEBONUS_3";
    if (value == 4) return "Ip.CONST_DAMAGEBONUS_4";
    if (value == 5) return "Ip.CONST_DAMAGEBONUS_5";
    if (value == 16) return "Ip.CONST_DAMAGEBONUS_6";
    if (value == 17) return "Ip.CONST_DAMAGEBONUS_7";
    if (value == 18) return "Ip.CONST_DAMAGEBONUS_8";
    if (value == 19) return "Ip.CONST_DAMAGEBONUS_9";
    if (value == 7) return "Ip.CONST_DAMAGEIMMUNITY_100_PERCENT";
    if (value == 2) return "Ip.CONST_DAMAGEIMMUNITY_10_PERCENT";
    if (value == 3) return "Ip.CONST_DAMAGEIMMUNITY_25_PERCENT";
    if (value == 4) return "Ip.CONST_DAMAGEIMMUNITY_50_PERCENT";
    if (value == 1) return "Ip.CONST_DAMAGEIMMUNITY_5_PERCENT";
    if (value == 5) return "Ip.CONST_DAMAGEIMMUNITY_75_PERCENT";
    if (value == 6) return "Ip.CONST_DAMAGEIMMUNITY_90_PERCENT";
    if (value == 0) return "Ip.CONST_DAMAGEREDUCTION_1";
    if (value == 9) return "Ip.CONST_DAMAGEREDUCTION_10";
    if (value == 10) return "Ip.CONST_DAMAGEREDUCTION_11";
    if (value == 11) return "Ip.CONST_DAMAGEREDUCTION_12";
    if (value == 12) return "Ip.CONST_DAMAGEREDUCTION_13";
    if (value == 13) return "Ip.CONST_DAMAGEREDUCTION_14";
    if (value == 14) return "Ip.CONST_DAMAGEREDUCTION_15";
    if (value == 15) return "Ip.CONST_DAMAGEREDUCTION_16";
    if (value == 16) return "Ip.CONST_DAMAGEREDUCTION_17";
    if (value == 17) return "Ip.CONST_DAMAGEREDUCTION_18";
    if (value == 18) return "Ip.CONST_DAMAGEREDUCTION_19";
    if (value == 1) return "Ip.CONST_DAMAGEREDUCTION_2";
    if (value == 19) return "Ip.CONST_DAMAGEREDUCTION_20";
    if (value == 2) return "Ip.CONST_DAMAGEREDUCTION_3";
    if (value == 3) return "Ip.CONST_DAMAGEREDUCTION_4";
    if (value == 4) return "Ip.CONST_DAMAGEREDUCTION_5";
    if (value == 5) return "Ip.CONST_DAMAGEREDUCTION_6";
    if (value == 6) return "Ip.CONST_DAMAGEREDUCTION_7";
    if (value == 7) return "Ip.CONST_DAMAGEREDUCTION_8";
    if (value == 8) return "Ip.CONST_DAMAGEREDUCTION_9";
    if (value == 2) return "Ip.CONST_DAMAGERESIST_10";
    if (value == 3) return "Ip.CONST_DAMAGERESIST_15";
    if (value == 4) return "Ip.CONST_DAMAGERESIST_20";
    if (value == 5) return "Ip.CONST_DAMAGERESIST_25";
    if (value == 6) return "Ip.CONST_DAMAGERESIST_30";
    if (value == 7) return "Ip.CONST_DAMAGERESIST_35";
    if (value == 8) return "Ip.CONST_DAMAGERESIST_40";
    if (value == 9) return "Ip.CONST_DAMAGERESIST_45";
    if (value == 1) return "Ip.CONST_DAMAGERESIST_5";
    if (value == 10) return "Ip.CONST_DAMAGERESIST_50";
    if (value == 2) return "Ip.CONST_DAMAGESOAK_10_HP";
    if (value == 3) return "Ip.CONST_DAMAGESOAK_15_HP";
    if (value == 4) return "Ip.CONST_DAMAGESOAK_20_HP";
    if (value == 5) return "Ip.CONST_DAMAGESOAK_25_HP";
    if (value == 6) return "Ip.CONST_DAMAGESOAK_30_HP";
    if (value == 7) return "Ip.CONST_DAMAGESOAK_35_HP";
    if (value == 8) return "Ip.CONST_DAMAGESOAK_40_HP";
    if (value == 9) return "Ip.CONST_DAMAGESOAK_45_HP";
    if (value == 10) return "Ip.CONST_DAMAGESOAK_50_HP";
    if (value == 1) return "Ip.CONST_DAMAGESOAK_5_HP";
    if (value == 6) return "Ip.CONST_DAMAGETYPE_ACID";
    if (value == 0) return "Ip.CONST_DAMAGETYPE_BLUDGEONING";
    if (value == 7) return "Ip.CONST_DAMAGETYPE_COLD";
    if (value == 8) return "Ip.CONST_DAMAGETYPE_DIVINE";
    if (value == 9) return "Ip.CONST_DAMAGETYPE_ELECTRICAL";
    if (value == 10) return "Ip.CONST_DAMAGETYPE_FIRE";
    if (value == 5) return "Ip.CONST_DAMAGETYPE_MAGICAL";
    if (value == 11) return "Ip.CONST_DAMAGETYPE_NEGATIVE";
    if (value == 4) return "Ip.CONST_DAMAGETYPE_PHYSICAL";
    if (value == 1) return "Ip.CONST_DAMAGETYPE_PIERCING";
    if (value == 12) return "Ip.CONST_DAMAGETYPE_POSITIVE";
    if (value == 2) return "Ip.CONST_DAMAGETYPE_SLASHING";
    if (value == 13) return "Ip.CONST_DAMAGETYPE_SONIC";
    if (value == 3) return "Ip.CONST_DAMAGETYPE_SUBDUAL";
    if (value == 7) return "Ip.CONST_DAMAGEVULNERABILITY_100_PERCENT";
    if (value == 2) return "Ip.CONST_DAMAGEVULNERABILITY_10_PERCENT";
    if (value == 3) return "Ip.CONST_DAMAGEVULNERABILITY_25_PERCENT";
    if (value == 4) return "Ip.CONST_DAMAGEVULNERABILITY_50_PERCENT";
    if (value == 1) return "Ip.CONST_DAMAGEVULNERABILITY_5_PERCENT";
    if (value == 5) return "Ip.CONST_DAMAGEVULNERABILITY_75_PERCENT";
    if (value == 6) return "Ip.CONST_DAMAGEVULNERABILITY_90_PERCENT";
    if (value == 0) return "Ip.CONST_FEAT_ALERTNESS";
    if (value == 1) return "Ip.CONST_FEAT_AMBIDEXTROUS";
    if (value == 24) return "Ip.CONST_FEAT_ARMOR_PROF_HEAVY";
    if (value == 25) return "Ip.CONST_FEAT_ARMOR_PROF_LIGHT";
    if (value == 26) return "Ip.CONST_FEAT_ARMOR_PROF_MEDIUM";
    if (value == 2) return "Ip.CONST_FEAT_CLEAVE";
    if (value == 3) return "Ip.CONST_FEAT_COMBAT_CASTING";
    if (value == 28) return "Ip.CONST_FEAT_DISARM";
    if (value == 37) return "Ip.CONST_FEAT_DISARM_WHIP";
    if (value == 4) return "Ip.CONST_FEAT_DODGE";
    if (value == 5) return "Ip.CONST_FEAT_EXTRA_TURNING";
    if (value == 31) return "Ip.CONST_FEAT_HIDE_IN_PLAIN_SIGHT";
    if (value == 20) return "Ip.CONST_FEAT_IMPCRITUNARM";
    if (value == 6) return "Ip.CONST_FEAT_KNOCKDOWN";
    if (value == 27) return "Ip.CONST_FEAT_MOBILITY";
    if (value == 53) return "Ip.CONST_FEAT_PLAYER_TOOL_01";
    if (value == 54) return "Ip.CONST_FEAT_PLAYER_TOOL_02";
    if (value == 55) return "Ip.CONST_FEAT_PLAYER_TOOL_03";
    if (value == 56) return "Ip.CONST_FEAT_PLAYER_TOOL_04";
    if (value == 57) return "Ip.CONST_FEAT_PLAYER_TOOL_05";
    if (value == 58) return "Ip.CONST_FEAT_PLAYER_TOOL_06";
    if (value == 59) return "Ip.CONST_FEAT_PLAYER_TOOL_07";
    if (value == 60) return "Ip.CONST_FEAT_PLAYER_TOOL_08";
    if (value == 61) return "Ip.CONST_FEAT_PLAYER_TOOL_09";
    if (value == 62) return "Ip.CONST_FEAT_PLAYER_TOOL_10";
    if (value == 7) return "Ip.CONST_FEAT_POINTBLANK";
    if (value == 16) return "Ip.CONST_FEAT_POWERATTACK";
    if (value == 30) return "Ip.CONST_FEAT_RAPID_SHOT";
    if (value == 35) return "Ip.CONST_FEAT_SHIELD_PROFICIENCY";
    if (value == 32) return "Ip.CONST_FEAT_SNEAK_ATTACK_1D6";
    if (value == 33) return "Ip.CONST_FEAT_SNEAK_ATTACK_2D6";
    if (value == 34) return "Ip.CONST_FEAT_SNEAK_ATTACK_3D6";
    if (value == 39) return "Ip.CONST_FEAT_SNEAK_ATTACK_5D6";
    if (value == 8) return "Ip.CONST_FEAT_SPELLFOCUSABJ";
    if (value == 9) return "Ip.CONST_FEAT_SPELLFOCUSCON";
    if (value == 10) return "Ip.CONST_FEAT_SPELLFOCUSDIV";
    if (value == 11) return "Ip.CONST_FEAT_SPELLFOCUSENC";
    if (value == 12) return "Ip.CONST_FEAT_SPELLFOCUSEVO";
    if (value == 13) return "Ip.CONST_FEAT_SPELLFOCUSILL";
    if (value == 14) return "Ip.CONST_FEAT_SPELLFOCUSNEC";
    if (value == 15) return "Ip.CONST_FEAT_SPELLPENETRATION";
    if (value == 17) return "Ip.CONST_FEAT_TWO_WEAPON_FIGHTING";
    if (value == 36) return "Ip.CONST_FEAT_USE_POISON";
    if (value == 19) return "Ip.CONST_FEAT_WEAPFINESSE";
    if (value == 38) return "Ip.CONST_FEAT_WEAPON_PROF_CREATURE";
    if (value == 21) return "Ip.CONST_FEAT_WEAPON_PROF_EXOTIC";
    if (value == 22) return "Ip.CONST_FEAT_WEAPON_PROF_MARTIAL";
    if (value == 23) return "Ip.CONST_FEAT_WEAPON_PROF_SIMPLE";
    if (value == 18) return "Ip.CONST_FEAT_WEAPSPEUNARM";
    if (value == 29) return "Ip.CONST_FEAT_WHIRLWIND";
    if (value == 0) return "Ip.CONST_IMMUNITYMISC_BACKSTAB";
    if (value == 8) return "Ip.CONST_IMMUNITYMISC_CRITICAL_HITS";
    if (value == 9) return "Ip.CONST_IMMUNITYMISC_DEATH_MAGIC";
    if (value == 4) return "Ip.CONST_IMMUNITYMISC_DISEASE";
    if (value == 5) return "Ip.CONST_IMMUNITYMISC_FEAR";
    if (value == 6) return "Ip.CONST_IMMUNITYMISC_KNOCKDOWN";
    if (value == 1) return "Ip.CONST_IMMUNITYMISC_LEVEL_ABIL_DRAIN";
    if (value == 2) return "Ip.CONST_IMMUNITYMISC_MINDSPELLS";
    if (value == 7) return "Ip.CONST_IMMUNITYMISC_PARALYSIS";
    if (value == 3) return "Ip.CONST_IMMUNITYMISC_POISON";
    if (value == 0) return "Ip.CONST_IMMUNITYSPELL_ACID_FOG";
    if (value == 1) return "Ip.CONST_IMMUNITYSPELL_AID";
    if (value == 182) return "Ip.CONST_IMMUNITYSPELL_AURA_OF_VITALITY";
    if (value == 2) return "Ip.CONST_IMMUNITYSPELL_BARKSKIN";
    if (value == 3) return "Ip.CONST_IMMUNITYSPELL_BESTOW_CURSE";
    if (value == 6) return "Ip.CONST_IMMUNITYSPELL_BLINDNESS_AND_DEAFNESS";
    if (value == 8) return "Ip.CONST_IMMUNITYSPELL_BURNING_HANDS";
    if (value == 9) return "Ip.CONST_IMMUNITYSPELL_CALL_LIGHTNING";
    if (value == 12) return "Ip.CONST_IMMUNITYSPELL_CHAIN_LIGHTNING";
    if (value == 13) return "Ip.CONST_IMMUNITYSPELL_CHARM_MONSTER";
    if (value == 14) return "Ip.CONST_IMMUNITYSPELL_CHARM_PERSON";
    if (value == 15) return "Ip.CONST_IMMUNITYSPELL_CHARM_PERSON_OR_ANIMAL";
    if (value == 16) return "Ip.CONST_IMMUNITYSPELL_CIRCLE_OF_DEATH";
    if (value == 17) return "Ip.CONST_IMMUNITYSPELL_CIRCLE_OF_DOOM";
    if (value == 21) return "Ip.CONST_IMMUNITYSPELL_CLOUDKILL";
    if (value == 22) return "Ip.CONST_IMMUNITYSPELL_COLOR_SPRAY";
    if (value == 23) return "Ip.CONST_IMMUNITYSPELL_CONE_OF_COLD";
    if (value == 24) return "Ip.CONST_IMMUNITYSPELL_CONFUSION";
    if (value == 25) return "Ip.CONST_IMMUNITYSPELL_CONTAGION";
    if (value == 26) return "Ip.CONST_IMMUNITYSPELL_CONTROL_UNDEAD";
    if (value == 27) return "Ip.CONST_IMMUNITYSPELL_CURE_CRITICAL_WOUNDS";
    if (value == 28) return "Ip.CONST_IMMUNITYSPELL_CURE_LIGHT_WOUNDS";
    if (value == 29) return "Ip.CONST_IMMUNITYSPELL_CURE_MINOR_WOUNDS";
    if (value == 30) return "Ip.CONST_IMMUNITYSPELL_CURE_MODERATE_WOUNDS";
    if (value == 31) return "Ip.CONST_IMMUNITYSPELL_CURE_SERIOUS_WOUNDS";
    if (value == 32) return "Ip.CONST_IMMUNITYSPELL_DARKNESS";
    if (value == 33) return "Ip.CONST_IMMUNITYSPELL_DAZE";
    if (value == 34) return "Ip.CONST_IMMUNITYSPELL_DEATH_WARD";
    if (value == 35) return "Ip.CONST_IMMUNITYSPELL_DELAYED_BLAST_FIREBALL";
    if (value == 36) return "Ip.CONST_IMMUNITYSPELL_DISMISSAL";
    if (value == 37) return "Ip.CONST_IMMUNITYSPELL_DISPEL_MAGIC";
    if (value == 39) return "Ip.CONST_IMMUNITYSPELL_DOMINATE_ANIMAL";
    if (value == 40) return "Ip.CONST_IMMUNITYSPELL_DOMINATE_MONSTER";
    if (value == 41) return "Ip.CONST_IMMUNITYSPELL_DOMINATE_PERSON";
    if (value == 42) return "Ip.CONST_IMMUNITYSPELL_DOOM";
    if (value == 173) return "Ip.CONST_IMMUNITYSPELL_EAGLE_SPLEDOR";
    if (value == 46) return "Ip.CONST_IMMUNITYSPELL_ENERGY_DRAIN";
    if (value == 47) return "Ip.CONST_IMMUNITYSPELL_ENERVATION";
    if (value == 48) return "Ip.CONST_IMMUNITYSPELL_ENTANGLE";
    if (value == 185) return "Ip.CONST_IMMUNITYSPELL_EVARDS_BLACK_TENTACLES";
    if (value == 49) return "Ip.CONST_IMMUNITYSPELL_FEAR";
    if (value == 50) return "Ip.CONST_IMMUNITYSPELL_FEEBLEMIND";
    if (value == 187) return "Ip.CONST_IMMUNITYSPELL_FIND_TRAPS";
    if (value == 51) return "Ip.CONST_IMMUNITYSPELL_FINGER_OF_DEATH";
    if (value == 53) return "Ip.CONST_IMMUNITYSPELL_FIREBALL";
    if (value == 52) return "Ip.CONST_IMMUNITYSPELL_FIRE_STORM";
    if (value == 54) return "Ip.CONST_IMMUNITYSPELL_FLAME_ARROW";
    if (value == 55) return "Ip.CONST_IMMUNITYSPELL_FLAME_LASH";
    if (value == 56) return "Ip.CONST_IMMUNITYSPELL_FLAME_STRIKE";
    if (value == 175) return "Ip.CONST_IMMUNITYSPELL_FOXS_CUNNING";
    if (value == 57) return "Ip.CONST_IMMUNITYSPELL_FREEDOM_OF_MOVEMENT";
    if (value == 59) return "Ip.CONST_IMMUNITYSPELL_GREASE";
    if (value == 179) return "Ip.CONST_IMMUNITYSPELL_GREATER_BULLS_STRENGTH";
    if (value == 180) return "Ip.CONST_IMMUNITYSPELL_GREATER_CATS_GRACE";
    if (value == 60) return "Ip.CONST_IMMUNITYSPELL_GREATER_DISPELLING";
    if (value == 176) return "Ip.CONST_IMMUNITYSPELL_GREATER_EAGLES_SPLENDOR";
    if (value == 181) return "Ip.CONST_IMMUNITYSPELL_GREATER_ENDURANCE";
    if (value == 178) return "Ip.CONST_IMMUNITYSPELL_GREATER_FOXS_CUNNING";
    if (value == 177) return "Ip.CONST_IMMUNITYSPELL_GREATER_OWLS_WISDOM";
    if (value == 62) return "Ip.CONST_IMMUNITYSPELL_GREATER_PLANAR_BINDING";
    if (value == 64) return "Ip.CONST_IMMUNITYSPELL_GREATER_SHADOW_CONJURATION";
    if (value == 65) return "Ip.CONST_IMMUNITYSPELL_GREATER_SPELL_BREACH";
    if (value == 68) return "Ip.CONST_IMMUNITYSPELL_HAMMER_OF_THE_GODS";
    if (value == 69) return "Ip.CONST_IMMUNITYSPELL_HARM";
    if (value == 71) return "Ip.CONST_IMMUNITYSPELL_HEAL";
    if (value == 72) return "Ip.CONST_IMMUNITYSPELL_HEALING_CIRCLE";
    if (value == 73) return "Ip.CONST_IMMUNITYSPELL_HOLD_ANIMAL";
    if (value == 74) return "Ip.CONST_IMMUNITYSPELL_HOLD_MONSTER";
    if (value == 75) return "Ip.CONST_IMMUNITYSPELL_HOLD_PERSON";
    if (value == 78) return "Ip.CONST_IMMUNITYSPELL_IMPLOSION";
    if (value == 79) return "Ip.CONST_IMMUNITYSPELL_IMPROVED_INVISIBILITY";
    if (value == 80) return "Ip.CONST_IMMUNITYSPELL_INCENDIARY_CLOUD";
    if (value == 82) return "Ip.CONST_IMMUNITYSPELL_INVISIBILITY_PURGE";
    if (value == 186) return "Ip.CONST_IMMUNITYSPELL_LEGEND_LORE";
    if (value == 84) return "Ip.CONST_IMMUNITYSPELL_LESSER_DISPEL";
    if (value == 86) return "Ip.CONST_IMMUNITYSPELL_LESSER_PLANAR_BINDING";
    if (value == 88) return "Ip.CONST_IMMUNITYSPELL_LESSER_SPELL_BREACH";
    if (value == 91) return "Ip.CONST_IMMUNITYSPELL_LIGHTNING_BOLT";
    if (value == 171) return "Ip.CONST_IMMUNITYSPELL_MAGIC_CIRCLE_AGAINST_ALIGNMENT";
    if (value == 97) return "Ip.CONST_IMMUNITYSPELL_MAGIC_MISSILE";
    if (value == 100) return "Ip.CONST_IMMUNITYSPELL_MASS_BLINDNESS_AND_DEAFNESS";
    if (value == 101) return "Ip.CONST_IMMUNITYSPELL_MASS_CHARM";
    if (value == 104) return "Ip.CONST_IMMUNITYSPELL_MASS_HEAL";
    if (value == 105) return "Ip.CONST_IMMUNITYSPELL_MELFS_ACID_ARROW";
    if (value == 106) return "Ip.CONST_IMMUNITYSPELL_METEOR_SWARM";
    if (value == 108) return "Ip.CONST_IMMUNITYSPELL_MIND_FOG";
    if (value == 112) return "Ip.CONST_IMMUNITYSPELL_MORDENKAINENS_DISJUNCTION";
    if (value == 174) return "Ip.CONST_IMMUNITYSPELL_OWLS_WISDOM";
    if (value == 116) return "Ip.CONST_IMMUNITYSPELL_PHANTASMAL_KILLER";
    if (value == 117) return "Ip.CONST_IMMUNITYSPELL_PLANAR_BINDING";
    if (value == 118) return "Ip.CONST_IMMUNITYSPELL_POISON";
    if (value == 120) return "Ip.CONST_IMMUNITYSPELL_POWER_WORD_KILL";
    if (value == 121) return "Ip.CONST_IMMUNITYSPELL_POWER_WORD_STUN";
    if (value == 124) return "Ip.CONST_IMMUNITYSPELL_PRISMATIC_SPRAY";
    if (value == 131) return "Ip.CONST_IMMUNITYSPELL_RAY_OF_ENFEEBLEMENT";
    if (value == 132) return "Ip.CONST_IMMUNITYSPELL_RAY_OF_FROST";
    if (value == 184) return "Ip.CONST_IMMUNITYSPELL_REGENERATE";
    if (value == 142) return "Ip.CONST_IMMUNITYSPELL_SCARE";
    if (value == 143) return "Ip.CONST_IMMUNITYSPELL_SEARING_LIGHT";
    if (value == 145) return "Ip.CONST_IMMUNITYSPELL_SHADES";
    if (value == 146) return "Ip.CONST_IMMUNITYSPELL_SHADOW_CONJURATION";
    if (value == 150) return "Ip.CONST_IMMUNITYSPELL_SILENCE";
    if (value == 151) return "Ip.CONST_IMMUNITYSPELL_SLAY_LIVING";
    if (value == 152) return "Ip.CONST_IMMUNITYSPELL_SLEEP";
    if (value == 153) return "Ip.CONST_IMMUNITYSPELL_SLOW";
    if (value == 154) return "Ip.CONST_IMMUNITYSPELL_SOUND_BURST";
    if (value == 158) return "Ip.CONST_IMMUNITYSPELL_STINKING_CLOUD";
    if (value == 159) return "Ip.CONST_IMMUNITYSPELL_STONESKIN";
    if (value == 160) return "Ip.CONST_IMMUNITYSPELL_STORM_OF_VENGEANCE";
    if (value == 161) return "Ip.CONST_IMMUNITYSPELL_SUNBEAM";
    if (value == 165) return "Ip.CONST_IMMUNITYSPELL_VIRTUE";
    if (value == 166) return "Ip.CONST_IMMUNITYSPELL_WAIL_OF_THE_BANSHEE";
    if (value == 183) return "Ip.CONST_IMMUNITYSPELL_WAR_CRY";
    if (value == 167) return "Ip.CONST_IMMUNITYSPELL_WEB";
    if (value == 168) return "Ip.CONST_IMMUNITYSPELL_WEIRD";
    if (value == 169) return "Ip.CONST_IMMUNITYSPELL_WORD_OF_FAITH";
    if (value == 4) return "Ip.CONST_LIGHTBRIGHTNESS_BRIGHT";
    if (value == 1) return "Ip.CONST_LIGHTBRIGHTNESS_DIM";
    if (value == 2) return "Ip.CONST_LIGHTBRIGHTNESS_LOW";
    if (value == 3) return "Ip.CONST_LIGHTBRIGHTNESS_NORMAL";
    if (value == 0) return "Ip.CONST_LIGHTCOLOR_BLUE";
    if (value == 4) return "Ip.CONST_LIGHTCOLOR_GREEN";
    if (value == 5) return "Ip.CONST_LIGHTCOLOR_ORANGE";
    if (value == 2) return "Ip.CONST_LIGHTCOLOR_PURPLE";
    if (value == 3) return "Ip.CONST_LIGHTCOLOR_RED";
    if (value == 6) return "Ip.CONST_LIGHTCOLOR_WHITE";
    if (value == 1) return "Ip.CONST_LIGHTCOLOR_YELLOW";
    if (value == 18) return "Ip.CONST_ONHIT_ABILITYDRAIN";
    if (value == 16) return "Ip.CONST_ONHIT_BLINDNESS";
    if (value == 0) return "Ip.CONST_ONHIT_CASTSPELL_ACID_FOG";
    if (value == 81) return "Ip.CONST_ONHIT_CASTSPELL_ACID_SPLASH";
    if (value == 78) return "Ip.CONST_ONHIT_CASTSPELL_ACTIVATE_ITEM";
    if (value == 91) return "Ip.CONST_ONHIT_CASTSPELL_BALAGARNSIRONHORN";
    if (value == 113) return "Ip.CONST_ONHIT_CASTSPELL_BALL_LIGHTNING";
    if (value == 100) return "Ip.CONST_ONHIT_CASTSPELL_BANE";
    if (value == 85) return "Ip.CONST_ONHIT_CASTSPELL_BANISHMENT";
    if (value == 1) return "Ip.CONST_ONHIT_CASTSPELL_BESTOW_CURSE";
    if (value == 106) return "Ip.CONST_ONHIT_CASTSPELL_BIGBYS_CLENCHED_FIST";
    if (value == 107) return "Ip.CONST_ONHIT_CASTSPELL_BIGBYS_CRUSHING_HAND";
    if (value == 104) return "Ip.CONST_ONHIT_CASTSPELL_BIGBYS_FORCEFUL_HAND";
    if (value == 105) return "Ip.CONST_ONHIT_CASTSPELL_BIGBYS_GRASPING_HAND";
    if (value == 103) return "Ip.CONST_ONHIT_CASTSPELL_BIGBYS_INTERPOSING_HAND";
    if (value == 2) return "Ip.CONST_ONHIT_CASTSPELL_BLADE_BARRIER";
    if (value == 3) return "Ip.CONST_ONHIT_CASTSPELL_BLINDNESS_AND_DEAFNESS";
    if (value == 80) return "Ip.CONST_ONHIT_CASTSPELL_BOMBARDMENT";
    if (value == 4) return "Ip.CONST_ONHIT_CASTSPELL_CALL_LIGHTNING";
    if (value == 5) return "Ip.CONST_ONHIT_CASTSPELL_CHAIN_LIGHTNING";
    if (value == 6) return "Ip.CONST_ONHIT_CASTSPELL_CLOUDKILL";
    if (value == 140) return "Ip.CONST_ONHIT_CASTSPELL_COMBUST";
    if (value == 7) return "Ip.CONST_ONHIT_CASTSPELL_CONFUSION";
    if (value == 8) return "Ip.CONST_ONHIT_CASTSPELL_CONTAGION";
    if (value == 72) return "Ip.CONST_ONHIT_CASTSPELL_CREEPING_DOOM";
    if (value == 110) return "Ip.CONST_ONHIT_CASTSPELL_CRUMBLE";
    if (value == 9) return "Ip.CONST_ONHIT_CASTSPELL_DARKNESS";
    if (value == 10) return "Ip.CONST_ONHIT_CASTSPELL_DAZE";
    if (value == 137) return "Ip.CONST_ONHIT_CASTSPELL_DEAFENING_CLNG";
    if (value == 11) return "Ip.CONST_ONHIT_CASTSPELL_DELAYED_BLAST_FIREBALL";
    if (value == 73) return "Ip.CONST_ONHIT_CASTSPELL_DESTRUCTION";
    if (value == 12) return "Ip.CONST_ONHIT_CASTSPELL_DISMISSAL";
    if (value == 13) return "Ip.CONST_ONHIT_CASTSPELL_DISPEL_MAGIC";
    if (value == 14) return "Ip.CONST_ONHIT_CASTSPELL_DOOM";
    if (value == 92) return "Ip.CONST_ONHIT_CASTSPELL_DROWN";
    if (value == 83) return "Ip.CONST_ONHIT_CASTSPELL_EARTHQUAKE";
    if (value == 93) return "Ip.CONST_ONHIT_CASTSPELL_ELECTRIC_JOLT";
    if (value == 15) return "Ip.CONST_ONHIT_CASTSPELL_ENERGY_DRAIN";
    if (value == 16) return "Ip.CONST_ONHIT_CASTSPELL_ENERVATION";
    if (value == 17) return "Ip.CONST_ONHIT_CASTSPELL_ENTANGLE";
    if (value == 77) return "Ip.CONST_ONHIT_CASTSPELL_EVARDS_BLACK_TENTACLES";
    if (value == 121) return "Ip.CONST_ONHIT_CASTSPELL_EVIL_BLIGHT";
    if (value == 18) return "Ip.CONST_ONHIT_CASTSPELL_FEAR";
    if (value == 19) return "Ip.CONST_ONHIT_CASTSPELL_FEEBLEMIND";
    if (value == 21) return "Ip.CONST_ONHIT_CASTSPELL_FIREBALL";
    if (value == 94) return "Ip.CONST_ONHIT_CASTSPELL_FIREBRAND";
    if (value == 20) return "Ip.CONST_ONHIT_CASTSPELL_FIRE_STORM";
    if (value == 22) return "Ip.CONST_ONHIT_CASTSPELL_FLAME_LASH";
    if (value == 23) return "Ip.CONST_ONHIT_CASTSPELL_FLAME_STRIKE";
    if (value == 79) return "Ip.CONST_ONHIT_CASTSPELL_FLARE";
    if (value == 108) return "Ip.CONST_ONHIT_CASTSPELL_FLESH_TO_STONE";
    if (value == 139) return "Ip.CONST_ONHIT_CASTSPELL_FREEZE";
    if (value == 114) return "Ip.CONST_ONHIT_CASTSPELL_GEDLEES_ELECTRIC_LOOP";
    if (value == 24) return "Ip.CONST_ONHIT_CASTSPELL_GHOUL_TOUCH";
    if (value == 25) return "Ip.CONST_ONHIT_CASTSPELL_GREASE";
    if (value == 26) return "Ip.CONST_ONHIT_CASTSPELL_GREATER_DISPELLING";
    if (value == 27) return "Ip.CONST_ONHIT_CASTSPELL_GREATER_SPELL_BREACH";
    if (value == 112) return "Ip.CONST_ONHIT_CASTSPELL_GREAT_THUNDERCLAP";
    if (value == 28) return "Ip.CONST_ONHIT_CASTSPELL_GUST_OF_WIND";
    if (value == 29) return "Ip.CONST_ONHIT_CASTSPELL_HAMMER_OF_THE_GODS";
    if (value == 30) return "Ip.CONST_ONHIT_CASTSPELL_HARM";
    if (value == 31) return "Ip.CONST_ONHIT_CASTSPELL_HOLD_ANIMAL";
    if (value == 32) return "Ip.CONST_ONHIT_CASTSPELL_HOLD_MONSTER";
    if (value == 33) return "Ip.CONST_ONHIT_CASTSPELL_HOLD_PERSON";
    if (value == 115) return "Ip.CONST_ONHIT_CASTSPELL_HORIZIKAULS_BOOM";
    if (value == 74) return "Ip.CONST_ONHIT_CASTSPELL_HORRID_WILTING";
    if (value == 75) return "Ip.CONST_ONHIT_CASTSPELL_ICE_STORM";
    if (value == 34) return "Ip.CONST_ONHIT_CASTSPELL_IMPLOSION";
    if (value == 35) return "Ip.CONST_ONHIT_CASTSPELL_INCENDIARY_CLOUD";
    if (value == 97) return "Ip.CONST_ONHIT_CASTSPELL_INFERNO";
    if (value == 111) return "Ip.CONST_ONHIT_CASTSPELL_INFESTATION_OF_MAGGOTS";
    if (value == 90) return "Ip.CONST_ONHIT_CASTSPELL_INFLICT_CRITICAL_WOUNDS";
    if (value == 87) return "Ip.CONST_ONHIT_CASTSPELL_INFLICT_LIGHT_WOUNDS";
    if (value == 86) return "Ip.CONST_ONHIT_CASTSPELL_INFLICT_MINOR_WOUNDS";
    if (value == 88) return "Ip.CONST_ONHIT_CASTSPELL_INFLICT_MODERATE_WOUNDS";
    if (value == 89) return "Ip.CONST_ONHIT_CASTSPELL_INFLICT_SERIOUS_WOUNDS";
    if (value == 135) return "Ip.CONST_ONHIT_CASTSPELL_INTELLIGENT_WEAPON_ONHIT";
    if (value == 99) return "Ip.CONST_ONHIT_CASTSPELL_ISAACS_GREATER_MISSILE_STORM";
    if (value == 98) return "Ip.CONST_ONHIT_CASTSPELL_ISAACS_LESSER_MISSILE_STORM";
    if (value == 138) return "Ip.CONST_ONHIT_CASTSPELL_KNOCKDOWN";
    if (value == 36) return "Ip.CONST_ONHIT_CASTSPELL_LESSER_DISPEL";
    if (value == 38) return "Ip.CONST_ONHIT_CASTSPELL_LESSER_SPELL_BREACH";
    if (value == 40) return "Ip.CONST_ONHIT_CASTSPELL_LIGHT";
    if (value == 41) return "Ip.CONST_ONHIT_CASTSPELL_LIGHTNING_BOLT";
    if (value == 42) return "Ip.CONST_ONHIT_CASTSPELL_MAGIC_MISSILE";
    if (value == 43) return "Ip.CONST_ONHIT_CASTSPELL_MASS_BLINDNESS_AND_DEAFNESS";
    if (value == 44) return "Ip.CONST_ONHIT_CASTSPELL_MASS_CHARM";
    if (value == 45) return "Ip.CONST_ONHIT_CASTSPELL_MELFS_ACID_ARROW";
    if (value == 116) return "Ip.CONST_ONHIT_CASTSPELL_MESTILS_ACID_BREATH";
    if (value == 46) return "Ip.CONST_ONHIT_CASTSPELL_METEOR_SWARM";
    if (value == 47) return "Ip.CONST_ONHIT_CASTSPELL_MIND_FOG";
    if (value == 76) return "Ip.CONST_ONHIT_CASTSPELL_NEGATIVE_ENERGY_BURST";
    if (value == 133) return "Ip.CONST_ONHIT_CASTSPELL_ONHITDEMILICHTOUCH";
    if (value == 134) return "Ip.CONST_ONHIT_CASTSPELL_ONHITDRACOLICHTOUCH";
    if (value == 129) return "Ip.CONST_ONHIT_CASTSPELL_ONHITFLAMINGSKIN";
    if (value == 132) return "Ip.CONST_ONHIT_CASTSPELL_ONHITRUINARMORBEBILITH";
    if (value == 130) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_CHAOSSHIELD";
    if (value == 131) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_CONSTRICTWEAPON";
    if (value == 127) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_DARKFIRE";
    if (value == 128) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_EXTRACTBRAIN";
    if (value == 124) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_FIREDAMAGE";
    if (value == 126) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_PLANARRIFT";
    if (value == 123) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_SLAYRAKSHASA";
    if (value == 122) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_TELEPORT";
    if (value == 125) return "Ip.CONST_ONHIT_CASTSPELL_ONHIT_UNIQUEPOWER";
    if (value == 136) return "Ip.CONST_ONHIT_CASTSPELL_PARALYZE_2";
    if (value == 49) return "Ip.CONST_ONHIT_CASTSPELL_PHANTASMAL_KILLER";
    if (value == 50) return "Ip.CONST_ONHIT_CASTSPELL_POISON";
    if (value == 51) return "Ip.CONST_ONHIT_CASTSPELL_POWER_WORD_KILL";
    if (value == 52) return "Ip.CONST_ONHIT_CASTSPELL_POWER_WORD_STUN";
    if (value == 82) return "Ip.CONST_ONHIT_CASTSPELL_QUILLFIRE";
    if (value == 54) return "Ip.CONST_ONHIT_CASTSPELL_SCARE";
    if (value == 117) return "Ip.CONST_ONHIT_CASTSPELL_SCINTILLATING_SPHERE";
    if (value == 55) return "Ip.CONST_ONHIT_CASTSPELL_SEARING_LIGHT";
    if (value == 56) return "Ip.CONST_ONHIT_CASTSPELL_SILENCE";
    if (value == 57) return "Ip.CONST_ONHIT_CASTSPELL_SLAY_LIVING";
    if (value == 58) return "Ip.CONST_ONHIT_CASTSPELL_SLEEP";
    if (value == 59) return "Ip.CONST_ONHIT_CASTSPELL_SLOW";
    if (value == 60) return "Ip.CONST_ONHIT_CASTSPELL_SOUND_BURST";
    if (value == 101) return "Ip.CONST_ONHIT_CASTSPELL_SPIKE_GROWTH";
    if (value == 61) return "Ip.CONST_ONHIT_CASTSPELL_STINKING_CLOUD";
    if (value == 119) return "Ip.CONST_ONHIT_CASTSPELL_STONEHOLD";
    if (value == 109) return "Ip.CONST_ONHIT_CASTSPELL_STONE_TO_FLESH";
    if (value == 63) return "Ip.CONST_ONHIT_CASTSPELL_STORM_OF_VENGEANCE";
    if (value == 64) return "Ip.CONST_ONHIT_CASTSPELL_SUNBEAM";
    if (value == 84) return "Ip.CONST_ONHIT_CASTSPELL_SUNBURST";
    if (value == 102) return "Ip.CONST_ONHIT_CASTSPELL_TASHAS_HIDEOUS_LAUGHTER";
    if (value == 96) return "Ip.CONST_ONHIT_CASTSPELL_UNDEATHS_ETERNAL_FOE";
    if (value == 118) return "Ip.CONST_ONHIT_CASTSPELL_UNDEATH_TO_DEATH";
    if (value == 65) return "Ip.CONST_ONHIT_CASTSPELL_VAMPIRIC_TOUCH";
    if (value == 66) return "Ip.CONST_ONHIT_CASTSPELL_WAIL_OF_THE_BANSHEE";
    if (value == 67) return "Ip.CONST_ONHIT_CASTSPELL_WALL_OF_FIRE";
    if (value == 68) return "Ip.CONST_ONHIT_CASTSPELL_WEB";
    if (value == 69) return "Ip.CONST_ONHIT_CASTSPELL_WEIRD";
    if (value == 70) return "Ip.CONST_ONHIT_CASTSPELL_WORD_OF_FAITH";
    if (value == 95) return "Ip.CONST_ONHIT_CASTSPELL_WOUNDING_WHISPERS";
    if (value == 3) return "Ip.CONST_ONHIT_CONFUSION";
    if (value == 5) return "Ip.CONST_ONHIT_DAZE";
    if (value == 15) return "Ip.CONST_ONHIT_DEAFNESS";
    if (value == 20) return "Ip.CONST_ONHIT_DISEASE";
    if (value == 11) return "Ip.CONST_ONHIT_DISPELMAGIC";
    if (value == 6) return "Ip.CONST_ONHIT_DOOM";
    if (value == 1) return "Ip.CONST_ONHIT_DURATION_10_PERCENT_4_ROUNDS";
    if (value == 2) return "Ip.CONST_ONHIT_DURATION_25_PERCENT_3_ROUNDS";
    if (value == 3) return "Ip.CONST_ONHIT_DURATION_50_PERCENT_2_ROUNDS";
    if (value == 0) return "Ip.CONST_ONHIT_DURATION_5_PERCENT_5_ROUNDS";
    if (value == 4) return "Ip.CONST_ONHIT_DURATION_75_PERCENT_1_ROUND";
    if (value == 7) return "Ip.CONST_ONHIT_FEAR";
    if (value == 12) return "Ip.CONST_ONHIT_GREATERDISPEL";
    if (value == 2) return "Ip.CONST_ONHIT_HOLD";
    if (value == 19) return "Ip.CONST_ONHIT_ITEMPOISON";
    if (value == 8) return "Ip.CONST_ONHIT_KNOCK";
    if (value == 10) return "Ip.CONST_ONHIT_LESSERDISPEL";
    if (value == 17) return "Ip.CONST_ONHIT_LEVELDRAIN";
    if (value == 13) return "Ip.CONST_ONHIT_MORDSDISJUNCTION";
    if (value == 0) return "Ip.CONST_ONHIT_SAVEDC_14";
    if (value == 1) return "Ip.CONST_ONHIT_SAVEDC_16";
    if (value == 2) return "Ip.CONST_ONHIT_SAVEDC_18";
    if (value == 3) return "Ip.CONST_ONHIT_SAVEDC_20";
    if (value == 4) return "Ip.CONST_ONHIT_SAVEDC_22";
    if (value == 5) return "Ip.CONST_ONHIT_SAVEDC_24";
    if (value == 6) return "Ip.CONST_ONHIT_SAVEDC_26";
    if (value == 14) return "Ip.CONST_ONHIT_SILENCE";
    if (value == 23) return "Ip.CONST_ONHIT_SLAYALIGNMENT";
    if (value == 22) return "Ip.CONST_ONHIT_SLAYALIGNMENTGROUP";
    if (value == 21) return "Ip.CONST_ONHIT_SLAYRACE";
    if (value == 0) return "Ip.CONST_ONHIT_SLEEP";
    if (value == 9) return "Ip.CONST_ONHIT_SLOW";
    if (value == 1) return "Ip.CONST_ONHIT_STUN";
    if (value == 24) return "Ip.CONST_ONHIT_VORPAL";
    if (value == 25) return "Ip.CONST_ONHIT_WOUNDING";
    if (value == 0) return "Ip.CONST_ONMONSTERHIT_ABILITYDRAIN";
    if (value == 1) return "Ip.CONST_ONMONSTERHIT_CONFUSION";
    if (value == 2) return "Ip.CONST_ONMONSTERHIT_DISEASE";
    if (value == 3) return "Ip.CONST_ONMONSTERHIT_DOOM";
    if (value == 4) return "Ip.CONST_ONMONSTERHIT_FEAR";
    if (value == 5) return "Ip.CONST_ONMONSTERHIT_LEVELDRAIN";
    if (value == 6) return "Ip.CONST_ONMONSTERHIT_POISON";
    if (value == 7) return "Ip.CONST_ONMONSTERHIT_SLOW";
    if (value == 8) return "Ip.CONST_ONMONSTERHIT_STUN";
    if (value == 9) return "Ip.CONST_ONMONSTERHIT_WOUNDING";
    if (value == 5) return "Ip.CONST_POISON_1D2_CHADAMAGE";
    if (value == 2) return "Ip.CONST_POISON_1D2_CONDAMAGE";
    if (value == 1) return "Ip.CONST_POISON_1D2_DEXDAMAGE";
    if (value == 3) return "Ip.CONST_POISON_1D2_INTDAMAGE";
    if (value == 0) return "Ip.CONST_POISON_1D2_STRDAMAGE";
    if (value == 4) return "Ip.CONST_POISON_1D2_WISDAMAGE";
    if (value == 7) return "Ip.CONST_QUALITY_ABOVE_AVERAGE";
    if (value == 6) return "Ip.CONST_QUALITY_AVERAGE";
    if (value == 5) return "Ip.CONST_QUALITY_BELOW_AVERAGE";
    if (value == 14) return "Ip.CONST_QUALITY_CUT";
    if (value == 1) return "Ip.CONST_QUALITY_DESTROYED";
    if (value == 10) return "Ip.CONST_QUALITY_EXCELLENT";
    if (value == 12) return "Ip.CONST_QUALITY_GOD_LIKE";
    if (value == 8) return "Ip.CONST_QUALITY_GOOD";
    if (value == 11) return "Ip.CONST_QUALITY_MASTERWORK";
    if (value == 15) return "Ip.CONST_QUALITY_POLISHED";
    if (value == 4) return "Ip.CONST_QUALITY_POOR";
    if (value == 13) return "Ip.CONST_QUALITY_RAW";
    if (value == 2) return "Ip.CONST_QUALITY_RUINED";
    if (value == 0) return "Ip.CONST_QUALITY_UNKOWN";
    if (value == 9) return "Ip.CONST_QUALITY_VERY_GOOD";
    if (value == 3) return "Ip.CONST_QUALITY_VERY_POOR";
    if (value == 7) return "Ip.CONST_RACIALTYPE_ABERRATION";
    if (value == 8) return "Ip.CONST_RACIALTYPE_ANIMAL";
    if (value == 9) return "Ip.CONST_RACIALTYPE_BEAST";
    if (value == 10) return "Ip.CONST_RACIALTYPE_CONSTRUCT";
    if (value == 11) return "Ip.CONST_RACIALTYPE_DRAGON";
    if (value == 0) return "Ip.CONST_RACIALTYPE_DWARF";
    if (value == 16) return "Ip.CONST_RACIALTYPE_ELEMENTAL";
    if (value == 1) return "Ip.CONST_RACIALTYPE_ELF";
    if (value == 17) return "Ip.CONST_RACIALTYPE_FEY";
    if (value == 18) return "Ip.CONST_RACIALTYPE_GIANT";
    if (value == 2) return "Ip.CONST_RACIALTYPE_GNOME";
    if (value == 4) return "Ip.CONST_RACIALTYPE_HALFELF";
    if (value == 3) return "Ip.CONST_RACIALTYPE_HALFLING";
    if (value == 5) return "Ip.CONST_RACIALTYPE_HALFORC";
    if (value == 6) return "Ip.CONST_RACIALTYPE_HUMAN";
    if (value == 12) return "Ip.CONST_RACIALTYPE_HUMANOID_GOBLINOID";
    if (value == 13) return "Ip.CONST_RACIALTYPE_HUMANOID_MONSTROUS";
    if (value == 14) return "Ip.CONST_RACIALTYPE_HUMANOID_ORC";
    if (value == 15) return "Ip.CONST_RACIALTYPE_HUMANOID_REPTILIAN";
    if (value == 19) return "Ip.CONST_RACIALTYPE_MAGICAL_BEAST";
    if (value == 20) return "Ip.CONST_RACIALTYPE_OUTSIDER";
    if (value == 23) return "Ip.CONST_RACIALTYPE_SHAPECHANGER";
    if (value == 24) return "Ip.CONST_RACIALTYPE_UNDEAD";
    if (value == 25) return "Ip.CONST_RACIALTYPE_VERMIN";
    if (value == 5) return "Ip.CONST_REDUCEDWEIGHT_10_PERCENT";
    if (value == 4) return "Ip.CONST_REDUCEDWEIGHT_20_PERCENT";
    if (value == 3) return "Ip.CONST_REDUCEDWEIGHT_40_PERCENT";
    if (value == 2) return "Ip.CONST_REDUCEDWEIGHT_60_PERCENT";
    if (value == 1) return "Ip.CONST_REDUCEDWEIGHT_80_PERCENT";
    if (value == 1) return "Ip.CONST_SAVEBASETYPE_FORTITUDE";
    if (value == 3) return "Ip.CONST_SAVEBASETYPE_REFLEX";
    if (value == 2) return "Ip.CONST_SAVEBASETYPE_WILL";
    if (value == 1) return "Ip.CONST_SAVEVS_ACID";
    if (value == 3) return "Ip.CONST_SAVEVS_COLD";
    if (value == 4) return "Ip.CONST_SAVEVS_DEATH";
    if (value == 5) return "Ip.CONST_SAVEVS_DISEASE";
    if (value == 6) return "Ip.CONST_SAVEVS_DIVINE";
    if (value == 7) return "Ip.CONST_SAVEVS_ELECTRICAL";
    if (value == 8) return "Ip.CONST_SAVEVS_FEAR";
    if (value == 9) return "Ip.CONST_SAVEVS_FIRE";
    if (value == 11) return "Ip.CONST_SAVEVS_MINDAFFECTING";
    if (value == 12) return "Ip.CONST_SAVEVS_NEGATIVE";
    if (value == 13) return "Ip.CONST_SAVEVS_POISON";
    if (value == 14) return "Ip.CONST_SAVEVS_POSITIVE";
    if (value == 15) return "Ip.CONST_SAVEVS_SONIC";
    if (value == 0) return "Ip.CONST_SAVEVS_UNIVERSAL";
    if (value == 0) return "Ip.CONST_SPELLLEVEL_0";
    if (value == 1) return "Ip.CONST_SPELLLEVEL_1";
    if (value == 2) return "Ip.CONST_SPELLLEVEL_2";
    if (value == 3) return "Ip.CONST_SPELLLEVEL_3";
    if (value == 4) return "Ip.CONST_SPELLLEVEL_4";
    if (value == 5) return "Ip.CONST_SPELLLEVEL_5";
    if (value == 6) return "Ip.CONST_SPELLLEVEL_6";
    if (value == 7) return "Ip.CONST_SPELLLEVEL_7";
    if (value == 8) return "Ip.CONST_SPELLLEVEL_8";
    if (value == 9) return "Ip.CONST_SPELLLEVEL_9";
    if (value == 0) return "Ip.CONST_SPELLRESISTANCEBONUS_10";
    if (value == 1) return "Ip.CONST_SPELLRESISTANCEBONUS_12";
    if (value == 2) return "Ip.CONST_SPELLRESISTANCEBONUS_14";
    if (value == 3) return "Ip.CONST_SPELLRESISTANCEBONUS_16";
    if (value == 4) return "Ip.CONST_SPELLRESISTANCEBONUS_18";
    if (value == 5) return "Ip.CONST_SPELLRESISTANCEBONUS_20";
    if (value == 6) return "Ip.CONST_SPELLRESISTANCEBONUS_22";
    if (value == 7) return "Ip.CONST_SPELLRESISTANCEBONUS_24";
    if (value == 8) return "Ip.CONST_SPELLRESISTANCEBONUS_26";
    if (value == 9) return "Ip.CONST_SPELLRESISTANCEBONUS_28";
    if (value == 10) return "Ip.CONST_SPELLRESISTANCEBONUS_30";
    if (value == 11) return "Ip.CONST_SPELLRESISTANCEBONUS_32";
    if (value == 0) return "Ip.CONST_SPELLSCHOOL_ABJURATION";
    if (value == 1) return "Ip.CONST_SPELLSCHOOL_CONJURATION";
    if (value == 2) return "Ip.CONST_SPELLSCHOOL_DIVINATION";
    if (value == 3) return "Ip.CONST_SPELLSCHOOL_ENCHANTMENT";
    if (value == 4) return "Ip.CONST_SPELLSCHOOL_EVOCATION";
    if (value == 5) return "Ip.CONST_SPELLSCHOOL_ILLUSION";
    if (value == 6) return "Ip.CONST_SPELLSCHOOL_NECROMANCY";
    if (value == 7) return "Ip.CONST_SPELLSCHOOL_TRANSMUTATION";
    if (value == 1) return "Ip.CONST_TRAPSTRENGTH_AVERAGE";
    if (value == 3) return "Ip.CONST_TRAPSTRENGTH_DEADLY";
    if (value == 0) return "Ip.CONST_TRAPSTRENGTH_MINOR";
    if (value == 2) return "Ip.CONST_TRAPSTRENGTH_STRONG";
    if (value == 9) return "Ip.CONST_TRAPTYPE_ACID_SPLASH";
    if (value == 4) return "Ip.CONST_TRAPTYPE_BLOBOFACID";
    if (value == 6) return "Ip.CONST_TRAPTYPE_ELECTRICAL";
    if (value == 5) return "Ip.CONST_TRAPTYPE_FIRE";
    if (value == 8) return "Ip.CONST_TRAPTYPE_FROST";
    if (value == 7) return "Ip.CONST_TRAPTYPE_GAS";
    if (value == 2) return "Ip.CONST_TRAPTYPE_HOLY";
    if (value == 11) return "Ip.CONST_TRAPTYPE_NEGATIVE";
    if (value == 10) return "Ip.CONST_TRAPTYPE_SONIC";
    if (value == 1) return "Ip.CONST_TRAPTYPE_SPIKE";
    if (value == 3) return "Ip.CONST_TRAPTYPE_TANGLE";
    if (value == 3) return "Ip.CONST_UNLIMITEDAMMO_1D6COLD";
    if (value == 2) return "Ip.CONST_UNLIMITEDAMMO_1D6FIRE";
    if (value == 4) return "Ip.CONST_UNLIMITEDAMMO_1D6LIGHT";
    if (value == 1) return "Ip.CONST_UNLIMITEDAMMO_BASIC";
    if (value == 11) return "Ip.CONST_UNLIMITEDAMMO_PLUS1";
    if (value == 12) return "Ip.CONST_UNLIMITEDAMMO_PLUS2";
    if (value == 13) return "Ip.CONST_UNLIMITEDAMMO_PLUS3";
    if (value == 14) return "Ip.CONST_UNLIMITEDAMMO_PLUS4";
    if (value == 15) return "Ip.CONST_UNLIMITEDAMMO_PLUS5";
    if (value == 5) return "Ip.CONST_WEIGHTINCREASE_100_LBS";
    if (value == 1) return "Ip.CONST_WEIGHTINCREASE_10_LBS";
    if (value == 2) return "Ip.CONST_WEIGHTINCREASE_15_LBS";
    if (value == 3) return "Ip.CONST_WEIGHTINCREASE_30_LBS";
    if (value == 4) return "Ip.CONST_WEIGHTINCREASE_50_LBS";
    if (value == 0) return "Ip.CONST_WEIGHTINCREASE_5_LBS";
    return "Ip.(not found: " + value + ")";
  }

  public static String nameOf(float value) {
    return "Ip.(not found: " + value + ")";
  }

  public static String nameOf(String value) {
    return "Ip.(not found: " + value + ")";
  }
}
