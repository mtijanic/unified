package org.nwnx.nwnx2.jvm.constants;

/**
 * This class contains all unique constants beginning with "SPELLABILITY".
 * Non-distinct keys are filtered; only the LAST appearing was
 * kept.
*/
public final class Spellability {
  private Spellability() {}

  public final static int AA_ARROW_OF_DEATH = 604;
  public final static int AA_HAIL_OF_ARROWS = 603;
  public final static int AA_IMBUE_ARROW = 600;
  public final static int AA_SEEKER_ARROW_1 = 601;
  public final static int AA_SEEKER_ARROW_2 = 602;
  public final static int ACTIVATE_ITEM = 386;
  public final static int AS_DARKNESS = 606;
  public final static int AS_GHOSTLY_VISAGE = 605;
  public final static int AS_IMPROVED_INVISIBLITY = 608;
  public final static int AS_INVISIBILITY = 607;
  public final static int AURA_BLINDING = 195;
  public final static int AURA_COLD = 196;
  public final static int AURA_ELECTRICITY = 197;
  public final static int AURA_FEAR = 198;
  public final static int AURA_FIRE = 199;
  public final static int AURA_HORRIFICAPPEARANCE = 804;
  public final static int AURA_MENACE = 200;
  public final static int AURA_OF_COURAGE = 314;
  public final static int AURA_PROTECTION = 201;
  public final static int AURA_STUN = 202;
  public final static int AURA_UNEARTHLY_VISAGE = 203;
  public final static int AURA_UNNATURAL = 204;
  public final static int BARBARIAN_RAGE = 307;
  public final static int BATTLE_MASTERY = 380;
  public final static int BG_BULLS_STRENGTH = 614;
  public final static int BG_CONTAGION = 613;
  public final static int BG_CREATEDEAD = 609;
  public final static int BG_FIENDISH_SERVANT = 610;
  public final static int BG_INFLICT_CRITICAL_WOUNDS = 612;
  public final static int BG_INFLICT_SERIOUS_WOUNDS = 611;
  public final static int BOLT_ABILITY_DRAIN_CHARISMA = 205;
  public final static int BOLT_ABILITY_DRAIN_CONSTITUTION = 206;
  public final static int BOLT_ABILITY_DRAIN_DEXTERITY = 207;
  public final static int BOLT_ABILITY_DRAIN_INTELLIGENCE = 208;
  public final static int BOLT_ABILITY_DRAIN_STRENGTH = 209;
  public final static int BOLT_ABILITY_DRAIN_WISDOM = 210;
  public final static int BOLT_ACID = 211;
  public final static int BOLT_CHARM = 212;
  public final static int BOLT_COLD = 213;
  public final static int BOLT_CONFUSE = 214;
  public final static int BOLT_DAZE = 215;
  public final static int BOLT_DEATH = 216;
  public final static int BOLT_DISEASE = 217;
  public final static int BOLT_DOMINATE = 218;
  public final static int BOLT_FIRE = 219;
  public final static int BOLT_KNOCKDOWN = 220;
  public final static int BOLT_LEVEL_DRAIN = 221;
  public final static int BOLT_LIGHTNING = 222;
  public final static int BOLT_PARALYZE = 223;
  public final static int BOLT_POISON = 224;
  public final static int BOLT_SHARDS = 225;
  public final static int BOLT_SLOW = 226;
  public final static int BOLT_STUN = 227;
  public final static int BOLT_WEB = 228;
  public final static int BREATH_PETRIFY = 495;
  public final static int CHARMMONSTER = 552;
  public final static int COMMAND_THE_HORDE = 571;
  public final static int CONE_ACID = 229;
  public final static int CONE_COLD = 230;
  public final static int CONE_DISEASE = 231;
  public final static int CONE_FIRE = 232;
  public final static int CONE_LIGHTNING = 233;
  public final static int CONE_POISON = 234;
  public final static int CONE_SONIC = 235;
  public final static int DC_DIVINE_WRATH = 622;
  public final static int DETECT_EVIL = 312;
  public final static int DIVINE_PROTECTION = 382;
  public final static int DIVINE_STRENGTH = 381;
  public final static int DIVINE_TRICKERY = 384;
  public final static int DRAGON_BREATH_ACID = 236;
  public final static int DRAGON_BREATH_COLD = 237;
  public final static int DRAGON_BREATH_FEAR = 238;
  public final static int DRAGON_BREATH_FIRE = 239;
  public final static int DRAGON_BREATH_GAS = 240;
  public final static int DRAGON_BREATH_LIGHTNING = 241;
  public final static int DRAGON_BREATH_NEGATIVE = 698;
  public final static int DRAGON_BREATH_PARALYZE = 242;
  public final static int DRAGON_BREATH_SLEEP = 243;
  public final static int DRAGON_BREATH_SLOW = 244;
  public final static int DRAGON_BREATH_WEAKEN = 245;
  public final static int DRAGON_FEAR = 412;
  public final static int DRAGON_WING_BUFFET = 246;
  public final static int DW_DEFENSIVE_STANCE = 641;
  public final static int ELEMENTAL_SHAPE = 319;
  public final static int EMPTY_BODY = 311;
  public final static int EPIC_CURSE_SONG = 644;
  public final static int EPIC_IMPROVED_WHIRLWIND = 645;
  public final static int EPIC_MIGHTY_RAGE = 642;
  public final static int EPIC_SHAPE_DRAGON = 647;
  public final static int EPIC_SHAPE_DRAGONKIN = 646;
  public final static int FEROCITY_1 = 247;
  public final static int FEROCITY_2 = 248;
  public final static int FEROCITY_3 = 249;
  public final static int GAZE_CHARM = 250;
  public final static int GAZE_CONFUSION = 251;
  public final static int GAZE_DAZE = 252;
  public final static int GAZE_DEATH = 253;
  public final static int GAZE_DESTROY_CHAOS = 254;
  public final static int GAZE_DESTROY_EVIL = 255;
  public final static int GAZE_DESTROY_GOOD = 256;
  public final static int GAZE_DESTROY_LAW = 257;
  public final static int GAZE_DOMINATE = 258;
  public final static int GAZE_DOOM = 259;
  public final static int GAZE_FEAR = 260;
  public final static int GAZE_PARALYSIS = 261;
  public final static int GAZE_PETRIFY = 497;
  public final static int GAZE_STUNNED = 262;
  public final static int GOLEM_BREATH_GAS = 263;
  public final static int HELL_HOUND_FIREBREATH = 264;
  public final static int HOWL_CONFUSE = 265;
  public final static int HOWL_DAZE = 266;
  public final static int HOWL_DEATH = 267;
  public final static int HOWL_DOOM = 268;
  public final static int HOWL_FEAR = 269;
  public final static int HOWL_PARALYSIS = 270;
  public final static int HOWL_SONIC = 271;
  public final static int HOWL_STUN = 272;
  public final static int INTENSITY_1 = 273;
  public final static int INTENSITY_2 = 274;
  public final static int INTENSITY_3 = 275;
  public final static int KRENSHAR_SCARE = 276;
  public final static int LAY_ON_HANDS = 313;
  public final static int LESSER_BODY_ADJUSTMENT = 277;
  public final static int MANTICORE_SPIKES = 498;
  public final static int MEPHIT_SALT_BREATH = 278;
  public final static int MEPHIT_STEAM_BREATH = 279;
  public final static int MINDBLAST = 551;
  public final static int MUMMY_BOLSTER_UNDEAD = 280;
  public final static int NEGATIVE_PLANE_AVATAR = 383;
  public final static int PM_ANIMATE_DEAD = 623;
  public final static int PM_DEATHLESS_MASTER_TOUCH = 628;
  public final static int PM_SUMMON_GREATER_UNDEAD = 627;
  public final static int PM_SUMMON_UNDEAD = 624;
  public final static int PM_UNDEAD_GRAFT_1 = 625;
  public final static int PM_UNDEAD_GRAFT_2 = 626;
  public final static int PULSE_ABILITY_DRAIN_CHARISMA = 292;
  public final static int PULSE_ABILITY_DRAIN_CONSTITUTION = 293;
  public final static int PULSE_ABILITY_DRAIN_DEXTERITY = 294;
  public final static int PULSE_ABILITY_DRAIN_INTELLIGENCE = 291;
  public final static int PULSE_ABILITY_DRAIN_STRENGTH = 295;
  public final static int PULSE_ABILITY_DRAIN_WISDOM = 296;
  public final static int PULSE_COLD = 286;
  public final static int PULSE_DEATH = 289;
  public final static int PULSE_DISEASE = 298;
  public final static int PULSE_DROWN = 281;
  public final static int PULSE_FIRE = 284;
  public final static int PULSE_HOLY = 288;
  public final static int PULSE_LEVEL_DRAIN = 290;
  public final static int PULSE_LIGHTNING = 285;
  public final static int PULSE_NEGATIVE = 287;
  public final static int PULSE_POISON = 297;
  public final static int PULSE_SPORES = 282;
  public final static int PULSE_WHIRLWIND = 283;
  public final static int QUIVERING_PALM = 310;
  public final static int RAGE_3 = 299;
  public final static int RAGE_4 = 300;
  public final static int RAGE_5 = 301;
  public final static int REMOVE_DISEASE = 316;
  public final static int ROGUES_CUNNING = 385;
  public final static int SEAHAG_EVILEYE = 803;
  public final static int SMITE_EVIL = 315;
  public final static int SMOKE_CLAW = 302;
  public final static int SUMMON_ANIMAL_COMPANION = 317;
  public final static int SUMMON_CELESTIAL = 379;
  public final static int SUMMON_FAMILIAR = 318;
  public final static int SUMMON_MEPHIT = 378;
  public final static int SUMMON_SLAAD = 303;
  public final static int SUMMON_TANARRI = 304;
  public final static int TOUCH_PETRIFY = 496;
  public final static int TROGLODYTE_STENCH = 805;
  public final static int TRUMPET_BLAST = 305;
  public final static int TURN_UNDEAD = 308;
  public final static int TYRANT_FOG_MIST = 306;
  public final static int WHIRLWIND = 561;
  public final static int WHOLENESS_OF_BODY = 309;
  public final static int WILD_SHAPE = 320;

  public static String nameOf(int value) {
    if (value == 604) return "Spellability.AA_ARROW_OF_DEATH";
    if (value == 603) return "Spellability.AA_HAIL_OF_ARROWS";
    if (value == 600) return "Spellability.AA_IMBUE_ARROW";
    if (value == 601) return "Spellability.AA_SEEKER_ARROW_1";
    if (value == 602) return "Spellability.AA_SEEKER_ARROW_2";
    if (value == 386) return "Spellability.ACTIVATE_ITEM";
    if (value == 606) return "Spellability.AS_DARKNESS";
    if (value == 605) return "Spellability.AS_GHOSTLY_VISAGE";
    if (value == 608) return "Spellability.AS_IMPROVED_INVISIBLITY";
    if (value == 607) return "Spellability.AS_INVISIBILITY";
    if (value == 195) return "Spellability.AURA_BLINDING";
    if (value == 196) return "Spellability.AURA_COLD";
    if (value == 197) return "Spellability.AURA_ELECTRICITY";
    if (value == 198) return "Spellability.AURA_FEAR";
    if (value == 199) return "Spellability.AURA_FIRE";
    if (value == 804) return "Spellability.AURA_HORRIFICAPPEARANCE";
    if (value == 200) return "Spellability.AURA_MENACE";
    if (value == 314) return "Spellability.AURA_OF_COURAGE";
    if (value == 201) return "Spellability.AURA_PROTECTION";
    if (value == 202) return "Spellability.AURA_STUN";
    if (value == 203) return "Spellability.AURA_UNEARTHLY_VISAGE";
    if (value == 204) return "Spellability.AURA_UNNATURAL";
    if (value == 307) return "Spellability.BARBARIAN_RAGE";
    if (value == 380) return "Spellability.BATTLE_MASTERY";
    if (value == 614) return "Spellability.BG_BULLS_STRENGTH";
    if (value == 613) return "Spellability.BG_CONTAGION";
    if (value == 609) return "Spellability.BG_CREATEDEAD";
    if (value == 610) return "Spellability.BG_FIENDISH_SERVANT";
    if (value == 612) return "Spellability.BG_INFLICT_CRITICAL_WOUNDS";
    if (value == 611) return "Spellability.BG_INFLICT_SERIOUS_WOUNDS";
    if (value == 205) return "Spellability.BOLT_ABILITY_DRAIN_CHARISMA";
    if (value == 206) return "Spellability.BOLT_ABILITY_DRAIN_CONSTITUTION";
    if (value == 207) return "Spellability.BOLT_ABILITY_DRAIN_DEXTERITY";
    if (value == 208) return "Spellability.BOLT_ABILITY_DRAIN_INTELLIGENCE";
    if (value == 209) return "Spellability.BOLT_ABILITY_DRAIN_STRENGTH";
    if (value == 210) return "Spellability.BOLT_ABILITY_DRAIN_WISDOM";
    if (value == 211) return "Spellability.BOLT_ACID";
    if (value == 212) return "Spellability.BOLT_CHARM";
    if (value == 213) return "Spellability.BOLT_COLD";
    if (value == 214) return "Spellability.BOLT_CONFUSE";
    if (value == 215) return "Spellability.BOLT_DAZE";
    if (value == 216) return "Spellability.BOLT_DEATH";
    if (value == 217) return "Spellability.BOLT_DISEASE";
    if (value == 218) return "Spellability.BOLT_DOMINATE";
    if (value == 219) return "Spellability.BOLT_FIRE";
    if (value == 220) return "Spellability.BOLT_KNOCKDOWN";
    if (value == 221) return "Spellability.BOLT_LEVEL_DRAIN";
    if (value == 222) return "Spellability.BOLT_LIGHTNING";
    if (value == 223) return "Spellability.BOLT_PARALYZE";
    if (value == 224) return "Spellability.BOLT_POISON";
    if (value == 225) return "Spellability.BOLT_SHARDS";
    if (value == 226) return "Spellability.BOLT_SLOW";
    if (value == 227) return "Spellability.BOLT_STUN";
    if (value == 228) return "Spellability.BOLT_WEB";
    if (value == 495) return "Spellability.BREATH_PETRIFY";
    if (value == 552) return "Spellability.CHARMMONSTER";
    if (value == 571) return "Spellability.COMMAND_THE_HORDE";
    if (value == 229) return "Spellability.CONE_ACID";
    if (value == 230) return "Spellability.CONE_COLD";
    if (value == 231) return "Spellability.CONE_DISEASE";
    if (value == 232) return "Spellability.CONE_FIRE";
    if (value == 233) return "Spellability.CONE_LIGHTNING";
    if (value == 234) return "Spellability.CONE_POISON";
    if (value == 235) return "Spellability.CONE_SONIC";
    if (value == 622) return "Spellability.DC_DIVINE_WRATH";
    if (value == 312) return "Spellability.DETECT_EVIL";
    if (value == 382) return "Spellability.DIVINE_PROTECTION";
    if (value == 381) return "Spellability.DIVINE_STRENGTH";
    if (value == 384) return "Spellability.DIVINE_TRICKERY";
    if (value == 236) return "Spellability.DRAGON_BREATH_ACID";
    if (value == 237) return "Spellability.DRAGON_BREATH_COLD";
    if (value == 238) return "Spellability.DRAGON_BREATH_FEAR";
    if (value == 239) return "Spellability.DRAGON_BREATH_FIRE";
    if (value == 240) return "Spellability.DRAGON_BREATH_GAS";
    if (value == 241) return "Spellability.DRAGON_BREATH_LIGHTNING";
    if (value == 698) return "Spellability.DRAGON_BREATH_NEGATIVE";
    if (value == 242) return "Spellability.DRAGON_BREATH_PARALYZE";
    if (value == 243) return "Spellability.DRAGON_BREATH_SLEEP";
    if (value == 244) return "Spellability.DRAGON_BREATH_SLOW";
    if (value == 245) return "Spellability.DRAGON_BREATH_WEAKEN";
    if (value == 412) return "Spellability.DRAGON_FEAR";
    if (value == 246) return "Spellability.DRAGON_WING_BUFFET";
    if (value == 641) return "Spellability.DW_DEFENSIVE_STANCE";
    if (value == 319) return "Spellability.ELEMENTAL_SHAPE";
    if (value == 311) return "Spellability.EMPTY_BODY";
    if (value == 644) return "Spellability.EPIC_CURSE_SONG";
    if (value == 645) return "Spellability.EPIC_IMPROVED_WHIRLWIND";
    if (value == 642) return "Spellability.EPIC_MIGHTY_RAGE";
    if (value == 647) return "Spellability.EPIC_SHAPE_DRAGON";
    if (value == 646) return "Spellability.EPIC_SHAPE_DRAGONKIN";
    if (value == 247) return "Spellability.FEROCITY_1";
    if (value == 248) return "Spellability.FEROCITY_2";
    if (value == 249) return "Spellability.FEROCITY_3";
    if (value == 250) return "Spellability.GAZE_CHARM";
    if (value == 251) return "Spellability.GAZE_CONFUSION";
    if (value == 252) return "Spellability.GAZE_DAZE";
    if (value == 253) return "Spellability.GAZE_DEATH";
    if (value == 254) return "Spellability.GAZE_DESTROY_CHAOS";
    if (value == 255) return "Spellability.GAZE_DESTROY_EVIL";
    if (value == 256) return "Spellability.GAZE_DESTROY_GOOD";
    if (value == 257) return "Spellability.GAZE_DESTROY_LAW";
    if (value == 258) return "Spellability.GAZE_DOMINATE";
    if (value == 259) return "Spellability.GAZE_DOOM";
    if (value == 260) return "Spellability.GAZE_FEAR";
    if (value == 261) return "Spellability.GAZE_PARALYSIS";
    if (value == 497) return "Spellability.GAZE_PETRIFY";
    if (value == 262) return "Spellability.GAZE_STUNNED";
    if (value == 263) return "Spellability.GOLEM_BREATH_GAS";
    if (value == 264) return "Spellability.HELL_HOUND_FIREBREATH";
    if (value == 265) return "Spellability.HOWL_CONFUSE";
    if (value == 266) return "Spellability.HOWL_DAZE";
    if (value == 267) return "Spellability.HOWL_DEATH";
    if (value == 268) return "Spellability.HOWL_DOOM";
    if (value == 269) return "Spellability.HOWL_FEAR";
    if (value == 270) return "Spellability.HOWL_PARALYSIS";
    if (value == 271) return "Spellability.HOWL_SONIC";
    if (value == 272) return "Spellability.HOWL_STUN";
    if (value == 273) return "Spellability.INTENSITY_1";
    if (value == 274) return "Spellability.INTENSITY_2";
    if (value == 275) return "Spellability.INTENSITY_3";
    if (value == 276) return "Spellability.KRENSHAR_SCARE";
    if (value == 313) return "Spellability.LAY_ON_HANDS";
    if (value == 277) return "Spellability.LESSER_BODY_ADJUSTMENT";
    if (value == 498) return "Spellability.MANTICORE_SPIKES";
    if (value == 278) return "Spellability.MEPHIT_SALT_BREATH";
    if (value == 279) return "Spellability.MEPHIT_STEAM_BREATH";
    if (value == 551) return "Spellability.MINDBLAST";
    if (value == 280) return "Spellability.MUMMY_BOLSTER_UNDEAD";
    if (value == 383) return "Spellability.NEGATIVE_PLANE_AVATAR";
    if (value == 623) return "Spellability.PM_ANIMATE_DEAD";
    if (value == 628) return "Spellability.PM_DEATHLESS_MASTER_TOUCH";
    if (value == 627) return "Spellability.PM_SUMMON_GREATER_UNDEAD";
    if (value == 624) return "Spellability.PM_SUMMON_UNDEAD";
    if (value == 625) return "Spellability.PM_UNDEAD_GRAFT_1";
    if (value == 626) return "Spellability.PM_UNDEAD_GRAFT_2";
    if (value == 292) return "Spellability.PULSE_ABILITY_DRAIN_CHARISMA";
    if (value == 293) return "Spellability.PULSE_ABILITY_DRAIN_CONSTITUTION";
    if (value == 294) return "Spellability.PULSE_ABILITY_DRAIN_DEXTERITY";
    if (value == 291) return "Spellability.PULSE_ABILITY_DRAIN_INTELLIGENCE";
    if (value == 295) return "Spellability.PULSE_ABILITY_DRAIN_STRENGTH";
    if (value == 296) return "Spellability.PULSE_ABILITY_DRAIN_WISDOM";
    if (value == 286) return "Spellability.PULSE_COLD";
    if (value == 289) return "Spellability.PULSE_DEATH";
    if (value == 298) return "Spellability.PULSE_DISEASE";
    if (value == 281) return "Spellability.PULSE_DROWN";
    if (value == 284) return "Spellability.PULSE_FIRE";
    if (value == 288) return "Spellability.PULSE_HOLY";
    if (value == 290) return "Spellability.PULSE_LEVEL_DRAIN";
    if (value == 285) return "Spellability.PULSE_LIGHTNING";
    if (value == 287) return "Spellability.PULSE_NEGATIVE";
    if (value == 297) return "Spellability.PULSE_POISON";
    if (value == 282) return "Spellability.PULSE_SPORES";
    if (value == 283) return "Spellability.PULSE_WHIRLWIND";
    if (value == 310) return "Spellability.QUIVERING_PALM";
    if (value == 299) return "Spellability.RAGE_3";
    if (value == 300) return "Spellability.RAGE_4";
    if (value == 301) return "Spellability.RAGE_5";
    if (value == 316) return "Spellability.REMOVE_DISEASE";
    if (value == 385) return "Spellability.ROGUES_CUNNING";
    if (value == 803) return "Spellability.SEAHAG_EVILEYE";
    if (value == 315) return "Spellability.SMITE_EVIL";
    if (value == 302) return "Spellability.SMOKE_CLAW";
    if (value == 317) return "Spellability.SUMMON_ANIMAL_COMPANION";
    if (value == 379) return "Spellability.SUMMON_CELESTIAL";
    if (value == 318) return "Spellability.SUMMON_FAMILIAR";
    if (value == 378) return "Spellability.SUMMON_MEPHIT";
    if (value == 303) return "Spellability.SUMMON_SLAAD";
    if (value == 304) return "Spellability.SUMMON_TANARRI";
    if (value == 496) return "Spellability.TOUCH_PETRIFY";
    if (value == 805) return "Spellability.TROGLODYTE_STENCH";
    if (value == 305) return "Spellability.TRUMPET_BLAST";
    if (value == 308) return "Spellability.TURN_UNDEAD";
    if (value == 306) return "Spellability.TYRANT_FOG_MIST";
    if (value == 561) return "Spellability.WHIRLWIND";
    if (value == 309) return "Spellability.WHOLENESS_OF_BODY";
    if (value == 320) return "Spellability.WILD_SHAPE";
    return "Spellability.(not found: " + value + ")";
  }

  public static String nameOf(float value) {
    return "Spellability.(not found: " + value + ")";
  }

  public static String nameOf(String value) {
    return "Spellability.(not found: " + value + ")";
  }
}
