package org.nwnx.nwnx2.jvm.constants;

/**
 * This class contains all unique constants beginning with "VFX_DUR".
 * Non-distinct keys are filtered; only the LAST appearing was
 * kept.
*/
public final class VfxDur {
  private VfxDur() {}

  public final static int ANTI_LIGHT_10 = 248;
  public final static int ARROW_IN_BACK = 635;
  public final static int ARROW_IN_CHEST_LEFT = 633;
  public final static int ARROW_IN_CHEST_RIGHT = 634;
  public final static int ARROW_IN_FACE = 637;
  public final static int ARROW_IN_HEAD = 638;
  public final static int ARROW_IN_STERNUM = 632;
  public final static int ARROW_IN_TEMPLES = 636;
  public final static int AURA_BLUE = 550;
  public final static int AURA_BLUE_DARK = 562;
  public final static int AURA_BLUE_LIGHT = 563;
  public final static int AURA_BROWN = 555;
  public final static int AURA_COLD = 267;
  public final static int AURA_CYAN = 557;
  public final static int AURA_DISEASE = 270;
  public final static int AURA_DRAGON_FEAR = 291;
  public final static int AURA_FIRE = 268;
  public final static int AURA_GREEN = 549;
  public final static int AURA_GREEN_DARK = 558;
  public final static int AURA_GREEN_LIGHT = 559;
  public final static int AURA_MAGENTA = 551;
  public final static int AURA_ODD = 271;
  public final static int AURA_ORANGE = 554;
  public final static int AURA_POISON = 269;
  public final static int AURA_PULSE_BLUE_BLACK = 529;
  public final static int AURA_PULSE_BLUE_GREEN = 523;
  public final static int AURA_PULSE_BLUE_WHITE = 513;
  public final static int AURA_PULSE_BLUE_YELLOW = 528;
  public final static int AURA_PULSE_BROWN_BLACK = 536;
  public final static int AURA_PULSE_BROWN_WHITE = 519;
  public final static int AURA_PULSE_CYAN_BLACK = 534;
  public final static int AURA_PULSE_CYAN_BLUE = 539;
  public final static int AURA_PULSE_CYAN_GREEN = 538;
  public final static int AURA_PULSE_CYAN_RED = 540;
  public final static int AURA_PULSE_CYAN_WHITE = 517;
  public final static int AURA_PULSE_CYAN_YELLOW = 541;
  public final static int AURA_PULSE_GREEN_BLACK = 531;
  public final static int AURA_PULSE_GREEN_WHITE = 514;
  public final static int AURA_PULSE_GREEN_YELLOW = 526;
  public final static int AURA_PULSE_GREY_BLACK = 522;
  public final static int AURA_PULSE_GREY_WHITE = 521;
  public final static int AURA_PULSE_MAGENTA_BLACK = 533;
  public final static int AURA_PULSE_MAGENTA_BLUE = 542;
  public final static int AURA_PULSE_MAGENTA_GREEN = 544;
  public final static int AURA_PULSE_MAGENTA_RED = 543;
  public final static int AURA_PULSE_MAGENTA_WHITE = 516;
  public final static int AURA_PULSE_MAGENTA_YELLOW = 545;
  public final static int AURA_PULSE_ORANGE_BLACK = 535;
  public final static int AURA_PULSE_ORANGE_WHITE = 518;
  public final static int AURA_PULSE_PURPLE_BLACK = 537;
  public final static int AURA_PULSE_PURPLE_WHITE = 520;
  public final static int AURA_PULSE_RED_BLACK = 530;
  public final static int AURA_PULSE_RED_BLUE = 524;
  public final static int AURA_PULSE_RED_GREEN = 527;
  public final static int AURA_PULSE_RED_ORANGE = 546;
  public final static int AURA_PULSE_RED_WHITE = 512;
  public final static int AURA_PULSE_RED_YELLOW = 525;
  public final static int AURA_PULSE_YELLOW_BLACK = 532;
  public final static int AURA_PULSE_YELLOW_ORANGE = 547;
  public final static int AURA_PULSE_YELLOW_WHITE = 515;
  public final static int AURA_PURPLE = 556;
  public final static int AURA_RED = 548;
  public final static int AURA_RED_DARK = 560;
  public final static int AURA_RED_LIGHT = 561;
  public final static int AURA_SILENCE = 272;
  public final static int AURA_WHITE = 553;
  public final static int AURA_YELLOW = 552;
  public final static int AURA_YELLOW_DARK = 564;
  public final static int AURA_YELLOW_LIGHT = 565;
  public final static int BARD_SONG = 277;
  public final static int BIGBYS_CLENCHED_FIST = 316;
  public final static int BIGBYS_CRUSHING_HAND = 317;
  public final static int BIGBYS_GRASPING_HAND = 318;
  public final static int BIGBYS_INTERPOSING_HAND = 314;
  public final static int BLACKOUT = 5;
  public final static int BLIND = 247;
  public final static int BLINDVISION = 242;
  public final static int BLUR = 0;
  public final static int BUBBLES = 566;
  public final static int CALTROPS = 319;
  public final static int CESSATE_NEGATIVE = 207;
  public final static int CESSATE_NEUTRAL = 205;
  public final static int CESSATE_POSITIVE = 206;
  public final static int CUTSCENE_INVISIBILITY = 355;
  public final static int DARKNESS = 1;
  public final static int DARKVISION = 182;
  public final static int DEATH_ARMOR = 463;
  public final static int ELEMENTAL_SHIELD = 147;
  public final static int ENTANGLE = 2;
  public final static int ETHEREAL_VISAGE = 10;
  public final static int FLAG_BLUE = 304;
  public final static int FLAG_GOLD = 305;
  public final static int FLAG_GOLD_FIXED = 306;
  public final static int FLAG_PURPLE = 306;
  public final static int FLAG_PURPLE_FIXED = 305;
  public final static int FLAG_RED = 303;
  public final static int FLIES = 480;
  public final static int FREEDOM_OF_MOVEMENT = 3;
  public final static int FREEZE_ANIMATION = 352;
  public final static int GHOSTLY_PULSE = 240;
  public final static int GHOSTLY_VISAGE = 9;
  public final static int GHOSTLY_VISAGE_NO_SOUND = 478;
  public final static int GHOST_SMOKE = 425;
  public final static int GHOST_SMOKE_2 = 479;
  public final static int GHOST_TRANSPARENT = 424;
  public final static int GLOBE_INVULNERABILITY = 4;
  public final static int GLOBE_MINOR = 220;
  public final static int GLOW_BLUE = 410;
  public final static int GLOW_BROWN = 419;
  public final static int GLOW_GREEN = 415;
  public final static int GLOW_GREY = 421;
  public final static int GLOW_LIGHT_BLUE = 408;
  public final static int GLOW_LIGHT_BROWN = 420;
  public final static int GLOW_LIGHT_GREEN = 416;
  public final static int GLOW_LIGHT_ORANGE = 418;
  public final static int GLOW_LIGHT_PURPLE = 423;
  public final static int GLOW_LIGHT_RED = 412;
  public final static int GLOW_LIGHT_YELLOW = 414;
  public final static int GLOW_ORANGE = 417;
  public final static int GLOW_PURPLE = 409;
  public final static int GLOW_RED = 411;
  public final static int GLOW_WHITE = 422;
  public final static int GLOW_YELLOW = 413;
  public final static int GLYPH_OF_WARDING = 445;
  public final static int ICESKIN = 465;
  public final static int INFERNO = 474;
  public final static int INFERNO_CHEST = 498;
  public final static int INFERNO_NO_SOUND = 505;
  public final static int INVISIBILITY = 6;
  public final static int IOUNSTONE = 403;
  public final static int IOUNSTONE_BLUE = 500;
  public final static int IOUNSTONE_GREEN = 502;
  public final static int IOUNSTONE_RED = 499;
  public final static int IOUNSTONE_YELLOW = 501;
  public final static int LIGHT = 148;
  public final static int LIGHT_BLUE_10 = 154;
  public final static int LIGHT_BLUE_15 = 155;
  public final static int LIGHT_BLUE_20 = 156;
  public final static int LIGHT_BLUE_5 = 153;
  public final static int LIGHT_GREY_10 = 178;
  public final static int LIGHT_GREY_15 = 179;
  public final static int LIGHT_GREY_20 = 180;
  public final static int LIGHT_GREY_5 = 177;
  public final static int LIGHT_ORANGE_10 = 170;
  public final static int LIGHT_ORANGE_15 = 171;
  public final static int LIGHT_ORANGE_20 = 172;
  public final static int LIGHT_ORANGE_5 = 169;
  public final static int LIGHT_PURPLE_10 = 162;
  public final static int LIGHT_PURPLE_15 = 163;
  public final static int LIGHT_PURPLE_20 = 164;
  public final static int LIGHT_PURPLE_5 = 161;
  public final static int LIGHT_RED_10 = 166;
  public final static int LIGHT_RED_15 = 167;
  public final static int LIGHT_RED_20 = 168;
  public final static int LIGHT_RED_5 = 165;
  public final static int LIGHT_WHITE_10 = 174;
  public final static int LIGHT_WHITE_15 = 175;
  public final static int LIGHT_WHITE_20 = 176;
  public final static int LIGHT_WHITE_5 = 173;
  public final static int LIGHT_YELLOW_10 = 158;
  public final static int LIGHT_YELLOW_15 = 159;
  public final static int LIGHT_YELLOW_20 = 160;
  public final static int LIGHT_YELLOW_5 = 157;
  public final static int LOWLIGHTVISION = 243;
  public final static int MAGICAL_SIGHT = 229;
  public final static int MAGIC_RESISTANCE = 249;
  public final static int MIND_AFFECTING_DISABLED = 208;
  public final static int MIND_AFFECTING_DOMINATED = 209;
  public final static int MIND_AFFECTING_FEAR = 218;
  public final static int MIND_AFFECTING_NEGATIVE = 7;
  public final static int MIND_AFFECTING_POSITIVE = 8;
  public final static int MIRV_ACID = 245;
  public final static int PARALYZED = 232;
  public final static int PARALYZE_HOLD = 82 ;
  public final static int PDK_FEAR = 628;
  public final static int PETRIFY = 351;
  public final static int PIXIEDUST = 321;
  public final static int PROTECTION_ELEMENTS = 224;
  public final static int PROTECTION_EVIL_MAJOR = 228;
  public final static int PROTECTION_EVIL_MINOR = 227;
  public final static int PROTECTION_GOOD_MAJOR = 226;
  public final static int PROTECTION_GOOD_MINOR = 225;
  public final static int PROT_BARKSKIN = 11;
  public final static int PROT_EPIC_ARMOR = 495;
  public final static int PROT_EPIC_ARMOR_2 = 497;
  public final static int PROT_GREATER_STONESKIN = 12;
  public final static int PROT_PREMONITION = 13;
  public final static int PROT_SHADOW_ARMOR = 14;
  public final static int PROT_STONESKIN = 15;
  public final static int QUILL_IN_CHEST = 639;
  public final static int SANCTUARY = 16;
  public final static int SMOKE = 320;
  public final static int SPELLTURNING = 138;
  public final static int STONEHOLD = 476;
  public final static int TENTACLE = 346;
  public final static int ULTRAVISION = 244;
  public final static int WEB = 17;
  public final static int WEB_MASS = 230;

  public static String nameOf(int value) {
    if (value == 248) return "VfxDur.ANTI_LIGHT_10";
    if (value == 635) return "VfxDur.ARROW_IN_BACK";
    if (value == 633) return "VfxDur.ARROW_IN_CHEST_LEFT";
    if (value == 634) return "VfxDur.ARROW_IN_CHEST_RIGHT";
    if (value == 637) return "VfxDur.ARROW_IN_FACE";
    if (value == 638) return "VfxDur.ARROW_IN_HEAD";
    if (value == 632) return "VfxDur.ARROW_IN_STERNUM";
    if (value == 636) return "VfxDur.ARROW_IN_TEMPLES";
    if (value == 550) return "VfxDur.AURA_BLUE";
    if (value == 562) return "VfxDur.AURA_BLUE_DARK";
    if (value == 563) return "VfxDur.AURA_BLUE_LIGHT";
    if (value == 555) return "VfxDur.AURA_BROWN";
    if (value == 267) return "VfxDur.AURA_COLD";
    if (value == 557) return "VfxDur.AURA_CYAN";
    if (value == 270) return "VfxDur.AURA_DISEASE";
    if (value == 291) return "VfxDur.AURA_DRAGON_FEAR";
    if (value == 268) return "VfxDur.AURA_FIRE";
    if (value == 549) return "VfxDur.AURA_GREEN";
    if (value == 558) return "VfxDur.AURA_GREEN_DARK";
    if (value == 559) return "VfxDur.AURA_GREEN_LIGHT";
    if (value == 551) return "VfxDur.AURA_MAGENTA";
    if (value == 271) return "VfxDur.AURA_ODD";
    if (value == 554) return "VfxDur.AURA_ORANGE";
    if (value == 269) return "VfxDur.AURA_POISON";
    if (value == 529) return "VfxDur.AURA_PULSE_BLUE_BLACK";
    if (value == 523) return "VfxDur.AURA_PULSE_BLUE_GREEN";
    if (value == 513) return "VfxDur.AURA_PULSE_BLUE_WHITE";
    if (value == 528) return "VfxDur.AURA_PULSE_BLUE_YELLOW";
    if (value == 536) return "VfxDur.AURA_PULSE_BROWN_BLACK";
    if (value == 519) return "VfxDur.AURA_PULSE_BROWN_WHITE";
    if (value == 534) return "VfxDur.AURA_PULSE_CYAN_BLACK";
    if (value == 539) return "VfxDur.AURA_PULSE_CYAN_BLUE";
    if (value == 538) return "VfxDur.AURA_PULSE_CYAN_GREEN";
    if (value == 540) return "VfxDur.AURA_PULSE_CYAN_RED";
    if (value == 517) return "VfxDur.AURA_PULSE_CYAN_WHITE";
    if (value == 541) return "VfxDur.AURA_PULSE_CYAN_YELLOW";
    if (value == 531) return "VfxDur.AURA_PULSE_GREEN_BLACK";
    if (value == 514) return "VfxDur.AURA_PULSE_GREEN_WHITE";
    if (value == 526) return "VfxDur.AURA_PULSE_GREEN_YELLOW";
    if (value == 522) return "VfxDur.AURA_PULSE_GREY_BLACK";
    if (value == 521) return "VfxDur.AURA_PULSE_GREY_WHITE";
    if (value == 533) return "VfxDur.AURA_PULSE_MAGENTA_BLACK";
    if (value == 542) return "VfxDur.AURA_PULSE_MAGENTA_BLUE";
    if (value == 544) return "VfxDur.AURA_PULSE_MAGENTA_GREEN";
    if (value == 543) return "VfxDur.AURA_PULSE_MAGENTA_RED";
    if (value == 516) return "VfxDur.AURA_PULSE_MAGENTA_WHITE";
    if (value == 545) return "VfxDur.AURA_PULSE_MAGENTA_YELLOW";
    if (value == 535) return "VfxDur.AURA_PULSE_ORANGE_BLACK";
    if (value == 518) return "VfxDur.AURA_PULSE_ORANGE_WHITE";
    if (value == 537) return "VfxDur.AURA_PULSE_PURPLE_BLACK";
    if (value == 520) return "VfxDur.AURA_PULSE_PURPLE_WHITE";
    if (value == 530) return "VfxDur.AURA_PULSE_RED_BLACK";
    if (value == 524) return "VfxDur.AURA_PULSE_RED_BLUE";
    if (value == 527) return "VfxDur.AURA_PULSE_RED_GREEN";
    if (value == 546) return "VfxDur.AURA_PULSE_RED_ORANGE";
    if (value == 512) return "VfxDur.AURA_PULSE_RED_WHITE";
    if (value == 525) return "VfxDur.AURA_PULSE_RED_YELLOW";
    if (value == 532) return "VfxDur.AURA_PULSE_YELLOW_BLACK";
    if (value == 547) return "VfxDur.AURA_PULSE_YELLOW_ORANGE";
    if (value == 515) return "VfxDur.AURA_PULSE_YELLOW_WHITE";
    if (value == 556) return "VfxDur.AURA_PURPLE";
    if (value == 548) return "VfxDur.AURA_RED";
    if (value == 560) return "VfxDur.AURA_RED_DARK";
    if (value == 561) return "VfxDur.AURA_RED_LIGHT";
    if (value == 272) return "VfxDur.AURA_SILENCE";
    if (value == 553) return "VfxDur.AURA_WHITE";
    if (value == 552) return "VfxDur.AURA_YELLOW";
    if (value == 564) return "VfxDur.AURA_YELLOW_DARK";
    if (value == 565) return "VfxDur.AURA_YELLOW_LIGHT";
    if (value == 277) return "VfxDur.BARD_SONG";
    if (value == 316) return "VfxDur.BIGBYS_CLENCHED_FIST";
    if (value == 317) return "VfxDur.BIGBYS_CRUSHING_HAND";
    if (value == 318) return "VfxDur.BIGBYS_GRASPING_HAND";
    if (value == 314) return "VfxDur.BIGBYS_INTERPOSING_HAND";
    if (value == 5) return "VfxDur.BLACKOUT";
    if (value == 247) return "VfxDur.BLIND";
    if (value == 242) return "VfxDur.BLINDVISION";
    if (value == 0) return "VfxDur.BLUR";
    if (value == 566) return "VfxDur.BUBBLES";
    if (value == 319) return "VfxDur.CALTROPS";
    if (value == 207) return "VfxDur.CESSATE_NEGATIVE";
    if (value == 205) return "VfxDur.CESSATE_NEUTRAL";
    if (value == 206) return "VfxDur.CESSATE_POSITIVE";
    if (value == 355) return "VfxDur.CUTSCENE_INVISIBILITY";
    if (value == 1) return "VfxDur.DARKNESS";
    if (value == 182) return "VfxDur.DARKVISION";
    if (value == 463) return "VfxDur.DEATH_ARMOR";
    if (value == 147) return "VfxDur.ELEMENTAL_SHIELD";
    if (value == 2) return "VfxDur.ENTANGLE";
    if (value == 10) return "VfxDur.ETHEREAL_VISAGE";
    if (value == 304) return "VfxDur.FLAG_BLUE";
    if (value == 305) return "VfxDur.FLAG_GOLD";
    if (value == 306) return "VfxDur.FLAG_GOLD_FIXED";
    if (value == 306) return "VfxDur.FLAG_PURPLE";
    if (value == 305) return "VfxDur.FLAG_PURPLE_FIXED";
    if (value == 303) return "VfxDur.FLAG_RED";
    if (value == 480) return "VfxDur.FLIES";
    if (value == 3) return "VfxDur.FREEDOM_OF_MOVEMENT";
    if (value == 352) return "VfxDur.FREEZE_ANIMATION";
    if (value == 240) return "VfxDur.GHOSTLY_PULSE";
    if (value == 9) return "VfxDur.GHOSTLY_VISAGE";
    if (value == 478) return "VfxDur.GHOSTLY_VISAGE_NO_SOUND";
    if (value == 425) return "VfxDur.GHOST_SMOKE";
    if (value == 479) return "VfxDur.GHOST_SMOKE_2";
    if (value == 424) return "VfxDur.GHOST_TRANSPARENT";
    if (value == 4) return "VfxDur.GLOBE_INVULNERABILITY";
    if (value == 220) return "VfxDur.GLOBE_MINOR";
    if (value == 410) return "VfxDur.GLOW_BLUE";
    if (value == 419) return "VfxDur.GLOW_BROWN";
    if (value == 415) return "VfxDur.GLOW_GREEN";
    if (value == 421) return "VfxDur.GLOW_GREY";
    if (value == 408) return "VfxDur.GLOW_LIGHT_BLUE";
    if (value == 420) return "VfxDur.GLOW_LIGHT_BROWN";
    if (value == 416) return "VfxDur.GLOW_LIGHT_GREEN";
    if (value == 418) return "VfxDur.GLOW_LIGHT_ORANGE";
    if (value == 423) return "VfxDur.GLOW_LIGHT_PURPLE";
    if (value == 412) return "VfxDur.GLOW_LIGHT_RED";
    if (value == 414) return "VfxDur.GLOW_LIGHT_YELLOW";
    if (value == 417) return "VfxDur.GLOW_ORANGE";
    if (value == 409) return "VfxDur.GLOW_PURPLE";
    if (value == 411) return "VfxDur.GLOW_RED";
    if (value == 422) return "VfxDur.GLOW_WHITE";
    if (value == 413) return "VfxDur.GLOW_YELLOW";
    if (value == 445) return "VfxDur.GLYPH_OF_WARDING";
    if (value == 465) return "VfxDur.ICESKIN";
    if (value == 474) return "VfxDur.INFERNO";
    if (value == 498) return "VfxDur.INFERNO_CHEST";
    if (value == 505) return "VfxDur.INFERNO_NO_SOUND";
    if (value == 6) return "VfxDur.INVISIBILITY";
    if (value == 403) return "VfxDur.IOUNSTONE";
    if (value == 500) return "VfxDur.IOUNSTONE_BLUE";
    if (value == 502) return "VfxDur.IOUNSTONE_GREEN";
    if (value == 499) return "VfxDur.IOUNSTONE_RED";
    if (value == 501) return "VfxDur.IOUNSTONE_YELLOW";
    if (value == 148) return "VfxDur.LIGHT";
    if (value == 154) return "VfxDur.LIGHT_BLUE_10";
    if (value == 155) return "VfxDur.LIGHT_BLUE_15";
    if (value == 156) return "VfxDur.LIGHT_BLUE_20";
    if (value == 153) return "VfxDur.LIGHT_BLUE_5";
    if (value == 178) return "VfxDur.LIGHT_GREY_10";
    if (value == 179) return "VfxDur.LIGHT_GREY_15";
    if (value == 180) return "VfxDur.LIGHT_GREY_20";
    if (value == 177) return "VfxDur.LIGHT_GREY_5";
    if (value == 170) return "VfxDur.LIGHT_ORANGE_10";
    if (value == 171) return "VfxDur.LIGHT_ORANGE_15";
    if (value == 172) return "VfxDur.LIGHT_ORANGE_20";
    if (value == 169) return "VfxDur.LIGHT_ORANGE_5";
    if (value == 162) return "VfxDur.LIGHT_PURPLE_10";
    if (value == 163) return "VfxDur.LIGHT_PURPLE_15";
    if (value == 164) return "VfxDur.LIGHT_PURPLE_20";
    if (value == 161) return "VfxDur.LIGHT_PURPLE_5";
    if (value == 166) return "VfxDur.LIGHT_RED_10";
    if (value == 167) return "VfxDur.LIGHT_RED_15";
    if (value == 168) return "VfxDur.LIGHT_RED_20";
    if (value == 165) return "VfxDur.LIGHT_RED_5";
    if (value == 174) return "VfxDur.LIGHT_WHITE_10";
    if (value == 175) return "VfxDur.LIGHT_WHITE_15";
    if (value == 176) return "VfxDur.LIGHT_WHITE_20";
    if (value == 173) return "VfxDur.LIGHT_WHITE_5";
    if (value == 158) return "VfxDur.LIGHT_YELLOW_10";
    if (value == 159) return "VfxDur.LIGHT_YELLOW_15";
    if (value == 160) return "VfxDur.LIGHT_YELLOW_20";
    if (value == 157) return "VfxDur.LIGHT_YELLOW_5";
    if (value == 243) return "VfxDur.LOWLIGHTVISION";
    if (value == 229) return "VfxDur.MAGICAL_SIGHT";
    if (value == 249) return "VfxDur.MAGIC_RESISTANCE";
    if (value == 208) return "VfxDur.MIND_AFFECTING_DISABLED";
    if (value == 209) return "VfxDur.MIND_AFFECTING_DOMINATED";
    if (value == 218) return "VfxDur.MIND_AFFECTING_FEAR";
    if (value == 7) return "VfxDur.MIND_AFFECTING_NEGATIVE";
    if (value == 8) return "VfxDur.MIND_AFFECTING_POSITIVE";
    if (value == 245) return "VfxDur.MIRV_ACID";
    if (value == 232) return "VfxDur.PARALYZED";
    if (value == 82 ) return "VfxDur.PARALYZE_HOLD";
    if (value == 628) return "VfxDur.PDK_FEAR";
    if (value == 351) return "VfxDur.PETRIFY";
    if (value == 321) return "VfxDur.PIXIEDUST";
    if (value == 224) return "VfxDur.PROTECTION_ELEMENTS";
    if (value == 228) return "VfxDur.PROTECTION_EVIL_MAJOR";
    if (value == 227) return "VfxDur.PROTECTION_EVIL_MINOR";
    if (value == 226) return "VfxDur.PROTECTION_GOOD_MAJOR";
    if (value == 225) return "VfxDur.PROTECTION_GOOD_MINOR";
    if (value == 11) return "VfxDur.PROT_BARKSKIN";
    if (value == 495) return "VfxDur.PROT_EPIC_ARMOR";
    if (value == 497) return "VfxDur.PROT_EPIC_ARMOR_2";
    if (value == 12) return "VfxDur.PROT_GREATER_STONESKIN";
    if (value == 13) return "VfxDur.PROT_PREMONITION";
    if (value == 14) return "VfxDur.PROT_SHADOW_ARMOR";
    if (value == 15) return "VfxDur.PROT_STONESKIN";
    if (value == 639) return "VfxDur.QUILL_IN_CHEST";
    if (value == 16) return "VfxDur.SANCTUARY";
    if (value == 320) return "VfxDur.SMOKE";
    if (value == 138) return "VfxDur.SPELLTURNING";
    if (value == 476) return "VfxDur.STONEHOLD";
    if (value == 346) return "VfxDur.TENTACLE";
    if (value == 244) return "VfxDur.ULTRAVISION";
    if (value == 17) return "VfxDur.WEB";
    if (value == 230) return "VfxDur.WEB_MASS";
    return "VfxDur.(not found: " + value + ")";
  }

  public static String nameOf(float value) {
    return "VfxDur.(not found: " + value + ")";
  }

  public static String nameOf(String value) {
    return "VfxDur.(not found: " + value + ")";
  }
}
