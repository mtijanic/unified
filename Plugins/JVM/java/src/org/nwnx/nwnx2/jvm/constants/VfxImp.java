package org.nwnx.nwnx2.jvm.constants;

/**
 * This class contains all unique constants beginning with "VFX_IMP".
 * Non-distinct keys are filtered; only the LAST appearing was
 * kept.
*/
public final class VfxImp {
  private VfxImp() {}

  public final static int ACID_L = 43 ;
  public final static int ACID_S = 44 ;
  public final static int AC_BONUS = 42 ;
  public final static int AURA_FEAR = 275;
  public final static int AURA_HOLY = 273;
  public final static int AURA_NEGATIVE_ENERGY = 276;
  public final static int AURA_UNEARTHLY = 274;
  public final static int BIGBYS_FORCEFUL_HAND = 315;
  public final static int BLIND_DEAF_M = 46 ;
  public final static int BREACH = 47 ;
  public final static int CHARM = 140;
  public final static int CONFUSION_S = 48 ;
  public final static int DAZED_S = 49 ;
  public final static int DEATH = 50 ;
  public final static int DEATH_L = 217;
  public final static int DEATH_WARD = 146;
  public final static int DESTRUCTION = 234;
  public final static int DISEASE_S = 51 ;
  public final static int DISPEL = 52 ;
  public final static int DISPEL_DISJUNCTION = 53 ;
  public final static int DIVINE_STRIKE_FIRE = 54 ;
  public final static int DIVINE_STRIKE_HOLY = 55 ;
  public final static int DOMINATE_S = 56 ;
  public final static int DOOM = 57 ;
  public final static int DUST_EXPLOSION = 460;
  public final static int ELEMENTAL_PROTECTION = 152;
  public final static int EVIL_HELP = 144;
  public final static int FEAR_S = 58 ;
  public final static int FLAME_M = 60 ;
  public final static int FLAME_S = 61 ;
  public final static int FORTITUDE_SAVING_THROW_USE = 255;
  public final static int FROST_L = 62 ;
  public final static int FROST_S = 63 ;
  public final static int GLOBE_USE = 251;
  public final static int GOOD_HELP = 145;
  public final static int GREASE = 64 ;
  public final static int HARM = 246;
  public final static int HASTE = 65 ;
  public final static int HEAD_ACID = 194;
  public final static int HEAD_COLD = 198;
  public final static int HEAD_ELECTRICITY = 197;
  public final static int HEAD_EVIL = 203;
  public final static int HEAD_FIRE = 195;
  public final static int HEAD_HEAL = 201;
  public final static int HEAD_HOLY = 199;
  public final static int HEAD_MIND = 202;
  public final static int HEAD_NATURE = 200;
  public final static int HEAD_ODD = 204;
  public final static int HEAD_SONIC = 196;
  public final static int HEALING_G = 66 ;
  public final static int HEALING_L = 67 ;
  public final static int HEALING_M = 68 ;
  public final static int HEALING_S = 69 ;
  public final static int HEALING_X = 70 ;
  public final static int HOLY_AID = 71 ;
  public final static int IMPROVE_ABILITY_SCORE = 139;
  public final static int KNOCK = 72 ;
  public final static int LIGHTNING_M = 74 ;
  public final static int LIGHTNING_S = 75 ;
  public final static int MAGBLUE = 76 ;
  public final static int MAGICAL_VISION = 141;
  public final static int MAGIC_PROTECTION = 149;
  public final static int MAGIC_RESISTANCE_USE = 250;
  public final static int MIRV = 181;
  public final static int MIRV_ELECTRIC = 503;
  public final static int MIRV_FLAME = 233;
  public final static int NEGATIVE_ENERGY = 81 ;
  public final static int NIGHTMARE_HEAD_HIT = 670;
  public final static int PDK_FINAL_STAND = 631;
  public final static int PDK_GENERIC_HEAD_HIT = 624;
  public final static int PDK_GENERIC_PULSE = 623;
  public final static int PDK_HEROIC_SHIELD = 626;
  public final static int PDK_INSPIRE_COURAGE = 627;
  public final static int PDK_OATH = 630;
  public final static int PDK_RALLYING_CRY = 625;
  public final static int PDK_WRATH = 629;
  public final static int POISON_L = 83 ;
  public final static int POISON_S = 84 ;
  public final static int POLYMORPH = 85 ;
  public final static int PULSE_COLD = 86 ;
  public final static int PULSE_FIRE = 87 ;
  public final static int PULSE_HOLY = 88 ;
  public final static int PULSE_HOLY_SILENT = 461;
  public final static int PULSE_NATURE = 266;
  public final static int PULSE_NEGATIVE = 89 ;
  public final static int PULSE_WATER = 264;
  public final static int PULSE_WIND = 265;
  public final static int RAISE_DEAD = 90 ;
  public final static int REDUCE_ABILITY_SCORE = 91 ;
  public final static int REFLEX_SAVE_THROW_USE = 256;
  public final static int REMOVE_CONDITION = 92 ;
  public final static int RESTORATION = 222;
  public final static int RESTORATION_GREATER = 223;
  public final static int RESTORATION_LESSER = 221;
  public final static int SILENCE = 93 ;
  public final static int SLEEP = 94 ;
  public final static int SLOW = 95 ;
  public final static int SONIC = 96 ;
  public final static int SPELL_MANTLE_USE = 254;
  public final static int SPIKE_TRAP = 253;
  public final static int STARBURST_GREEN = 644;
  public final static int STARBURST_RED = 645;
  public final static int STUN = 97 ;
  public final static int SUNSTRIKE = 98 ;
  public final static int SUPER_HEROISM = 150;
  public final static int TORNADO = 407;
  public final static int UNSUMMON = 99 ;
  public final static int WALLSPIKE = 486;
  public final static int WILL_SAVING_THROW_USE = 252;

  public static String nameOf(int value) {
    if (value == 43 ) return "VfxImp.ACID_L";
    if (value == 44 ) return "VfxImp.ACID_S";
    if (value == 42 ) return "VfxImp.AC_BONUS";
    if (value == 275) return "VfxImp.AURA_FEAR";
    if (value == 273) return "VfxImp.AURA_HOLY";
    if (value == 276) return "VfxImp.AURA_NEGATIVE_ENERGY";
    if (value == 274) return "VfxImp.AURA_UNEARTHLY";
    if (value == 315) return "VfxImp.BIGBYS_FORCEFUL_HAND";
    if (value == 46 ) return "VfxImp.BLIND_DEAF_M";
    if (value == 47 ) return "VfxImp.BREACH";
    if (value == 140) return "VfxImp.CHARM";
    if (value == 48 ) return "VfxImp.CONFUSION_S";
    if (value == 49 ) return "VfxImp.DAZED_S";
    if (value == 50 ) return "VfxImp.DEATH";
    if (value == 217) return "VfxImp.DEATH_L";
    if (value == 146) return "VfxImp.DEATH_WARD";
    if (value == 234) return "VfxImp.DESTRUCTION";
    if (value == 51 ) return "VfxImp.DISEASE_S";
    if (value == 52 ) return "VfxImp.DISPEL";
    if (value == 53 ) return "VfxImp.DISPEL_DISJUNCTION";
    if (value == 54 ) return "VfxImp.DIVINE_STRIKE_FIRE";
    if (value == 55 ) return "VfxImp.DIVINE_STRIKE_HOLY";
    if (value == 56 ) return "VfxImp.DOMINATE_S";
    if (value == 57 ) return "VfxImp.DOOM";
    if (value == 460) return "VfxImp.DUST_EXPLOSION";
    if (value == 152) return "VfxImp.ELEMENTAL_PROTECTION";
    if (value == 144) return "VfxImp.EVIL_HELP";
    if (value == 58 ) return "VfxImp.FEAR_S";
    if (value == 60 ) return "VfxImp.FLAME_M";
    if (value == 61 ) return "VfxImp.FLAME_S";
    if (value == 255) return "VfxImp.FORTITUDE_SAVING_THROW_USE";
    if (value == 62 ) return "VfxImp.FROST_L";
    if (value == 63 ) return "VfxImp.FROST_S";
    if (value == 251) return "VfxImp.GLOBE_USE";
    if (value == 145) return "VfxImp.GOOD_HELP";
    if (value == 64 ) return "VfxImp.GREASE";
    if (value == 246) return "VfxImp.HARM";
    if (value == 65 ) return "VfxImp.HASTE";
    if (value == 194) return "VfxImp.HEAD_ACID";
    if (value == 198) return "VfxImp.HEAD_COLD";
    if (value == 197) return "VfxImp.HEAD_ELECTRICITY";
    if (value == 203) return "VfxImp.HEAD_EVIL";
    if (value == 195) return "VfxImp.HEAD_FIRE";
    if (value == 201) return "VfxImp.HEAD_HEAL";
    if (value == 199) return "VfxImp.HEAD_HOLY";
    if (value == 202) return "VfxImp.HEAD_MIND";
    if (value == 200) return "VfxImp.HEAD_NATURE";
    if (value == 204) return "VfxImp.HEAD_ODD";
    if (value == 196) return "VfxImp.HEAD_SONIC";
    if (value == 66 ) return "VfxImp.HEALING_G";
    if (value == 67 ) return "VfxImp.HEALING_L";
    if (value == 68 ) return "VfxImp.HEALING_M";
    if (value == 69 ) return "VfxImp.HEALING_S";
    if (value == 70 ) return "VfxImp.HEALING_X";
    if (value == 71 ) return "VfxImp.HOLY_AID";
    if (value == 139) return "VfxImp.IMPROVE_ABILITY_SCORE";
    if (value == 72 ) return "VfxImp.KNOCK";
    if (value == 74 ) return "VfxImp.LIGHTNING_M";
    if (value == 75 ) return "VfxImp.LIGHTNING_S";
    if (value == 76 ) return "VfxImp.MAGBLUE";
    if (value == 141) return "VfxImp.MAGICAL_VISION";
    if (value == 149) return "VfxImp.MAGIC_PROTECTION";
    if (value == 250) return "VfxImp.MAGIC_RESISTANCE_USE";
    if (value == 181) return "VfxImp.MIRV";
    if (value == 503) return "VfxImp.MIRV_ELECTRIC";
    if (value == 233) return "VfxImp.MIRV_FLAME";
    if (value == 81 ) return "VfxImp.NEGATIVE_ENERGY";
    if (value == 670) return "VfxImp.NIGHTMARE_HEAD_HIT";
    if (value == 631) return "VfxImp.PDK_FINAL_STAND";
    if (value == 624) return "VfxImp.PDK_GENERIC_HEAD_HIT";
    if (value == 623) return "VfxImp.PDK_GENERIC_PULSE";
    if (value == 626) return "VfxImp.PDK_HEROIC_SHIELD";
    if (value == 627) return "VfxImp.PDK_INSPIRE_COURAGE";
    if (value == 630) return "VfxImp.PDK_OATH";
    if (value == 625) return "VfxImp.PDK_RALLYING_CRY";
    if (value == 629) return "VfxImp.PDK_WRATH";
    if (value == 83 ) return "VfxImp.POISON_L";
    if (value == 84 ) return "VfxImp.POISON_S";
    if (value == 85 ) return "VfxImp.POLYMORPH";
    if (value == 86 ) return "VfxImp.PULSE_COLD";
    if (value == 87 ) return "VfxImp.PULSE_FIRE";
    if (value == 88 ) return "VfxImp.PULSE_HOLY";
    if (value == 461) return "VfxImp.PULSE_HOLY_SILENT";
    if (value == 266) return "VfxImp.PULSE_NATURE";
    if (value == 89 ) return "VfxImp.PULSE_NEGATIVE";
    if (value == 264) return "VfxImp.PULSE_WATER";
    if (value == 265) return "VfxImp.PULSE_WIND";
    if (value == 90 ) return "VfxImp.RAISE_DEAD";
    if (value == 91 ) return "VfxImp.REDUCE_ABILITY_SCORE";
    if (value == 256) return "VfxImp.REFLEX_SAVE_THROW_USE";
    if (value == 92 ) return "VfxImp.REMOVE_CONDITION";
    if (value == 222) return "VfxImp.RESTORATION";
    if (value == 223) return "VfxImp.RESTORATION_GREATER";
    if (value == 221) return "VfxImp.RESTORATION_LESSER";
    if (value == 93 ) return "VfxImp.SILENCE";
    if (value == 94 ) return "VfxImp.SLEEP";
    if (value == 95 ) return "VfxImp.SLOW";
    if (value == 96 ) return "VfxImp.SONIC";
    if (value == 254) return "VfxImp.SPELL_MANTLE_USE";
    if (value == 253) return "VfxImp.SPIKE_TRAP";
    if (value == 644) return "VfxImp.STARBURST_GREEN";
    if (value == 645) return "VfxImp.STARBURST_RED";
    if (value == 97 ) return "VfxImp.STUN";
    if (value == 98 ) return "VfxImp.SUNSTRIKE";
    if (value == 150) return "VfxImp.SUPER_HEROISM";
    if (value == 407) return "VfxImp.TORNADO";
    if (value == 99 ) return "VfxImp.UNSUMMON";
    if (value == 486) return "VfxImp.WALLSPIKE";
    if (value == 252) return "VfxImp.WILL_SAVING_THROW_USE";
    return "VfxImp.(not found: " + value + ")";
  }

  public static String nameOf(float value) {
    return "VfxImp.(not found: " + value + ")";
  }

  public static String nameOf(String value) {
    return "VfxImp.(not found: " + value + ")";
  }
}
